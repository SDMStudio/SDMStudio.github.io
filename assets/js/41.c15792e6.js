(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{453:function(t,a,s){"use strict";s.r(a);var n=s(34),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"class-sdm-backwardinduction"}},[t._v("Class sdm::BackwardInduction")]),t._v(" "),s("link",{attrs:{rel:"stylesheet",href:"https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.5.1/katex.min.css"}}),t._v(" "),s("link",{attrs:{rel:"stylesheet",href:"https://cdn.jsdelivr.net/github-markdown-css/2.2.1/github-markdown.css"}}),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/doc/api/annotated.html"}},[s("strong",[t._v("Class List")])]),t._v(" "),s("strong",[t._v(">")]),t._v(" "),s("RouterLink",{attrs:{to:"/doc/api/namespacesdm.html"}},[s("strong",[t._v("sdm")])]),t._v(" "),s("strong",[t._v(">")]),t._v(" "),s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1BackwardInduction.html"}},[s("strong",[t._v("BackwardInduction")])])],1),t._v(" "),s("p",[s("em",[t._v("The algorithm")]),t._v(" "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Backward_induction",target:"_blank",rel:"noopener noreferrer"}},[t._v("Backward Induction"),s("OutboundLink")],1),t._v(" "),s("em",[t._v(".")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("#include <backward_induction.hpp>")])])]),t._v(" "),s("p",[t._v("Inherits the following classes: "),s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1Algorithm.html"}},[t._v("sdm::Algorithm")]),t._v(",  std::enable_shared_from_this< BackwardInduction >")],1),t._v(" "),s("h2",{attrs:{id:"public-functions"}},[t._v("Public Functions")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"right"}},[t._v("Type")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("Name")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"right"}}),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1BackwardInduction.html#function-backwardinduction"}},[s("strong",[t._v("BackwardInduction")])]),t._v(" (std::shared_ptr< "),s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1SolvableByHSVI.html"}},[s("strong",[t._v("SolvableByHSVI")])]),t._v(' > & world, std::string name="backward induction") '),s("br"),s("em",[t._v("Construct the Backward Induction algorithm.")])],1)]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("void")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1BackwardInduction.html#function-do-explore"}},[s("strong",[t._v("do_explore")])]),t._v(" (const std::shared_ptr< "),s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1State.html"}},[s("strong",[t._v("State")])]),t._v(" > & s, double, "),s("RouterLink",{attrs:{to:"/doc/api/namespacesdm.html#typedef-number"}},[s("strong",[t._v("number")])]),t._v(" h) "),s("br"),s("em",[t._v("Explore a state.")])],1)]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("virtual void")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1BackwardInduction.html#function-do-initialize"}},[s("strong",[t._v("do_initialize")])]),t._v(" () "),s("br"),s("em",[t._v("Initialize the algorithm.")])],1)]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("virtual void")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1BackwardInduction.html#function-do-save"}},[s("strong",[t._v("do_save")])]),t._v(" () "),s("br"),s("em",[t._v('Save the lower bound under "name_lb.bin".')])],1)]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("virtual void")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1BackwardInduction.html#function-do-solve"}},[s("strong",[t._v("do_solve")])]),t._v(" () "),s("br"),s("em",[t._v("Solve a problem with backward induction algorithm.")])],1)]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("bool")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1BackwardInduction.html#function-do-stop"}},[s("strong",[t._v("do_stop")])]),t._v(" (const std::shared_ptr< "),s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1State.html"}},[s("strong",[t._v("State")])]),t._v(" > &, double, "),s("RouterLink",{attrs:{to:"/doc/api/namespacesdm.html#typedef-number"}},[s("strong",[t._v("number")])]),t._v(") "),s("br"),s("em",[t._v("Check the end of")]),t._v(" "),s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1HSVI.html"}},[s("em",[s("strong",[t._v("HSVI")])])]),t._v(" "),s("em",[t._v("algo.")])],1)]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("virtual void")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1BackwardInduction.html#function-do-test"}},[s("strong",[t._v("do_test")])]),t._v(" () "),s("br"),s("em",[t._v("Test the learnt value function on one episode.")])],1)]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("std::shared_ptr< "),s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1ValueFunction.html"}},[s("strong",[t._v("ValueFunction")])]),t._v(" >")],1),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1BackwardInduction.html#function-getbound"}},[s("strong",[t._v("getBound")])]),t._v(" () const"),s("br"),s("em",[t._v("Get the bound value function.")])],1)]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("virtual double")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1BackwardInduction.html#function-getresult"}},[s("strong",[t._v("getResult")])]),t._v(" () "),s("br")],1)]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("virtual int")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1BackwardInduction.html#function-gettrial"}},[s("strong",[t._v("getTrial")])]),t._v(" () "),s("br")],1)]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("std::shared_ptr< "),s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1BackwardInduction.html"}},[s("strong",[t._v("BackwardInduction")])]),t._v(" >")],1),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1BackwardInduction.html#function-getptr"}},[s("strong",[t._v("getptr")])]),t._v(" () "),s("br")],1)]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("void")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1BackwardInduction.html#function-saveresults"}},[s("strong",[t._v("saveResults")])]),t._v(" (std::string filename, double other) "),s("br")],1)])])]),t._v(" "),s("h2",{attrs:{id:"public-functions-inherited-from-sdm-algorithm"}},[t._v("Public Functions inherited from sdm::Algorithm")]),t._v(" "),s("p",[t._v("See "),s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1Algorithm.html"}},[t._v("sdm::Algorithm")])],1),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"right"}},[t._v("Type")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("Name")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("virtual void")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1Algorithm.html#function-do-initialize"}},[s("strong",[t._v("do_initialize")])]),t._v(" () = 0"),s("br"),s("em",[t._v("Initialize the algorithm.")])],1)]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("virtual void")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1Algorithm.html#function-do-save"}},[s("strong",[t._v("do_save")])]),t._v(" () = 0"),s("br"),s("em",[t._v("Save the policy in a file.")])],1)]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("virtual void")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1Algorithm.html#function-do-solve"}},[s("strong",[t._v("do_solve")])]),t._v(" () = 0"),s("br"),s("em",[t._v("Solve the problem.")])],1)]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("virtual void")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1Algorithm.html#function-do-test"}},[s("strong",[t._v("do_test")])]),t._v(" () = 0"),s("br"),s("em",[t._v("Test the result of the algorithm.")])],1)]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("virtual double")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1Algorithm.html#function-getresult"}},[s("strong",[t._v("getResult")])]),t._v(" () = 0"),s("br")],1)]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("virtual int")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1Algorithm.html#function-gettrial"}},[s("strong",[t._v("getTrial")])]),t._v(" () = 0"),s("br")],1)]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("virtual")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1Algorithm.html#function-algorithm"}},[s("strong",[t._v("~Algorithm")])]),t._v(" () "),s("br")],1)])])]),t._v(" "),s("h2",{attrs:{id:"protected-attributes"}},[t._v("Protected Attributes")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"right"}},[t._v("Type")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("Name")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("std::shared_ptr< "),s("RouterLink",{attrs:{to:"/doc/api/namespacesdm.html#typedef-tabularvaluefunction"}},[s("strong",[t._v("TabularValueFunction")])]),t._v(" >")],1),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1BackwardInduction.html#variable-bound-"}},[s("strong",[t._v("bound_")])]),t._v(" "),s("br"),s("em",[t._v("representation.")])],1)]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("std::shared_ptr< "),s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1MultiLogger.html"}},[s("strong",[t._v("MultiLogger")])]),t._v(" >")],1),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1BackwardInduction.html#variable-logger-"}},[s("strong",[t._v("logger_")])]),t._v(" "),s("br"),s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1Logger.html"}},[s("em",[s("strong",[t._v("Logger")])])]),t._v(" "),s("em",[t._v(".")])],1)]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("std::string")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1BackwardInduction.html#variable-name-"}},[s("strong",[t._v("name_")])]),t._v('   = = "backward_induction"'),s("br"),s("em",[t._v("Some variables for the algorithm.")])],1)]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("std::shared_ptr< "),s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1State.html"}},[s("strong",[t._v("State")])]),t._v(" >")],1),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1BackwardInduction.html#variable-start-state"}},[s("strong",[t._v("start_state")])]),t._v(" "),s("br")],1)]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("std::shared_ptr< "),s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1SolvableByHSVI.html"}},[s("strong",[t._v("SolvableByHSVI")])]),t._v(" >")],1),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1BackwardInduction.html#variable-world-"}},[s("strong",[t._v("world_")])]),t._v(" "),s("br"),s("em",[t._v("The problem to be solved.")])],1)])])]),t._v(" "),s("h2",{attrs:{id:"public-functions-documentation"}},[t._v("Public Functions Documentation")]),t._v(" "),s("h3",{attrs:{id:"function-backwardinduction"}},[t._v("function BackwardInduction")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("sdm"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BackwardInduction")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("BackwardInduction")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("shared_ptr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" SolvableByHSVI "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" world"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("string name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"backward induction"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])]),s("p",[s("strong",[t._v("Parameters:")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("world")]),t._v(" the problem to be solved by Backward induction")]),t._v(" "),s("li",[s("code",[t._v("name")]),t._v(" the name of the algorithm (this name is used to save logs)")])]),t._v(" "),s("h3",{attrs:{id:"function-do-explore"}},[t._v("function do_explore")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" sdm"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BackwardInduction")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("do_explore")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("shared_ptr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" State "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    number h\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])]),s("p",[s("strong",[t._v("Parameters:")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("s")]),t._v(" the state to explore")]),t._v(" "),s("li",[s("code",[t._v("h")]),t._v(" the timestep of the exploration")])]),t._v(" "),s("h3",{attrs:{id:"function-do-initialize"}},[t._v("function do_initialize")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" sdm"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BackwardInduction")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("do_initialize")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])]),s("p",[t._v("Implements "),s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1Algorithm.html#function-do-initialize"}},[s("em",[t._v("sdm::Algorithm::do_initialize")])])],1),t._v(" "),s("h3",{attrs:{id:"function-do-save"}},[t._v("function do_save")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" sdm"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BackwardInduction")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("do_save")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])]),s("p",[t._v("Implements "),s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1Algorithm.html#function-do-save"}},[s("em",[t._v("sdm::Algorithm::do_save")])])],1),t._v(" "),s("h3",{attrs:{id:"function-do-solve"}},[t._v("function do_solve")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" sdm"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BackwardInduction")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("do_solve")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])]),s("p",[t._v("Implements "),s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1Algorithm.html#function-do-solve"}},[s("em",[t._v("sdm::Algorithm::do_solve")])])],1),t._v(" "),s("h3",{attrs:{id:"function-do-stop"}},[t._v("function do_stop")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" sdm"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BackwardInduction")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("do_stop")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("shared_ptr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" State "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    number\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])]),s("p",[s("strong",[t._v("Parameters:")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("s")]),t._v(" the current state")]),t._v(" "),s("li",[s("code",[t._v("h")]),t._v(" the current timestep")])]),t._v(" "),s("p",[s("strong",[t._v("Returns:")])]),t._v(" "),s("p",[t._v("true if optimal is reached or number of trials is bigger than maximal number of trials")]),t._v(" "),s("p",[s("strong",[t._v("Returns:")])]),t._v(" "),s("p",[t._v("false elsewhere")]),t._v(" "),s("h3",{attrs:{id:"function-do-test"}},[t._v("function do_test")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" sdm"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BackwardInduction")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("do_test")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])]),s("p",[t._v("Implements "),s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1Algorithm.html#function-do-test"}},[s("em",[t._v("sdm::Algorithm::do_test")])])],1),t._v(" "),s("h3",{attrs:{id:"function-getbound"}},[t._v("function getBound")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("shared_ptr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" ValueFunction "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" sdm"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BackwardInduction")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBound")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("\n")])])]),s("h3",{attrs:{id:"function-getresult"}},[t._v("function getResult")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" sdm"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BackwardInduction")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getResult")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])]),s("p",[t._v("Implements "),s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1Algorithm.html#function-getresult"}},[s("em",[t._v("sdm::Algorithm::getResult")])])],1),t._v(" "),s("h3",{attrs:{id:"function-gettrial"}},[t._v("function getTrial")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("inline")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" sdm"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BackwardInduction")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTrial")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])]),s("p",[t._v("Implements "),s("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1Algorithm.html#function-gettrial"}},[s("em",[t._v("sdm::Algorithm::getTrial")])])],1),t._v(" "),s("h3",{attrs:{id:"function-getptr"}},[t._v("function getptr")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("shared_ptr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" BackwardInduction "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" sdm"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BackwardInduction")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getptr")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])]),s("h3",{attrs:{id:"function-saveresults"}},[t._v("function saveResults")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" sdm"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BackwardInduction")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("saveResults")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("string filename"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" other\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])]),s("h2",{attrs:{id:"protected-attributes-documentation"}},[t._v("Protected Attributes Documentation")]),t._v(" "),s("h3",{attrs:{id:"variable-bound"}},[t._v("variable bound_")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("shared_ptr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("TabularValueFunction"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" sdm"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("BackwardInduction"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("bound_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"variable-logger"}},[t._v("variable logger_")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("shared_ptr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("MultiLogger"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" sdm"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("BackwardInduction"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("logger_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"variable-name"}},[t._v("variable name_")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("string sdm"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("BackwardInduction"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("name_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"variable-start-state"}},[t._v("variable start_state")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("shared_ptr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("State"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" sdm"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("BackwardInduction"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("start_state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"variable-world"}},[t._v("variable world_")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("shared_ptr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("SolvableByHSVI"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" sdm"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("BackwardInduction"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("world_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("hr"),t._v(" "),s("p",[t._v("The documentation for this class was generated from the following file "),s("code",[t._v("src/sdm/algorithms/backward_induction.hpp")])])])}),[],!1,null,null,null);a.default=e.exports}}]);