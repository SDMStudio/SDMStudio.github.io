(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{491:function(t,s,a){"use strict";a.r(s);var e=a(34),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"class-sdm-graphnode"}},[t._v("Class sdm::GraphNode")]),t._v(" "),a("link",{attrs:{rel:"stylesheet",href:"https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.5.1/katex.min.css"}}),t._v(" "),a("link",{attrs:{rel:"stylesheet",href:"https://cdn.jsdelivr.net/github-markdown-css/2.2.1/github-markdown.css"}}),t._v(" "),a("p",[a("strong",[t._v("template <typename TNode typename TNode, typename TEdge typename TEdge>")])]),t._v(" "),a("p",[a("RouterLink",{attrs:{to:"/doc/api/annotated.html"}},[a("strong",[t._v("Class List")])]),t._v(" "),a("strong",[t._v(">")]),t._v(" "),a("RouterLink",{attrs:{to:"/doc/api/namespacesdm.html"}},[a("strong",[t._v("sdm")])]),t._v(" "),a("strong",[t._v(">")]),t._v(" "),a("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1GraphNode.html"}},[a("strong",[t._v("GraphNode")])])],1),t._v(" "),a("p",[a("em",[t._v("Node of graphs.")]),t._v(" "),a("a",{attrs:{href:"#detailed-description"}},[t._v("More...")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("#include <graph_node.hpp>")])])]),t._v(" "),a("p",[t._v("Inherits the following classes: std::enable_shared_from_this< GraphNode< TNode, TEdge > >,  "),a("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1BoostSerializable.html"}},[t._v("sdm::BoostSerializable")])],1),t._v(" "),a("h2",{attrs:{id:"public-attributes"}},[t._v("Public Attributes")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"right"}},[t._v("Type")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Name")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("TNode")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1GraphNode.html#variable-data-"}},[a("strong",[t._v("data_")])]),t._v(" "),a("br"),a("em",[t._v("data of the current node")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("std::unordered_map< TEdge, std::weak_ptr< "),a("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1GraphNode.html"}},[a("strong",[t._v("GraphNode")])]),t._v(" > >")],1),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1GraphNode.html#variable-predecessors"}},[a("strong",[t._v("predecessors")])]),t._v(" "),a("br"),a("em",[t._v("List of predecessors.")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("std::unordered_map< TEdge, std::weak_ptr< "),a("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1GraphNode.html"}},[a("strong",[t._v("GraphNode")])]),t._v(" > >")],1),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1GraphNode.html#variable-successors"}},[a("strong",[t._v("successors")])]),t._v(" "),a("br"),a("em",[t._v("The map from edge value to successor.")])],1)])])]),t._v(" "),a("h2",{attrs:{id:"public-functions"}},[t._v("Public Functions")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"right"}},[t._v("Type")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Name")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"right"}}),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1GraphNode.html#function-graphnode-1-2"}},[a("strong",[t._v("GraphNode")])]),t._v(" () "),a("br"),a("em",[t._v("Default constructor object.")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}}),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1GraphNode.html#function-graphnode-2-2"}},[a("strong",[t._v("GraphNode")])]),t._v(" (const TNode & data) "),a("br"),a("em",[t._v("Construct a graph with an initial node*.")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("void")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1GraphNode.html#function-addpredecessor"}},[a("strong",[t._v("addPredecessor")])]),t._v(" (const TEdge & edge_value, const std::shared_ptr< "),a("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1GraphNode.html"}},[a("strong",[t._v("GraphNode")])]),t._v(" > & node_value) "),a("br"),a("em",[t._v("Add a predecessor to the current node.")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("void")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1GraphNode.html#function-addsuccessor"}},[a("strong",[t._v("addSuccessor")])]),t._v(" (const TEdge & edge_value, const std::shared_ptr< "),a("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1GraphNode.html"}},[a("strong",[t._v("GraphNode")])]),t._v(" > & node_value) "),a("br"),a("em",[t._v("Add a successor node.")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("TNode &&")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1GraphNode.html#function-data"}},[a("strong",[t._v("data")])]),t._v(" () const"),a("br")],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("TNode")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1GraphNode.html#function-getdata"}},[a("strong",[t._v("getData")])]),t._v(" () const"),a("br"),a("em",[t._v("Get the value of the current node.")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[a("RouterLink",{attrs:{to:"/doc/api/namespacesdm.html#typedef-number"}},[a("strong",[t._v("number")])])],1),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1GraphNode.html#function-getnumpredecessors"}},[a("strong",[t._v("getNumPredecessors")])]),t._v(" () const"),a("br"),a("em",[t._v("Get the number of predecessors.")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[a("RouterLink",{attrs:{to:"/doc/api/namespacesdm.html#typedef-number"}},[a("strong",[t._v("number")])])],1),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1GraphNode.html#function-getnumsuccessors"}},[a("strong",[t._v("getNumSuccessors")])]),t._v(" () const"),a("br"),a("em",[t._v("Get the number of successors.")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("std::shared_ptr< "),a("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1GraphNode.html"}},[a("strong",[t._v("GraphNode")])]),t._v(" >")],1),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1GraphNode.html#function-getpredecessor"}},[a("strong",[t._v("getPredecessor")])]),t._v(" (const TEdge & edge) const"),a("br"),a("em",[t._v("Get the set of all predecessors.")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("std::shared_ptr< "),a("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1GraphNode.html"}},[a("strong",[t._v("GraphNode")])]),t._v(" >")],1),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1GraphNode.html#function-getsuccessor"}},[a("strong",[t._v("getSuccessor")])]),t._v(" (const TEdge & edge) const"),a("br"),a("em",[t._v("Get the successor following a given edge.")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("std::shared_ptr< "),a("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1GraphNode.html"}},[a("strong",[t._v("GraphNode")])]),t._v(" >")],1),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1GraphNode.html#function-getptr"}},[a("strong",[t._v("getptr")])]),t._v(" () "),a("br")],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("void")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1GraphNode.html#function-serialize"}},[a("strong",[t._v("serialize")])]),t._v(" (Archive & archive, const unsigned int) "),a("br")],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("void")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1GraphNode.html#function-setdata"}},[a("strong",[t._v("setData")])]),t._v(" (const TNode & data) "),a("br")],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("std::string")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1GraphNode.html#function-str"}},[a("strong",[t._v("str")])]),t._v(" () const"),a("br")],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("virtual")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1GraphNode.html#function-graphnode"}},[a("strong",[t._v("~GraphNode")])]),t._v(" () "),a("br"),a("em",[t._v("Destructor of")]),t._v(" "),a("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1GraphNode.html"}},[a("em",[a("strong",[t._v("GraphNode")])])]),t._v(" "),a("em",[t._v(".")])],1)])])]),t._v(" "),a("h2",{attrs:{id:"public-functions-inherited-from-sdm-boostserializable"}},[t._v("Public Functions inherited from sdm::BoostSerializable")]),t._v(" "),a("p",[t._v("See "),a("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1BoostSerializable.html"}},[t._v("sdm::BoostSerializable")])],1),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"right"}},[t._v("Type")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Name")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"right"}}),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1BoostSerializable.html#function-boostserializable"}},[a("strong",[t._v("BoostSerializable")])]),t._v(" () "),a("br")],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("void")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1BoostSerializable.html#function-load"}},[a("strong",[t._v("load")])]),t._v(" (std::string filename) "),a("br"),a("em",[t._v("Load a value function from a file. The extension of the file will indicate the type of formatage for reading (")]),t._v(" "),a("code",[t._v(".txt")]),t._v(" "),a("em",[t._v("= text format, '.xml' = XML format, other = binary format).")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("void")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1BoostSerializable.html#function-save"}},[a("strong",[t._v("save")])]),t._v(" (std::string filename) "),a("br"),a("em",[t._v("Save a value function into a file. The extension of the file will indicate the type of formatage for recording (")]),t._v(" "),a("code",[t._v(".txt")]),t._v(" "),a("em",[t._v("= text format, '.xml' = XML format, other = binary format).")])],1)])])]),t._v(" "),a("h2",{attrs:{id:"protected-functions-inherited-from-sdm-boostserializable"}},[t._v("Protected Functions inherited from sdm::BoostSerializable")]),t._v(" "),a("p",[t._v("See "),a("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1BoostSerializable.html"}},[t._v("sdm::BoostSerializable")])],1),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"right"}},[t._v("Type")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Name")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"right"}},[t._v("void")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1BoostSerializable.html#function-serialize"}},[a("strong",[t._v("serialize")])]),t._v(" (Archive & archive, const unsigned int version) "),a("br")],1)])])]),t._v(" "),a("h1",{attrs:{id:"detailed-description"}},[t._v("Detailed Description")]),t._v(" "),a("p",[a("RouterLink",{attrs:{to:"/doc/api/classsdm_1_1GraphNode.html"}},[a("strong",[t._v("GraphNode")])]),t._v(" class is provide to give the user the possibility to transit directly on them. In fact, the class keep all the successors of a node in its attribute.")],1),t._v(" "),a("p",[a("strong",[t._v("Template parameters:")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("TNode")]),t._v(" the type of the data contains in each node")]),t._v(" "),a("li",[a("code",[t._v("TEdge")]),t._v(" the type of the edges between two nodes")])]),t._v(" "),a("h2",{attrs:{id:"public-attributes-documentation"}},[t._v("Public Attributes Documentation")]),t._v(" "),a("h3",{attrs:{id:"variable-data"}},[t._v("variable data_")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("TNode sdm"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("GraphNode"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" TNode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TEdge "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("data_"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"variable-predecessors"}},[t._v("variable predecessors")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("std"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("unordered_map"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("TEdge"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("weak_ptr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("GraphNode"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" sdm"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("GraphNode"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" TNode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TEdge "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("predecessors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"variable-successors"}},[t._v("variable successors")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("std"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("unordered_map"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("TEdge"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("weak_ptr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("GraphNode"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" sdm"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("GraphNode"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" TNode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TEdge "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("successors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"public-functions-documentation"}},[t._v("Public Functions Documentation")]),t._v(" "),a("h3",{attrs:{id:"function-graphnode-1-2"}},[t._v("function GraphNode [1/2]")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("sdm"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GraphNode")]),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("GraphNode")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])]),a("h3",{attrs:{id:"function-graphnode-2-2"}},[t._v("function GraphNode [2/2]")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("sdm"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GraphNode")]),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("GraphNode")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" TNode "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" data\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])]),a("p",[a("strong",[t._v("Parameters:")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("data")])])]),t._v(" "),a("h3",{attrs:{id:"function-addpredecessor"}},[t._v("function addPredecessor")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" sdm"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GraphNode")]),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addPredecessor")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" TEdge "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" edge_value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("shared_ptr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" GraphNode "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" node_value\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])]),a("p",[a("strong",[t._v("Parameters:")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("node_value")]),t._v(" the predecessor node value")])]),t._v(" "),a("h3",{attrs:{id:"function-addsuccessor"}},[t._v("function addSuccessor")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" sdm"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GraphNode")]),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addSuccessor")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" TEdge "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" edge_value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("shared_ptr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" GraphNode "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" node_value\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])]),a("p",[a("strong",[t._v("Parameters:")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("edge")]),t._v(" the edge")]),t._v(" "),a("li",[a("code",[t._v("node")]),t._v(" the successor node value")])]),t._v(" "),a("h3",{attrs:{id:"function-data"}},[t._v("function data")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("TNode "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" sdm"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GraphNode")]),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("\n")])])]),a("h3",{attrs:{id:"function-getdata"}},[t._v("function getData")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("TNode sdm"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GraphNode")]),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getData")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("\n")])])]),a("p",[a("strong",[t._v("Returns:")])]),t._v(" "),a("p",[t._v("the address of the value")]),t._v(" "),a("h3",{attrs:{id:"function-getnumpredecessors"}},[t._v("function getNumPredecessors")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("number sdm"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GraphNode")]),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getNumPredecessors")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("\n")])])]),a("h3",{attrs:{id:"function-getnumsuccessors"}},[t._v("function getNumSuccessors")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("number sdm"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GraphNode")]),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getNumSuccessors")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("\n")])])]),a("h3",{attrs:{id:"function-getpredecessor"}},[t._v("function getPredecessor")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("std"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("shared_ptr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" GraphNode "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" sdm"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GraphNode")]),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPredecessor")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" TEdge "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" edge\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("\n")])])]),a("p",[a("strong",[t._v("Returns:")])]),t._v(" "),a("p",[t._v("the set of predecessors")]),t._v(" "),a("h3",{attrs:{id:"function-getsuccessor"}},[t._v("function getSuccessor")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("std"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("shared_ptr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" GraphNode "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" sdm"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GraphNode")]),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSuccessor")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" TEdge "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" edge\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("\n")])])]),a("p",[a("strong",[t._v("Parameters:")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("edge")]),t._v(" a specific edge")])]),t._v(" "),a("p",[a("strong",[t._v("Returns:")])]),t._v(" "),a("p",[t._v("the address of the successor's node")]),t._v(" "),a("h3",{attrs:{id:"function-getptr"}},[t._v("function getptr")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("std"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("shared_ptr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" GraphNode "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" sdm"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GraphNode")]),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getptr")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])]),a("h3",{attrs:{id:"function-serialize"}},[t._v("function serialize")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Archive")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Archive")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" sdm"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GraphNode")]),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("serialize")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    Archive "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" archive"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])]),a("h3",{attrs:{id:"function-setdata"}},[t._v("function setData")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" sdm"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GraphNode")]),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setData")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" TNode "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" data\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])]),a("h3",{attrs:{id:"function-str"}},[t._v("function str")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("std"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("string sdm"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GraphNode")]),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("str")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("\n")])])]),a("h3",{attrs:{id:"function-graphnode"}},[t._v("function ~GraphNode")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" sdm"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GraphNode")]),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("GraphNode")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])]),a("h2",{attrs:{id:"friends-documentation"}},[t._v("Friends Documentation")]),t._v(" "),a("h3",{attrs:{id:"friend-operator"}},[t._v("friend operator<<")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("inline")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("friend")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("ostream "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" sdm"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("GraphNode"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("ostream "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" os"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    GraphNode "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" graph\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])]),a("hr"),t._v(" "),a("p",[t._v("The documentation for this class was generated from the following file "),a("code",[t._v("src/sdm/utils/struct/graph_node.hpp")])])])}),[],!1,null,null,null);s.default=n.exports}}]);