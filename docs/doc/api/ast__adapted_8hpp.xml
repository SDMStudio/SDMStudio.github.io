<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="ast__adapted_8hpp" kind="file" language="C++">
    <compoundname>ast_adapted.hpp</compoundname>
    <includes refid="ast_8hpp" local="no">sdm/parser/ast.hpp</includes>
    <includes local="no">boost/fusion/include/adapt_struct.hpp</includes>
    <includedby refid="parser_8cpp" local="no">/home/dalbert/Documents/SDMStudio/sdms/src/sdm/parser/parser.cpp</includedby>
    <includedby refid="parser__def_8hpp" local="no">/home/dalbert/Documents/SDMStudio/sdms/src/sdm/parser/parser_def.hpp</includedby>
    <incdepgraph>
      <node id="1470">
        <label>boost/fusion/include/adapt_struct.hpp</label>
      </node>
      <node id="1465">
        <label>sdm/parser/ast.hpp</label>
        <link refid="ast_8hpp"/>
        <childnode refid="1466" relation="include">
        </childnode>
        <childnode refid="1467" relation="include">
        </childnode>
        <childnode refid="1468" relation="include">
        </childnode>
        <childnode refid="1469" relation="include">
        </childnode>
      </node>
      <node id="1469">
        <label>string</label>
      </node>
      <node id="1464">
        <label>/home/dalbert/Documents/SDMStudio/sdms/src/sdm/parser/ast_adapted.hpp</label>
        <link refid="ast__adapted_8hpp"/>
        <childnode refid="1465" relation="include">
        </childnode>
        <childnode refid="1470" relation="include">
        </childnode>
      </node>
      <node id="1468">
        <label>vector</label>
      </node>
      <node id="1467">
        <label>boost/spirit/home/x3/support/ast/variant.hpp</label>
      </node>
      <node id="1466">
        <label>boost/spirit/home/x3/support/ast/position_tagged.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1471">
        <label>/home/dalbert/Documents/SDMStudio/sdms/src/sdm/parser/ast_adapted.hpp</label>
        <link refid="ast__adapted_8hpp"/>
        <childnode refid="1472" relation="include">
        </childnode>
        <childnode refid="1473" relation="include">
        </childnode>
      </node>
      <node id="1473">
        <label>/home/dalbert/Documents/SDMStudio/sdms/src/sdm/parser/parser_def.hpp</label>
        <link refid="parser__def_8hpp"/>
        <childnode refid="1472" relation="include">
        </childnode>
      </node>
      <node id="1472">
        <label>/home/dalbert/Documents/SDMStudio/sdms/src/sdm/parser/parser.cpp</label>
        <link refid="parser_8cpp"/>
      </node>
    </invincdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*=============================================================================</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Copyright<sp/>(c)<sp/>2016<sp/>Jilles<sp/>Steeve<sp/>Dibangoye</highlight></codeline>
<codeline lineno="3"><highlight class="comment">==============================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ast_8hpp" kindref="compound">sdm/parser/ast.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/fusion/include/adapt_struct.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="comment">//</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>tell<sp/>fusion<sp/>about<sp/>our<sp/>reward_entry_1_t<sp/>struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>make<sp/>it<sp/>a<sp/>first-class<sp/>fusion<sp/>citizen.<sp/>This<sp/>has<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>be<sp/>in<sp/>global<sp/>scope.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal">BOOST_FUSION_ADAPT_STRUCT(<ref refid="structsdm_1_1ast_1_1observation__entry__1__t" kindref="compound">sdm::ast::observation_entry_1_t</ref>,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>(<ref refid="namespacesdm_1_1ast_1a97b6f04fc82cc52f30601adf9d1fb9bb" kindref="member">sdm::ast::identifiers_t</ref>,<sp/>jaction)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>(<ref refid="structsdm_1_1ast_1_1identifier__t" kindref="compound">sdm::ast::identifier_t</ref>,<sp/>next_state)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>(<ref refid="namespacesdm_1_1ast_1a97b6f04fc82cc52f30601adf9d1fb9bb" kindref="member">sdm::ast::identifiers_t</ref>,<sp/>next_observation)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/>probability)</highlight></codeline>
<codeline lineno="21"><highlight class="normal">)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>tell<sp/>fusion<sp/>about<sp/>our<sp/>reward_entry_1_t<sp/>struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>make<sp/>it<sp/>a<sp/>first-class<sp/>fusion<sp/>citizen.<sp/>This<sp/>has<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>be<sp/>in<sp/>global<sp/>scope.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">BOOST_FUSION_ADAPT_STRUCT(<ref refid="structsdm_1_1ast_1_1observation__entry__2__t" kindref="compound">sdm::ast::observation_entry_2_t</ref>,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>(<ref refid="namespacesdm_1_1ast_1a97b6f04fc82cc52f30601adf9d1fb9bb" kindref="member">sdm::ast::identifiers_t</ref>,<sp/>jaction)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>(<ref refid="structsdm_1_1ast_1_1identifier__t" kindref="compound">sdm::ast::identifier_t</ref>,<sp/><sp/>next_state)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>(<ref refid="structsdm_1_1ast_1_1real__vector__t" kindref="compound">sdm::ast::real_vector_t</ref>,<sp/><sp/>probabilities)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>tell<sp/>fusion<sp/>about<sp/>our<sp/>reward_entry_1_t<sp/>struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>make<sp/>it<sp/>a<sp/>first-class<sp/>fusion<sp/>citizen.<sp/>This<sp/>has<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>be<sp/>in<sp/>global<sp/>scope.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">BOOST_FUSION_ADAPT_STRUCT(<ref refid="structsdm_1_1ast_1_1observation__entry__3__t" kindref="compound">sdm::ast::observation_entry_3_t</ref>,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>(<ref refid="namespacesdm_1_1ast_1a97b6f04fc82cc52f30601adf9d1fb9bb" kindref="member">sdm::ast::identifiers_t</ref>,<sp/>jaction)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>(<ref refid="structsdm_1_1ast_1_1matrix__t" kindref="compound">sdm::ast::matrix_t</ref>,<sp/><sp/>probabilities)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="44"><highlight class="comment"></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>tell<sp/>fusion<sp/>about<sp/>our<sp/>reward_entry_1_t<sp/>struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>make<sp/>it<sp/>a<sp/>first-class<sp/>fusion<sp/>citizen.<sp/>This<sp/>has<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>be<sp/>in<sp/>global<sp/>scope.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">BOOST_FUSION_ADAPT_STRUCT(<ref refid="structsdm_1_1ast_1_1transition__entry__1__t" kindref="compound">sdm::ast::transition_entry_1_t</ref>,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>(<ref refid="namespacesdm_1_1ast_1a97b6f04fc82cc52f30601adf9d1fb9bb" kindref="member">sdm::ast::identifiers_t</ref>,<sp/>jaction)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>(<ref refid="structsdm_1_1ast_1_1identifier__t" kindref="compound">sdm::ast::identifier_t</ref>,<sp/>current_state)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>(<ref refid="structsdm_1_1ast_1_1identifier__t" kindref="compound">sdm::ast::identifier_t</ref>,<sp/>next_state)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/>probability)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>tell<sp/>fusion<sp/>about<sp/>our<sp/>reward_entry_1_t<sp/>struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>make<sp/>it<sp/>a<sp/>first-class<sp/>fusion<sp/>citizen.<sp/>This<sp/>has<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>be<sp/>in<sp/>global<sp/>scope.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">BOOST_FUSION_ADAPT_STRUCT(<ref refid="structsdm_1_1ast_1_1transition__entry__2__t" kindref="compound">sdm::ast::transition_entry_2_t</ref>,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>(<ref refid="namespacesdm_1_1ast_1a97b6f04fc82cc52f30601adf9d1fb9bb" kindref="member">sdm::ast::identifiers_t</ref>,<sp/>jaction)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>(<ref refid="structsdm_1_1ast_1_1identifier__t" kindref="compound">sdm::ast::identifier_t</ref>,<sp/>current_state)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>(<ref refid="structsdm_1_1ast_1_1real__vector__t" kindref="compound">sdm::ast::real_vector_t</ref>,<sp/><sp/>probabilities)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>tell<sp/>fusion<sp/>about<sp/>our<sp/>reward_entry_1_t<sp/>struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>make<sp/>it<sp/>a<sp/>first-class<sp/>fusion<sp/>citizen.<sp/>This<sp/>has<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>be<sp/>in<sp/>global<sp/>scope.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">BOOST_FUSION_ADAPT_STRUCT(<ref refid="structsdm_1_1ast_1_1transition__entry__3__t" kindref="compound">sdm::ast::transition_entry_3_t</ref>,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>(<ref refid="namespacesdm_1_1ast_1a97b6f04fc82cc52f30601adf9d1fb9bb" kindref="member">sdm::ast::identifiers_t</ref>,<sp/>jaction)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>(<ref refid="structsdm_1_1ast_1_1matrix__t" kindref="compound">sdm::ast::matrix_t</ref>,<sp/><sp/>transitions)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="75"><highlight class="comment"></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>tell<sp/>fusion<sp/>about<sp/>our<sp/>reward_entry_1_t<sp/>struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>make<sp/>it<sp/>a<sp/>first-class<sp/>fusion<sp/>citizen.<sp/>This<sp/>has<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/>be<sp/>in<sp/>global<sp/>scope.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">BOOST_FUSION_ADAPT_STRUCT(<ref refid="structsdm_1_1ast_1_1reward__entry__1__t" kindref="compound">sdm::ast::reward_entry_1_t</ref>,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>(<ref refid="namespacesdm_1_1ast_1a97b6f04fc82cc52f30601adf9d1fb9bb" kindref="member">sdm::ast::identifiers_t</ref>,<sp/>jaction)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>(<ref refid="structsdm_1_1ast_1_1identifier__t" kindref="compound">sdm::ast::identifier_t</ref>,<sp/><ref refid="namespacesdm_1a13e6c065a1b4b44700414568be5b9586" kindref="member">state</ref>)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/>reward)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>tell<sp/>fusion<sp/>about<sp/>our<sp/>reward_entry_1_t<sp/>struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>make<sp/>it<sp/>a<sp/>first-class<sp/>fusion<sp/>citizen.<sp/>This<sp/>has<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/>be<sp/>in<sp/>global<sp/>scope.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal">BOOST_FUSION_ADAPT_STRUCT(<ref refid="structsdm_1_1ast_1_1reward__entry__2__t" kindref="compound">sdm::ast::reward_entry_2_t</ref>,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>(<ref refid="namespacesdm_1_1ast_1a97b6f04fc82cc52f30601adf9d1fb9bb" kindref="member">sdm::ast::identifiers_t</ref>,<sp/>jaction)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>(<ref refid="structsdm_1_1ast_1_1real__vector__t" kindref="compound">sdm::ast::real_vector_t</ref>,<sp/><sp/>rewards)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>tell<sp/>fusion<sp/>about<sp/>our<sp/>dpomdp<sp/>struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>make<sp/>it<sp/>a<sp/>first-class<sp/>fusion<sp/>citizen.<sp/>This<sp/>has<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/>be<sp/>in<sp/>global<sp/>scope.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal">BOOST_FUSION_ADAPT_STRUCT(<ref refid="structsdm_1_1ast_1_1dpomdp__t" kindref="compound">sdm::ast::dpomdp_t</ref>,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>(<ref refid="structsdm_1_1ast_1_1value__t" kindref="compound">sdm::ast::value_t</ref>,<sp/>agent_param)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/>discount_param)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>(std::string,<sp/>value_param)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>(<ref refid="structsdm_1_1ast_1_1value__t" kindref="compound">sdm::ast::value_t</ref>,<sp/>state_param)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>(<ref refid="structsdm_1_1ast_1_1real__vector__t" kindref="compound">sdm::ast::real_vector_t</ref>,<sp/>start_param)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>(<ref refid="structsdm_1_1ast_1_1values__t" kindref="compound">sdm::ast::values_t</ref>,<sp/>action_param)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>(<ref refid="structsdm_1_1ast_1_1values__t" kindref="compound">sdm::ast::values_t</ref>,<sp/>observation_param)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>(<ref refid="namespacesdm_1_1ast_1a6c427b4931c0b86e1ea82f3f78277181" kindref="member">sdm::ast::transition_t</ref>,<sp/>transition_spec)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>(<ref refid="namespacesdm_1_1ast_1a091008b6af233b3103bdad81d663a23c" kindref="member">sdm::ast::observation_t</ref>,<sp/>observation_spec)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>(<ref refid="namespacesdm_1_1ast_1a8c8a86c73e75c95a437610f802fae30b" kindref="member">sdm::ast::reward_t</ref>,<sp/>reward_spec)</highlight></codeline>
<codeline lineno="107"><highlight class="normal">)</highlight></codeline>
    </programlisting>
    <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/parser/ast_adapted.hpp"/>
  </compounddef>
</doxygen>
