<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classsdm_1_1DiscreteMDP" kind="class" language="C++" prot="public">
    <compoundname>sdm::DiscreteMDP</compoundname>
    <basecompoundref refid="classsdm_1_1DecisionProcess" prot="public" virt="non-virtual">sdm::DecisionProcess&lt; DiscreteSpace&lt; number &gt;, DiscreteSpace&lt; number &gt;, StateDynamics, Reward, std::discrete_distribution&lt; number &gt; &gt;</basecompoundref>
    <basecompoundref refid="classsdm_1_1SolvableByHSVI" prot="public" virt="non-virtual">sdm::SolvableByHSVI&lt; number, number &gt;</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">std::enable_shared_from_this&lt; DiscreteMDP &gt;</basecompoundref>
    <includes refid="discrete__mdp_8hpp" local="no">discrete_mdp.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsdm_1_1DiscreteMDP_1a0dfb3ad51e29fde76c1efb687bfb0cb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sdm::DiscreteMDP::DiscreteMDP</definition>
        <argsstring>()</argsstring>
        <name>DiscreteMDP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/discrete_mdp.hpp" line="33" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/discrete_mdp.cpp" bodystart="9" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1DiscreteMDP_1ac84b608e6a658bcace0ef9caef48989f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sdm::DiscreteMDP::DiscreteMDP</definition>
        <argsstring>(std::shared_ptr&lt; DiscreteSpace&lt; number &gt;&gt; state_sp, std::shared_ptr&lt; DiscreteSpace&lt; number &gt;&gt; action_sp)</argsstring>
        <name>DiscreteMDP</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classsdm_1_1DiscreteSpace" kindref="compound">DiscreteSpace</ref>&lt; <ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref> &gt;&gt;</type>
          <declname>state_sp</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classsdm_1_1DiscreteSpace" kindref="compound">DiscreteSpace</ref>&lt; <ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref> &gt;&gt;</type>
          <declname>action_sp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/discrete_mdp.hpp" line="34" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/discrete_mdp.cpp" bodystart="13" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1DiscreteMDP_1acf014c6ba30f1669b08d5e706af2d948" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sdm::DiscreteMDP::DiscreteMDP</definition>
        <argsstring>(std::shared_ptr&lt; DiscreteSpace&lt; number &gt;&gt; state_sp, std::shared_ptr&lt; DiscreteSpace&lt; number &gt;&gt; action_sp, std::discrete_distribution&lt; number &gt;)</argsstring>
        <name>DiscreteMDP</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classsdm_1_1DiscreteSpace" kindref="compound">DiscreteSpace</ref>&lt; <ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref> &gt;&gt;</type>
          <declname>state_sp</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classsdm_1_1DiscreteSpace" kindref="compound">DiscreteSpace</ref>&lt; <ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref> &gt;&gt;</type>
          <declname>action_sp</declname>
        </param>
        <param>
          <type>std::discrete_distribution&lt; <ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref> &gt;</type>
          <defname>start_distrib</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/discrete_mdp.hpp" line="35" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/discrete_mdp.cpp" bodystart="19" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1DiscreteMDP_1aa0e69e35ced2b6bc6cab1f8fb00e9c2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sdm::DiscreteMDP::DiscreteMDP</definition>
        <argsstring>(std::shared_ptr&lt; DiscreteSpace&lt; number &gt;&gt; state_sp, std::shared_ptr&lt; DiscreteSpace&lt; number &gt;&gt; action_sp, std::shared_ptr&lt; StateDynamics &gt;, std::shared_ptr&lt; Reward &gt;, std::discrete_distribution&lt; number &gt; start_distrib, number planning_horizon=0, double discount=0.9, Criterion criterion=Criterion::REW_MAX)</argsstring>
        <name>DiscreteMDP</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classsdm_1_1DiscreteSpace" kindref="compound">DiscreteSpace</ref>&lt; <ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref> &gt;&gt;</type>
          <declname>state_sp</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classsdm_1_1DiscreteSpace" kindref="compound">DiscreteSpace</ref>&lt; <ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref> &gt;&gt;</type>
          <declname>action_sp</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classsdm_1_1StateDynamics" kindref="compound">StateDynamics</ref> &gt;</type>
          <defname>state_dyn</defname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classsdm_1_1Reward" kindref="compound">Reward</ref> &gt;</type>
          <defname>rew</defname>
        </param>
        <param>
          <type>std::discrete_distribution&lt; <ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref> &gt;</type>
          <declname>start_distrib</declname>
        </param>
        <param>
          <type><ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref></type>
          <declname>planning_horizon</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>discount</declname>
          <defval>0.9</defval>
        </param>
        <param>
          <type><ref refid="namespacesdm_1ae5dbe8bf7b73a17a74ff82cc3338e088" kindref="member">Criterion</ref></type>
          <declname>criterion</declname>
          <defval>Criterion::REW_MAX</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/discrete_mdp.hpp" line="36" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/discrete_mdp.cpp" bodystart="25" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1DiscreteMDP_1ab07fd493c751649b9a883b322c9cd3b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sdm::DiscreteMDP::DiscreteMDP</definition>
        <argsstring>(std::string &amp;filename)</argsstring>
        <name>DiscreteMDP</name>
        <param>
          <type>std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/discrete_mdp.hpp" line="37" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/discrete_mdp.cpp" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1DiscreteMDP_1a16cf9c40cfa63d758e3031a408ed1871" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classsdm_1_1DiscreteMDP" kindref="compound">DiscreteMDP</ref> &gt;</type>
        <definition>std::shared_ptr&lt; DiscreteMDP &gt; sdm::DiscreteMDP::getptr</definition>
        <argsstring>()</argsstring>
        <name>getptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/discrete_mdp.hpp" line="39" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/discrete_mdp.cpp" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1DiscreteMDP_1a18e48536b15571dee68dee3b052f1d41" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classsdm_1_1Reward" kindref="compound">Reward</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Reward &gt; sdm::DiscreteMDP::getReward</definition>
        <argsstring>() const</argsstring>
        <name>getReward</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/discrete_mdp.hpp" line="40" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/discrete_mdp.cpp" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1DiscreteMDP_1a0a34a503b8fc188f02c49ea1b5ee9ab4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref></type>
        <definition>number sdm::DiscreteMDP::getInitialState</definition>
        <argsstring>()</argsstring>
        <name>getInitialState</name>
        <reimplements refid="classsdm_1_1SolvableByHSVI_1ac0a1fff056c61d42da7fe9aad571771d">getInitialState</reimplements>
        <briefdescription>
<para>Get the initial state. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/discrete_mdp.hpp" line="43" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/discrete_mdp.cpp" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1DiscreteMDP_1a2c435fcefb1c66e38c082bd0201e8217" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref></type>
        <definition>number sdm::DiscreteMDP::nextState</definition>
        <argsstring>(const number &amp;state, const number &amp;action, int t=0, HSVI&lt; number, number &gt; *hsvi=nullptr) const</argsstring>
        <name>nextState</name>
        <reimplements refid="classsdm_1_1SolvableByHSVI_1a6c4d6cfdb1211ed8a0a8a591f96cb551">nextState</reimplements>
        <param>
          <type>const <ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const <ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref> &amp;</type>
          <declname>action</declname>
        </param>
        <param>
          <type>int</type>
          <declname>t</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classsdm_1_1HSVI" kindref="compound">HSVI</ref>&lt; <ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref>, <ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref> &gt; *</type>
          <declname>hsvi</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Get the next occupancy state. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>the occupancy state </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>action</parametername>
</parameternamelist>
<parameterdescription>
<para>the action state </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>the timestep </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hsvi</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer on the algorithm that makes the call </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the next occupancy state </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/discrete_mdp.hpp" line="44" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/discrete_mdp.cpp" bodystart="42" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1DiscreteMDP_1a7eb9d6e0144f9766ba6493675ae043bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::shared_ptr&lt; <ref refid="classsdm_1_1DiscreteSpace" kindref="compound">DiscreteSpace</ref>&lt; <ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref> &gt; &gt;</type>
        <definition>std::shared_ptr&lt; DiscreteSpace&lt; number &gt; &gt; sdm::DiscreteMDP::getActionSpaceAt</definition>
        <argsstring>(const number &amp;state)</argsstring>
        <name>getActionSpaceAt</name>
        <reimplements refid="classsdm_1_1SolvableByHSVI_1a0534ed754224f9b7bc87edb08ba62d6a">getActionSpaceAt</reimplements>
        <param>
          <type>const <ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Get the actions availables at a specific state. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>the state </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the action space </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/discrete_mdp.hpp" line="45" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/discrete_mdp.cpp" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1DiscreteMDP_1a655e73a1435289c3b64e7f9876039d6d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double sdm::DiscreteMDP::getReward</definition>
        <argsstring>(const number &amp;state, const number &amp;action) const</argsstring>
        <name>getReward</name>
        <reimplements refid="classsdm_1_1SolvableByHSVI_1a02c997720580a7c9c49784addf3ffee0">getReward</reimplements>
        <param>
          <type>const <ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const <ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref> &amp;</type>
          <declname>action</declname>
        </param>
        <briefdescription>
<para>Get the reward at a given occupancy state and occupancy action. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/discrete_mdp.hpp" line="46" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/discrete_mdp.cpp" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1DiscreteMDP_1a062e2760ea16efb76d861c3735ceafb9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double sdm::DiscreteMDP::getExpectedNextValue</definition>
        <argsstring>(ValueFunction&lt; number, number &gt; *value_function, const number &amp;state, const number &amp;action, int t=0) const</argsstring>
        <name>getExpectedNextValue</name>
        <reimplements refid="classsdm_1_1SolvableByHSVI_1a8ef08843154d1145054256bd981a5b0b">getExpectedNextValue</reimplements>
        <param>
          <type><ref refid="classsdm_1_1ValueFunction" kindref="compound">ValueFunction</ref>&lt; <ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref>, <ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref> &gt; *</type>
          <declname>value_function</declname>
        </param>
        <param>
          <type>const <ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const <ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref> &amp;</type>
          <declname>action</declname>
        </param>
        <param>
          <type>int</type>
          <declname>t</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Get the expected next value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value_function</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer on the value function to use to perform the calculus. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>the state on which to evaluate the next expected value * </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>action</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/discrete_mdp.hpp" line="47" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/discrete_mdp.cpp" bodystart="72" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1DiscreteMDP_1a036b888b048ded5fa6456de6cb25b50d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classsdm_1_1DiscreteMDP" kindref="compound">DiscreteMDP</ref> *</type>
        <definition>DiscreteMDP * sdm::DiscreteMDP::getUnderlyingProblem</definition>
        <argsstring>()</argsstring>
        <name>getUnderlyingProblem</name>
        <reimplements refid="classsdm_1_1SolvableByHSVI_1a55a1920c31c0b74fa1edc954190ab820">getUnderlyingProblem</reimplements>
        <briefdescription>
<para>Get the underlying problem. For instance the underlying DecPOMDP of the <ref refid="classsdm_1_1OccupancyMDP" kindref="compound">OccupancyMDP</ref> or the underlying POMDP of the current <ref refid="classsdm_1_1BeliefMDP" kindref="compound">BeliefMDP</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the underlying problem </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/discrete_mdp.hpp" line="48" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/discrete_mdp.cpp" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1DiscreteMDP_1a14cb97ed07ad038b53d0382aaa16d0d2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool sdm::DiscreteMDP::isSerialized</definition>
        <argsstring>() const</argsstring>
        <name>isSerialized</name>
        <reimplements refid="classsdm_1_1SolvableByHSVI_1aa99d7d6e88cbf175137ca5c4412f0d12">isSerialized</reimplements>
        <briefdescription>
<para>Check if the problem is serialized. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the problem is serialized. </para></simplesect>
<simplesect kind="return"><para>false if the problem is not serialized. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/discrete_mdp.hpp" line="49" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/discrete_mdp.cpp" bodystart="87" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1DiscreteMDP_1a702941dad439079159394efdd2e553a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classsdm_1_1DiscreteMDP" kindref="compound">DiscreteMDP</ref> &gt;</type>
        <definition>std::shared_ptr&lt; DiscreteMDP &gt; sdm::DiscreteMDP::toMDP</definition>
        <argsstring>()</argsstring>
        <name>toMDP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/discrete_mdp.hpp" line="52" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/discrete_mdp.cpp" bodystart="97" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1DiscreteMDP_1af583150d0709874089e041e5272f49e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classsdm_1_1BeliefMDP" kindref="compound">BeliefMDP</ref>&lt; <ref refid="namespacesdm_1a0f879b55491e973a5c14fb31452c9a3f" kindref="member">BeliefState</ref>, <ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref>, <ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref> &gt; &gt;</type>
        <definition>std::shared_ptr&lt; BeliefMDP&lt; BeliefState, number, number &gt; &gt; sdm::DiscreteMDP::toBeliefMDP</definition>
        <argsstring>()</argsstring>
        <name>toBeliefMDP</name>
        <briefdescription>
<para>Get the corresponding Belief Markov Decision Process. Unfortunately, in this situation it isn&apos;t possible to transform a MMDP to a belief MDP. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a belief MDP </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/discrete_mdp.hpp" line="59" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/discrete_mdp.cpp" bodystart="102" bodyend="105"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class for Discrete Markov Decision Processes. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="118">
        <label>sdm::DecisionProcessBase&lt; TStateSpace, TActionSpace, TDistrib &gt;</label>
        <link refid="classsdm_1_1DecisionProcessBase"/>
        <childnode refid="119" relation="public-inheritance">
        </childnode>
      </node>
      <node id="122">
        <label>std::enable_shared_from_this&lt; DiscreteMDP &gt;</label>
      </node>
      <node id="119">
        <label>sdm::StochasticProcessBase&lt; TStateSpace, TDistrib &gt;</label>
        <link refid="classsdm_1_1StochasticProcessBase"/>
      </node>
      <node id="120">
        <label>sdm::GymInterface&lt; TObsSpace, TActionSpace &gt;</label>
        <link refid="classsdm_1_1GymInterface"/>
      </node>
      <node id="121">
        <label>sdm::SolvableByHSVI&lt; number, number &gt;</label>
        <link refid="classsdm_1_1SolvableByHSVI"/>
      </node>
      <node id="117">
        <label>FullyObservableDecisionProcess&lt; DiscreteSpace&lt; number &gt;, DiscreteSpace&lt; number &gt;, StateDynamics, Reward, std::discrete_distribution&lt; number &gt; &gt;</label>
        <link refid="classsdm_1_1DecisionProcess"/>
        <childnode refid="118" relation="public-inheritance">
        </childnode>
        <childnode refid="120" relation="public-inheritance">
        </childnode>
      </node>
      <node id="116">
        <label>sdm::DiscreteMDP</label>
        <link refid="classsdm_1_1DiscreteMDP"/>
        <childnode refid="117" relation="public-inheritance">
        </childnode>
        <childnode refid="121" relation="public-inheritance">
        </childnode>
        <childnode refid="122" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="125">
        <label>sdm::DecisionProcessBase&lt; TStateSpace, TActionSpace, TDistrib &gt;</label>
        <link refid="classsdm_1_1DecisionProcessBase"/>
        <childnode refid="126" relation="public-inheritance">
        </childnode>
      </node>
      <node id="130">
        <label>std::enable_shared_from_this&lt; DiscreteMDP &gt;</label>
      </node>
      <node id="126">
        <label>sdm::StochasticProcessBase&lt; TStateSpace, TDistrib &gt;</label>
        <link refid="classsdm_1_1StochasticProcessBase"/>
        <childnode refid="127" relation="usage">
          <edgelabel>start_distrib_</edgelabel>
        </childnode>
      </node>
      <node id="128">
        <label>sdm::GymInterface&lt; TObsSpace, TActionSpace &gt;</label>
        <link refid="classsdm_1_1GymInterface"/>
      </node>
      <node id="129">
        <label>sdm::SolvableByHSVI&lt; number, number &gt;</label>
        <link refid="classsdm_1_1SolvableByHSVI"/>
      </node>
      <node id="124">
        <label>FullyObservableDecisionProcess&lt; DiscreteSpace&lt; number &gt;, DiscreteSpace&lt; number &gt;, StateDynamics, Reward, std::discrete_distribution&lt; number &gt; &gt;</label>
        <link refid="classsdm_1_1DecisionProcess"/>
        <childnode refid="125" relation="public-inheritance">
        </childnode>
        <childnode refid="128" relation="public-inheritance">
        </childnode>
      </node>
      <node id="127">
        <label>TDistrib</label>
      </node>
      <node id="123">
        <label>sdm::DiscreteMDP</label>
        <link refid="classsdm_1_1DiscreteMDP"/>
        <childnode refid="124" relation="public-inheritance">
        </childnode>
        <childnode refid="129" relation="public-inheritance">
        </childnode>
        <childnode refid="130" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/discrete_mdp.hpp" line="31" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/discrete_mdp.hpp" bodystart="28" bodyend="61"/>
    <listofallmembers>
      <member refid="classsdm_1_1DecisionProcessBase_1a706a485a94cff279b141e8065464d1bd" prot="protected" virt="non-virtual" ambiguityscope="sdm::"><scope>sdm::DiscreteMDP</scope><name>action_space_</name></member>
      <member refid="classsdm_1_1GymInterface_1aae899a97e8aa135a4a721f492dba49c6" prot="protected" virt="non-virtual" ambiguityscope="GymInterface&lt; TObsSpace, TActionSpace &gt;::"><scope>sdm::DiscreteMDP</scope><name>action_space_</name></member>
      <member refid="classsdm_1_1DecisionProcessBase_1a554462f9481cc07ec1d5d12e891558f4" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>action_space_type</name></member>
      <member refid="classsdm_1_1DecisionProcess_1a210b0171514a8921ce1d323f77f38fd9" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>action_type</name></member>
      <member refid="classsdm_1_1DecisionProcessBase_1aa37328e03c6396d0a0349e000bde5089" prot="protected" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>bound_</name></member>
      <member refid="classsdm_1_1DecisionProcessBase_1a43becef19cca1c52ad9c891a75c56ba5" prot="protected" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>criterion_</name></member>
      <member refid="classsdm_1_1DecisionProcess_1ad9be573bf9e3ebca6c71d6a44b580862" prot="protected" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>ctimestep_</name></member>
      <member refid="classsdm_1_1DecisionProcess_1a1e206264a6a587ef7140f5d981a86704" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>DecisionProcess</name></member>
      <member refid="classsdm_1_1DecisionProcess_1a00d57c4f3b472fc3b3042693a6115b4d" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>DecisionProcess</name></member>
      <member refid="classsdm_1_1DecisionProcess_1ad0d06ae5c508d9c6bfd0075704515f3c" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>DecisionProcess</name></member>
      <member refid="classsdm_1_1DecisionProcess_1a469d9251fe9523a51a59faaf4f4a47a2" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>DecisionProcess</name></member>
      <member refid="classsdm_1_1DecisionProcess_1a14201c76f086ad7775715acd982cbadd" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>DecisionProcess</name></member>
      <member refid="classsdm_1_1DecisionProcessBase_1afb1a1866fdb98476d467b30906ee35af" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>DecisionProcessBase</name></member>
      <member refid="classsdm_1_1DecisionProcessBase_1a39dc380f05f1c97d1dd192942962e425" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>DecisionProcessBase</name></member>
      <member refid="classsdm_1_1DecisionProcessBase_1a2a61e27df1b6ae85451a53ef3d29688f" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>DecisionProcessBase</name></member>
      <member refid="classsdm_1_1DecisionProcessBase_1a18fce9ae19def798263132db84f26fc9" prot="protected" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>discount_</name></member>
      <member refid="classsdm_1_1DiscreteMDP_1a0dfb3ad51e29fde76c1efb687bfb0cb6" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>DiscreteMDP</name></member>
      <member refid="classsdm_1_1DiscreteMDP_1ac84b608e6a658bcace0ef9caef48989f" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>DiscreteMDP</name></member>
      <member refid="classsdm_1_1DiscreteMDP_1acf014c6ba30f1669b08d5e706af2d948" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>DiscreteMDP</name></member>
      <member refid="classsdm_1_1DiscreteMDP_1aa0e69e35ced2b6bc6cab1f8fb00e9c2e" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>DiscreteMDP</name></member>
      <member refid="classsdm_1_1DiscreteMDP_1ab07fd493c751649b9a883b322c9cd3b3" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>DiscreteMDP</name></member>
      <member refid="classsdm_1_1DecisionProcess_1a51889cb5844023011066de63a9368dd2" prot="protected" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>dynamics_generator</name></member>
      <member refid="classsdm_1_1DecisionProcessBase_1a7aa1f8704b7c06272c6cf2d6e5683fd1" prot="protected" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>filename_</name></member>
      <member refid="classsdm_1_1DecisionProcess_1a4144001b1963beffba71ded7da6fdbe3" prot="protected" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>getAction</name></member>
      <member refid="classsdm_1_1DecisionProcess_1a702cc18499aa05f7e341e66ccf29cc8d" prot="protected" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>getAction</name></member>
      <member refid="classsdm_1_1DecisionProcess_1a9a4c657aabce9a6c8f6f831a0f5a8d1f" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>getActionSpace</name></member>
      <member refid="classsdm_1_1DiscreteMDP_1a7eb9d6e0144f9766ba6493675ae043bc" prot="public" virt="virtual"><scope>sdm::DiscreteMDP</scope><name>getActionSpaceAt</name></member>
      <member refid="classsdm_1_1DecisionProcessBase_1acd6ffab9ba1b91474ccd2c66eaae59e6" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>getBound</name></member>
      <member refid="classsdm_1_1DecisionProcessBase_1af0962b00b158dd080b3081c83dd3bf71" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>getCriterion</name></member>
      <member refid="classsdm_1_1DecisionProcessBase_1acdc7cf2f55e34b8341d706bc29e54c58" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>getDiscount</name></member>
      <member refid="classsdm_1_1DiscreteMDP_1a062e2760ea16efb76d861c3735ceafb9" prot="public" virt="virtual"><scope>sdm::DiscreteMDP</scope><name>getExpectedNextValue</name></member>
      <member refid="classsdm_1_1DecisionProcessBase_1a48c0f57461a9cafc9f2c905ebcb3ba10" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>getFileName</name></member>
      <member refid="classsdm_1_1DiscreteMDP_1a0a34a503b8fc188f02c49ea1b5ee9ab4" prot="public" virt="virtual"><scope>sdm::DiscreteMDP</scope><name>getInitialState</name></member>
      <member refid="classsdm_1_1StochasticProcessBase_1a90e15c19c1d01c277c89413f122a7289" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>getInternalState</name></member>
      <member refid="classsdm_1_1DecisionProcess_1a568355e6786b85142e99617ee2fe139a" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>getNextStateDistrib</name></member>
      <member refid="classsdm_1_1DecisionProcess_1a87499df5ba366c70bb7f10fee295b489" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>getNextStateDistrib</name></member>
      <member refid="classsdm_1_1DecisionProcess_1a1655a222c82efd4c5edf5ccebe644e91" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>getNumAgents</name></member>
      <member refid="classsdm_1_1DecisionProcess_1ad46fdde16bd6e0e59afa4f094bb001b0" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>getNumAgents</name></member>
      <member refid="classsdm_1_1GymInterface_1a88a433a54b817f6d8b269f0d72a140f5" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>getObsSpace</name></member>
      <member refid="classsdm_1_1DecisionProcessBase_1aeba2361646ec5febbb18d31d7a9d2a75" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>getPlanningHorizon</name></member>
      <member refid="classsdm_1_1DiscreteMDP_1a16cf9c40cfa63d758e3031a408ed1871" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>getptr</name></member>
      <member refid="classsdm_1_1DiscreteMDP_1a18e48536b15571dee68dee3b052f1d41" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>getReward</name></member>
      <member refid="classsdm_1_1DiscreteMDP_1a655e73a1435289c3b64e7f9876039d6d" prot="public" virt="virtual"><scope>sdm::DiscreteMDP</scope><name>getReward</name></member>
      <member refid="classsdm_1_1DecisionProcess_1ad38bc92d578c37687479a03167131593" prot="public" virt="non-virtual" ambiguityscope="sdm::DecisionProcess::"><scope>sdm::DiscreteMDP</scope><name>getReward</name></member>
      <member refid="classsdm_1_1StochasticProcessBase_1abfc0284a6d1e969da12f24f8af891fbb" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>getStartDistrib</name></member>
      <member refid="classsdm_1_1DecisionProcess_1a3db63f5b480b93afbd8ae76d15805212" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>getStateDynamics</name></member>
      <member refid="classsdm_1_1StochasticProcessBase_1a9dc90273591c32b94a344fef1d064ffb" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>getStateSpace</name></member>
      <member refid="classsdm_1_1DiscreteMDP_1a036b888b048ded5fa6456de6cb25b50d" prot="public" virt="virtual"><scope>sdm::DiscreteMDP</scope><name>getUnderlyingProblem</name></member>
      <member refid="classsdm_1_1GymInterface_1ab09a1f16238e32e4c7eb0f3a21a31994" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>GymInterface</name></member>
      <member refid="classsdm_1_1GymInterface_1a1b7fabd846221aef6181e1f912fb139c" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>GymInterface</name></member>
      <member refid="classsdm_1_1DiscreteMDP_1a14cb97ed07ad038b53d0382aaa16d0d2" prot="public" virt="virtual"><scope>sdm::DiscreteMDP</scope><name>isSerialized</name></member>
      <member refid="classsdm_1_1DiscreteMDP_1a2c435fcefb1c66e38c082bd0201e8217" prot="public" virt="virtual"><scope>sdm::DiscreteMDP</scope><name>nextState</name></member>
      <member refid="classsdm_1_1GymInterface_1a7ea98cfed78b732d9cf7e479d1bf574a" prot="protected" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>observation_space_</name></member>
      <member refid="classsdm_1_1DecisionProcess_1a4c91a279593d8ee66794c4c9bd11f511" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>observation_type</name></member>
      <member refid="classsdm_1_1DecisionProcessBase_1a96a1140c14aa66d4a4825ab31ef4f447" prot="protected" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>planning_horizon_</name></member>
      <member refid="classsdm_1_1DecisionProcess_1a3320d30ba06078bdb1277cedebe94aa4" prot="public" virt="virtual"><scope>sdm::DiscreteMDP</scope><name>reset</name></member>
      <member refid="classsdm_1_1DecisionProcess_1a09090330a8b8c8a416af4e540bd4c0bc" prot="protected" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>resetProcess</name></member>
      <member refid="classsdm_1_1DecisionProcess_1aa2edafdc1da40fd161d721dcb17d372e" prot="protected" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>resetProcess</name></member>
      <member refid="classsdm_1_1DecisionProcess_1a8ae83616e6608d383f7f5467c322d627" prot="protected" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>reward_function_</name></member>
      <member refid="classsdm_1_1DecisionProcessBase_1a97a8581b7d9c8e4df77a8ab90e272805" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>setActionSpace</name></member>
      <member refid="classsdm_1_1DecisionProcessBase_1ac6a55386b8c18e061532e04e3e815bc1" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>setBound</name></member>
      <member refid="classsdm_1_1DecisionProcessBase_1a063a77b119cba0d6044795e4c969d8c2" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>setCriterion</name></member>
      <member refid="classsdm_1_1DecisionProcessBase_1adccd3435b765bdd803535f51aeda761b" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>setDiscount</name></member>
      <member refid="classsdm_1_1DecisionProcessBase_1afc28be7e714205bcbc9ba1e7428276a0" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>setFileName</name></member>
      <member refid="classsdm_1_1StochasticProcessBase_1aa7e0f42e5db9e618b9f1dfa4cb5a9e5c" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>setInternalState</name></member>
      <member refid="classsdm_1_1DecisionProcessBase_1a5dbbb11960d4aaa218f263d6cf2a7c9f" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>setPlanningHorizon</name></member>
      <member refid="classsdm_1_1DecisionProcess_1a2d49356e31d23bfc1498ef6319d698c3" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>setReward</name></member>
      <member refid="classsdm_1_1StochasticProcessBase_1a368ac22926cd10dffdfb80ef90b53956" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>setStartDistrib</name></member>
      <member refid="classsdm_1_1DecisionProcess_1aa4b494de50acc3dc2a5a63561d6af6ae" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>setStateDynamics</name></member>
      <member refid="classsdm_1_1StochasticProcessBase_1afc32b6f464dda5cf90e9344c093939e4" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>setStateSpace</name></member>
      <member refid="classsdm_1_1DecisionProcess_1a7845f4814d39dac84703148851343ab4" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>setupDynamicsGenerator</name></member>
      <member refid="classsdm_1_1DecisionProcess_1ab56c18e7b3eca0857ce1d663580fccab" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>setupDynamicsGenerator</name></member>
      <member refid="classsdm_1_1StochasticProcessBase_1a9214a00a2dcd3e36b97d0bc25a810eac" prot="protected" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>start_distrib_</name></member>
      <member refid="classsdm_1_1DecisionProcess_1a804f28543080200e6d0a89dafe28f2b8" prot="protected" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>state_dynamics_</name></member>
      <member refid="classsdm_1_1StochasticProcessBase_1ad7e5061186e3bc008ba7070722607417" prot="protected" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>state_space_</name></member>
      <member refid="classsdm_1_1StochasticProcessBase_1a44c8f655596252c3ae7d86501dbd8f8a" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>state_space_type</name></member>
      <member refid="classsdm_1_1DecisionProcess_1a0669f936479dad53fd5c66423053ed90" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>state_type</name></member>
      <member refid="classsdm_1_1DecisionProcess_1afc7efa7d0709a216514dad352774c158" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>step</name></member>
      <member refid="classsdm_1_1GymInterface_1a78aa80d55b7efe06c82370e3a13f5ca7" prot="public" virt="non-virtual" ambiguityscope="GymInterface&lt; TObsSpace, TActionSpace &gt;::"><scope>sdm::DiscreteMDP</scope><name>step</name></member>
      <member refid="classsdm_1_1StochasticProcessBase_1a292d1adb7db2763a2219154be7071604" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>StochasticProcessBase</name></member>
      <member refid="classsdm_1_1StochasticProcessBase_1ad84c54a9bc25f326b3d3b1f4aa80d833" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>StochasticProcessBase</name></member>
      <member refid="classsdm_1_1StochasticProcessBase_1a726d046dafd94ba58564d84c561c56a4" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>StochasticProcessBase</name></member>
      <member refid="classsdm_1_1DiscreteMDP_1af583150d0709874089e041e5272f49e0" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>toBeliefMDP</name></member>
      <member refid="classsdm_1_1DiscreteMDP_1a702941dad439079159394efdd2e553a2" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>toMDP</name></member>
      <member refid="classsdm_1_1DecisionProcess_1a9434bfb4c75ad160e26980af433d4dac" prot="public" virt="non-virtual"><scope>sdm::DiscreteMDP</scope><name>updateState_getObs</name></member>
      <member refid="classsdm_1_1DecisionProcess_1ab9f6d1c6eef2994cc106a3b6d4297613" prot="public" virt="virtual"><scope>sdm::DiscreteMDP</scope><name>~DecisionProcess</name></member>
      <member refid="classsdm_1_1SolvableByHSVI_1a83b0c3e1bff936e75cc312575fb6538e" prot="public" virt="virtual"><scope>sdm::DiscreteMDP</scope><name>~SolvableByHSVI</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
