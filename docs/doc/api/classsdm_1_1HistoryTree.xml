<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classsdm_1_1HistoryTree" kind="class" language="C++" prot="public">
    <compoundname>sdm::HistoryTree</compoundname>
    <basecompoundref refid="classsdm_1_1Tree" prot="public" virt="non-virtual">sdm::Tree&lt; T &gt;</basecompoundref>
    <includes refid="history__tree_8hpp" local="no">history_tree.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classsdm_1_1HistoryTree_1ad87cac9a374fae75390a4db2c87c545b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename output</type>
            <defval><ref refid="classsdm_1_1HistoryTree" kindref="compound">HistoryTree</ref>&lt;T&gt;</defval>
          </param>
        </templateparamlist>
        <type>std::shared_ptr&lt; output &gt;</type>
        <definition>HistoryTree&lt; T &gt; * sdm::HistoryTree&lt; T &gt;::truncatedExpand</definition>
        <argsstring>(const T &amp;data, bool backup)</argsstring>
        <name>truncatedExpand</name>
        <param>
          <type>const T &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>backup</declname>
        </param>
        <briefdescription>
<para>Expands the tree using truncated expand method. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the data of the expanded node </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backup</parametername>
</parameternamelist>
<parameterdescription>
<para>wheter the node is marked or not </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the truncated expanded tree </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/state/history_tree.hpp" line="38" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsdm_1_1HistoryTree_1acd499cbf843121a8c749322b4e954410" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sdm::HistoryTree&lt; T &gt;::HistoryTree</definition>
        <argsstring>()</argsstring>
        <name>HistoryTree</name>
        <briefdescription>
<para>Default constructor. This constructor builds a default and empty tree. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/state/history_tree.hpp" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1HistoryTree_1a991ad0e59b88c429d4b798e49e7f59af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sdm::HistoryTree&lt; T &gt;::HistoryTree</definition>
        <argsstring>(number max_depth)</argsstring>
        <name>HistoryTree</name>
        <param>
          <type><ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref></type>
          <declname>max_depth</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classsdm_1_1Tree" kindref="compound">Tree</ref> object (the origin) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the value of the origin </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/state/history_tree.hpp" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1HistoryTree_1a752d6c32b0ed475efede5d63017b17f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sdm::HistoryTree&lt; T &gt;::HistoryTree</definition>
        <argsstring>(std::shared_ptr&lt; HistoryTree&lt; T &gt;&gt; parent, const T &amp;item)</argsstring>
        <name>HistoryTree</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classsdm_1_1HistoryTree" kindref="compound">HistoryTree</ref>&lt; T &gt;&gt;</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/state/history_tree.hpp" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1HistoryTree_1a002cf5d2234fb407166281ae56e32efe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename output</type>
            <defval><ref refid="classsdm_1_1HistoryTree" kindref="compound">HistoryTree</ref>&lt;T&gt;</defval>
          </param>
        </templateparamlist>
        <type>std::shared_ptr&lt; output &gt;</type>
        <definition>HistoryTree&lt; T &gt; * sdm::HistoryTree&lt; T &gt;::expand</definition>
        <argsstring>(const T &amp;data, bool backup=true)</argsstring>
        <name>expand</name>
        <param>
          <type>const T &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>backup</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Expands the tree. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the data of the expanded node </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the expanded tree</para></simplesect>
If child leading from the item previously exists, the method return that child. Otherwise, it expands the tree by adding an item at the current leaf of the tree and creating if necessary a corresponding child. The constructed child is returned. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/state/history_tree.hpp" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1HistoryTree_1a6c00749573e0fba6dd0d99376bb8803d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref></type>
        <definition>number sdm::HistoryTree&lt; T &gt;::getHorizon</definition>
        <argsstring>() const</argsstring>
        <name>getHorizon</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/state/history_tree.hpp" line="79" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="252">
        <label>std::enable_shared_from_this&lt; Tree&lt; T &gt; &gt;</label>
      </node>
      <node id="250">
        <label>sdm::HistoryTree&lt; T &gt;</label>
        <link refid="classsdm_1_1HistoryTree"/>
        <childnode refid="251" relation="public-inheritance">
        </childnode>
      </node>
      <node id="251">
        <label>sdm::Tree&lt; T &gt;</label>
        <link refid="classsdm_1_1Tree"/>
        <childnode refid="252" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="256">
        <label>T</label>
      </node>
      <node id="255">
        <label>std::enable_shared_from_this&lt; Tree&lt; T &gt; &gt;</label>
      </node>
      <node id="253">
        <label>sdm::HistoryTree&lt; T &gt;</label>
        <link refid="classsdm_1_1HistoryTree"/>
        <childnode refid="254" relation="public-inheritance">
        </childnode>
      </node>
      <node id="254">
        <label>sdm::Tree&lt; T &gt;</label>
        <link refid="classsdm_1_1Tree"/>
        <childnode refid="255" relation="public-inheritance">
        </childnode>
        <childnode refid="256" relation="usage">
          <edgelabel>data_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/state/history_tree.hpp" line="28" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/state/history_tree.hpp" bodystart="27" bodyend="80"/>
    <listofallmembers>
      <member refid="classsdm_1_1Tree_1a13a64d4c3e61db1322e032e1f38674d2" prot="public" virt="non-virtual"><scope>sdm::HistoryTree</scope><name>addChild</name></member>
      <member refid="classsdm_1_1Tree_1abb0ecff87f08a928b2542ae3a3e2f722" prot="public" virt="non-virtual"><scope>sdm::HistoryTree</scope><name>addChildren</name></member>
      <member refid="classsdm_1_1Tree_1ab6c7ad86957d63fd66af450d254ca807" prot="protected" virt="non-virtual"><scope>sdm::HistoryTree</scope><name>children_</name></member>
      <member refid="classsdm_1_1Tree_1a98f84e1f0dac36349a5320a24504b1d1" prot="protected" virt="non-virtual"><scope>sdm::HistoryTree</scope><name>data_</name></member>
      <member refid="classsdm_1_1Tree_1ae049e909459cd5706ee0745861716ec9" prot="protected" virt="non-virtual"><scope>sdm::HistoryTree</scope><name>depth_</name></member>
      <member refid="classsdm_1_1HistoryTree_1a002cf5d2234fb407166281ae56e32efe" prot="public" virt="non-virtual"><scope>sdm::HistoryTree</scope><name>expand</name></member>
      <member refid="classsdm_1_1Tree_1a7fb458fe98820ec991adbcb87f48bdb6" prot="public" virt="non-virtual"><scope>sdm::HistoryTree</scope><name>getChild</name></member>
      <member refid="classsdm_1_1Tree_1a05a629913387d2f4614288cdce0176c0" prot="public" virt="non-virtual"><scope>sdm::HistoryTree</scope><name>getChildren</name></member>
      <member refid="classsdm_1_1Tree_1a49e9a7dcfeef2ab13ceca2da534eccbe" prot="public" virt="non-virtual"><scope>sdm::HistoryTree</scope><name>getData</name></member>
      <member refid="classsdm_1_1Tree_1a6118614f6be8224e3bd7a2fb04fe7ea0" prot="public" virt="non-virtual"><scope>sdm::HistoryTree</scope><name>getDepth</name></member>
      <member refid="classsdm_1_1HistoryTree_1a6c00749573e0fba6dd0d99376bb8803d" prot="public" virt="non-virtual"><scope>sdm::HistoryTree</scope><name>getHorizon</name></member>
      <member refid="classsdm_1_1Tree_1a3de22f626e43b61000e4336a0f4c3d49" prot="public" virt="non-virtual"><scope>sdm::HistoryTree</scope><name>getMaxDepth</name></member>
      <member refid="classsdm_1_1Tree_1a2510739ce4e5820097b86f61f6ab6a79" prot="public" virt="non-virtual"><scope>sdm::HistoryTree</scope><name>getNumChildren</name></member>
      <member refid="classsdm_1_1Tree_1ad6574da4fe5f40b6541980644c92f739" prot="public" virt="non-virtual"><scope>sdm::HistoryTree</scope><name>getOrigin</name></member>
      <member refid="classsdm_1_1Tree_1acf1f811678a20821904a6323da8f64da" prot="public" virt="non-virtual"><scope>sdm::HistoryTree</scope><name>getParent</name></member>
      <member refid="classsdm_1_1HistoryTree_1acd499cbf843121a8c749322b4e954410" prot="public" virt="non-virtual"><scope>sdm::HistoryTree</scope><name>HistoryTree</name></member>
      <member refid="classsdm_1_1HistoryTree_1a991ad0e59b88c429d4b798e49e7f59af" prot="public" virt="non-virtual"><scope>sdm::HistoryTree</scope><name>HistoryTree</name></member>
      <member refid="classsdm_1_1HistoryTree_1a752d6c32b0ed475efede5d63017b17f7" prot="public" virt="non-virtual"><scope>sdm::HistoryTree</scope><name>HistoryTree</name></member>
      <member refid="classsdm_1_1Tree_1ab49c0f38a81d3be889413c045bebf253" prot="protected" virt="non-virtual"><scope>sdm::HistoryTree</scope><name>is_origin</name></member>
      <member refid="classsdm_1_1Tree_1aba37b8b13a10f8b81e9af9cbe29e3b67" prot="public" virt="non-virtual"><scope>sdm::HistoryTree</scope><name>isOrigin</name></member>
      <member refid="classsdm_1_1Tree_1a80e5971274e11ded824ab123c42bb603" prot="protected" virt="non-virtual"><scope>sdm::HistoryTree</scope><name>max_depth_</name></member>
      <member refid="classsdm_1_1Tree_1a1d02ab2e9bb05f06d65a27f5f32e2c9e" prot="protected" virt="non-virtual"><scope>sdm::HistoryTree</scope><name>origin_</name></member>
      <member refid="classsdm_1_1Tree_1aab6ac0b72d8bfdab3e6545eb0e0fe7a2" prot="protected" virt="non-virtual"><scope>sdm::HistoryTree</scope><name>parent_</name></member>
      <member refid="classsdm_1_1Tree_1a07bcea92312c91165fcc2f05176b6816" prot="public" virt="non-virtual"><scope>sdm::HistoryTree</scope><name>setMaxDepth</name></member>
      <member refid="classsdm_1_1Tree_1ac782d6594bc0c53fab1a8712466dfbff" prot="public" virt="non-virtual"><scope>sdm::HistoryTree</scope><name>Tree</name></member>
      <member refid="classsdm_1_1Tree_1ad4b77cfe40cfcc700f2bafe06a71fb79" prot="public" virt="non-virtual"><scope>sdm::HistoryTree</scope><name>Tree</name></member>
      <member refid="classsdm_1_1Tree_1a5299b17a5f90a93c66a255aed1777cd1" prot="public" virt="non-virtual"><scope>sdm::HistoryTree</scope><name>Tree</name></member>
      <member refid="classsdm_1_1HistoryTree_1ad87cac9a374fae75390a4db2c87c545b" prot="protected" virt="non-virtual"><scope>sdm::HistoryTree</scope><name>truncatedExpand</name></member>
      <member refid="classsdm_1_1Tree_1a2f96c7720c6d6ddafa393b5a82cfd546" prot="public" virt="virtual"><scope>sdm::HistoryTree</scope><name>~Tree</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
