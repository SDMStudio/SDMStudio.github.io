<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classsdm_1_1MultiSpace" kind="class" language="C++" prot="public">
    <compoundname>sdm::MultiSpace</compoundname>
    <basecompoundref refid="classsdm_1_1Space" prot="public" virt="non-virtual">sdm::Space</basecompoundref>
    <includes refid="multi__space_8hpp" local="no">multi_space.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>TSpace</declname>
        <defname>TSpace</defname>
        <defval><ref refid="classsdm_1_1Space" kindref="compound">Space</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classsdm_1_1MultiSpace_1ad55dd418af20a4c0e83cffb1ec454325" prot="public" static="no">
        <type>void</type>
        <definition>using sdm::MultiSpace&lt; TSpace &gt;::value_type =  void</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/space/multi_space.hpp" line="39" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/space/multi_space.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classsdm_1_1MultiSpace_1ae6ec6802b6992adb55dddc48978c4d2b" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; TSpace &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;TSpace&gt; &gt; sdm::MultiSpace&lt; TSpace &gt;::spaces_</definition>
        <argsstring></argsstring>
        <name>spaces_</name>
        <briefdescription>
<para>The list of spaces. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/space/multi_space.hpp" line="36" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/space/multi_space.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsdm_1_1MultiSpace_1a8c13f67ee9d08eea1c033c016e7a332a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sdm::MultiSpace&lt; TSpace &gt;::MultiSpace</definition>
        <argsstring>()</argsstring>
        <name>MultiSpace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/space/multi_space.hpp" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1MultiSpace_1a4fe7392d9dd02c6a0a6877d148c84084" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sdm::MultiSpace&lt; TSpace &gt;::MultiSpace</definition>
        <argsstring>(const std::vector&lt; std::shared_ptr&lt; TSpace &gt;&gt; &amp;)</argsstring>
        <name>MultiSpace</name>
        <param>
          <type>const std::vector&lt; std::shared_ptr&lt; TSpace &gt;&gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/space/multi_space.hpp" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1MultiSpace_1aa17c7d1bab06fc63aefb4dec982dc134" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool sdm::MultiSpace&lt; TSpace &gt;::isDiscrete</definition>
        <argsstring>() const</argsstring>
        <name>isDiscrete</name>
        <reimplements refid="classsdm_1_1Space_1a3f4a71b99ad6251af943e3b225cb53b4">isDiscrete</reimplements>
        <briefdescription>
<para>Check if the space is discrete. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/space/multi_space.hpp" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1MultiSpace_1abb66573b0f6a8a3a612d9cb2673904ed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; <ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref> &gt;</type>
        <definition>std::vector&lt;number&gt; sdm::MultiSpace&lt; TSpace &gt;::getDim</definition>
        <argsstring>() const</argsstring>
        <name>getDim</name>
        <reimplements refid="classsdm_1_1Space_1ad0910707eae32637989524d8e41ecefa">getDim</reimplements>
        <briefdescription>
<para>Get the dimension of the space. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/space/multi_space.hpp" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1MultiSpace_1a844451403e6a4ad8231b2d0366ffc02f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref></type>
        <definition>number sdm::MultiSpace&lt; TSpace &gt;::getNumSpaces</definition>
        <argsstring>() const</argsstring>
        <name>getNumSpaces</name>
        <briefdescription>
<para>Get the number of sub-space. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/space/multi_space.hpp" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1MultiSpace_1a5ac3958538f1d61ff9b479888382c04c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::shared_ptr&lt; TSpace &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;TSpace&gt; &gt; sdm::MultiSpace&lt; TSpace &gt;::getSpaces</definition>
        <argsstring>() const</argsstring>
        <name>getSpaces</name>
        <briefdescription>
<para>Get all spaces. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the list of space pointers </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/space/multi_space.hpp" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1MultiSpace_1a2e1629e83c7fe9cd636038032b83869e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; TSpace &gt;</type>
        <definition>std::shared_ptr&lt;TSpace&gt; sdm::MultiSpace&lt; TSpace &gt;::getSpace</definition>
        <argsstring>(number index) const</argsstring>
        <name>getSpace</name>
        <param>
          <type><ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get a specific subspace. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the space </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a shared pointer on a specific space </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/space/multi_space.hpp" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1MultiSpace_1a204839d9a953de8fa30e6aa5c737b67b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdm::MultiSpace&lt; TSpace &gt;::setSpaces</definition>
        <argsstring>(const std::vector&lt; std::shared_ptr&lt; TSpace &gt;&gt; &amp;)</argsstring>
        <name>setSpaces</name>
        <param>
          <type>const std::vector&lt; std::shared_ptr&lt; TSpace &gt;&gt; &amp;</type>
        </param>
        <briefdescription>
<para>Change the list of spaces. You may prefer build a new <ref refid="classsdm_1_1MultiSpace" kindref="compound">MultiSpace</ref> instead of changing values of existing one. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/space/multi_space.hpp" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1MultiSpace_1a64348e275cb5635bb40329a971aed0f1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string sdm::MultiSpace&lt; TSpace &gt;::str</definition>
        <argsstring>() const</argsstring>
        <name>str</name>
        <reimplements refid="classsdm_1_1Space_1a971d5e54d6e7d300cafb24997a1b6d99">str</reimplements>
        <briefdescription>
<para><ref refid="classsdm_1_1Space" kindref="compound">Space</ref> as a string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/space/multi_space.hpp" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1MultiSpace_1a735d2bb4ae4fcb9ed48a803506fe5c02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsdm_1_1MultiSpace" kindref="compound">MultiSpace</ref> &amp;</type>
        <definition>MultiSpace&amp; sdm::MultiSpace&lt; TSpace &gt;::operator=</definition>
        <argsstring>(const MultiSpace &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classsdm_1_1MultiSpace" kindref="compound">MultiSpace</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/space/multi_space.hpp" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1MultiSpace_1a55f8861bdf2264981b7211ef75c8767b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sdm::MultiSpace&lt; TSpace &gt;::operator==</definition>
        <argsstring>(const MultiSpace &amp;) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classsdm_1_1MultiSpace" kindref="compound">MultiSpace</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/space/multi_space.hpp" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1MultiSpace_1a5b5ff41d770c661c14acd8bde17430fa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sdm::MultiSpace&lt; TSpace &gt;::operator!=</definition>
        <argsstring>(const MultiSpace &amp;) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classsdm_1_1MultiSpace" kindref="compound">MultiSpace</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/space/multi_space.hpp" line="78" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classsdm_1_1MultiSpace_1a8085dfc845dbb23f30dbe430c2b162d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const MultiSpace &amp;sp)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classsdm_1_1MultiSpace" kindref="compound">MultiSpace</ref> &amp;</type>
          <declname>sp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/space/multi_space.hpp" line="79" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/space/multi_space.hpp" bodystart="79" bodyend="83"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A multi-space is a set a spaces. Each space can be of any derived class of TSpace class. By default TSpace is set to <ref refid="classsdm_1_1Space" kindref="compound">Space</ref>, which means that any space can be used (can be composed of both discrete and continuous spaces). <ref refid="classsdm_1_1MultiSpace" kindref="compound">MultiSpace</ref> herites from <ref refid="classsdm_1_1Space" kindref="compound">Space</ref> so you can even build hierarchical spaces like <ref refid="classsdm_1_1MultiSpace" kindref="compound">MultiSpace</ref> of <ref refid="classsdm_1_1MultiSpace" kindref="compound">MultiSpace</ref> (<ref refid="classsdm_1_1MultiSpace" kindref="compound">MultiSpace</ref>&lt;MultiSpace&lt;Space&gt;&gt;&gt;). </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TSpace</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="420">
        <label>sdm::Space</label>
        <link refid="classsdm_1_1Space"/>
      </node>
      <node id="419">
        <label>sdm::MultiSpace&lt; TSpace &gt;</label>
        <link refid="classsdm_1_1MultiSpace"/>
        <childnode refid="420" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="422">
        <label>sdm::Space</label>
        <link refid="classsdm_1_1Space"/>
      </node>
      <node id="421">
        <label>sdm::MultiSpace&lt; TSpace &gt;</label>
        <link refid="classsdm_1_1MultiSpace"/>
        <childnode refid="422" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/space/multi_space.hpp" line="31" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/space/multi_space.hpp" bodystart="30" bodyend="84"/>
    <listofallmembers>
      <member refid="classsdm_1_1MultiSpace_1abb66573b0f6a8a3a612d9cb2673904ed" prot="public" virt="virtual"><scope>sdm::MultiSpace</scope><name>getDim</name></member>
      <member refid="classsdm_1_1MultiSpace_1a844451403e6a4ad8231b2d0366ffc02f" prot="public" virt="non-virtual"><scope>sdm::MultiSpace</scope><name>getNumSpaces</name></member>
      <member refid="classsdm_1_1MultiSpace_1a2e1629e83c7fe9cd636038032b83869e" prot="public" virt="non-virtual"><scope>sdm::MultiSpace</scope><name>getSpace</name></member>
      <member refid="classsdm_1_1MultiSpace_1a5ac3958538f1d61ff9b479888382c04c" prot="public" virt="non-virtual"><scope>sdm::MultiSpace</scope><name>getSpaces</name></member>
      <member refid="classsdm_1_1Space_1a5a8df3b762f59cc9cba36ecfece29f8a" prot="public" virt="non-virtual"><scope>sdm::MultiSpace</scope><name>isContinuous</name></member>
      <member refid="classsdm_1_1MultiSpace_1aa17c7d1bab06fc63aefb4dec982dc134" prot="public" virt="virtual"><scope>sdm::MultiSpace</scope><name>isDiscrete</name></member>
      <member refid="classsdm_1_1MultiSpace_1a8c13f67ee9d08eea1c033c016e7a332a" prot="public" virt="non-virtual"><scope>sdm::MultiSpace</scope><name>MultiSpace</name></member>
      <member refid="classsdm_1_1MultiSpace_1a4fe7392d9dd02c6a0a6877d148c84084" prot="public" virt="non-virtual"><scope>sdm::MultiSpace</scope><name>MultiSpace</name></member>
      <member refid="classsdm_1_1MultiSpace_1a5b5ff41d770c661c14acd8bde17430fa" prot="public" virt="non-virtual"><scope>sdm::MultiSpace</scope><name>operator!=</name></member>
      <member refid="classsdm_1_1Space_1a5ae131db5ad1d8645e310be38acd6fc1" prot="public" virt="non-virtual" ambiguityscope="sdm::Space::"><scope>sdm::MultiSpace</scope><name>operator!=</name></member>
      <member refid="classsdm_1_1MultiSpace_1a8085dfc845dbb23f30dbe430c2b162d5" prot="public" virt="non-virtual"><scope>sdm::MultiSpace</scope><name>operator&lt;&lt;</name></member>
      <member refid="classsdm_1_1MultiSpace_1a735d2bb4ae4fcb9ed48a803506fe5c02" prot="public" virt="non-virtual"><scope>sdm::MultiSpace</scope><name>operator=</name></member>
      <member refid="classsdm_1_1MultiSpace_1a55f8861bdf2264981b7211ef75c8767b" prot="public" virt="non-virtual"><scope>sdm::MultiSpace</scope><name>operator==</name></member>
      <member refid="classsdm_1_1Space_1a73acfdcd9dda1d32f3f99fa43a89a30c" prot="public" virt="non-virtual" ambiguityscope="sdm::Space::"><scope>sdm::MultiSpace</scope><name>operator==</name></member>
      <member refid="classsdm_1_1MultiSpace_1a204839d9a953de8fa30e6aa5c737b67b" prot="public" virt="non-virtual"><scope>sdm::MultiSpace</scope><name>setSpaces</name></member>
      <member refid="classsdm_1_1MultiSpace_1ae6ec6802b6992adb55dddc48978c4d2b" prot="protected" virt="non-virtual"><scope>sdm::MultiSpace</scope><name>spaces_</name></member>
      <member refid="classsdm_1_1MultiSpace_1a64348e275cb5635bb40329a971aed0f1" prot="public" virt="virtual"><scope>sdm::MultiSpace</scope><name>str</name></member>
      <member refid="classsdm_1_1MultiSpace_1ad55dd418af20a4c0e83cffb1ec454325" prot="public" virt="non-virtual"><scope>sdm::MultiSpace</scope><name>value_type</name></member>
      <member refid="classsdm_1_1Space_1af3aefac8b7852522871c8b31382f5a36" prot="public" virt="virtual"><scope>sdm::MultiSpace</scope><name>~Space</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
