<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classsdm_1_1SerializedOccupancyMDP" kind="class" language="C++" prot="public">
    <compoundname>sdm::SerializedOccupancyMDP</compoundname>
    <basecompoundref refid="classsdm_1_1SolvableByHSVI" prot="public" virt="non-virtual">sdm::SolvableByHSVI&lt; oState, oAction &gt;</basecompoundref>
    <includes refid="serialized__occupancy__mdp_8hpp" local="no">serialized_occupancy_mdp.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename oState</type>
        <defval><ref refid="classsdm_1_1SerializedOccupancyState" kindref="compound">SerializedOccupancyState</ref>&lt;<ref refid="classsdm_1_1SerializedState" kindref="compound">SerializedState</ref>, <ref refid="namespacesdm_1aa5e124f3febe0e2c52f3c1c3ed35cc17" kindref="member">JointHistoryTree_p</ref>&lt;<ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref>&gt;&gt;</defval>
      </param>
      <param>
        <type>typename oAction</type>
        <defval><ref refid="classsdm_1_1DeterministicDecisionRule" kindref="compound">DeterministicDecisionRule</ref>&lt;<ref refid="namespacesdm_1a3d3c69f530ed43dd592eb54bffdf7699" kindref="member">HistoryTree_p</ref>&lt;<ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref>&gt;, <ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref>&gt;</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classsdm_1_1SerializedOccupancyMDP_1a52279b4c489613f82dc162412d13ee4a" prot="public" static="no">
        <type>oState</type>
        <definition>using sdm::SerializedOccupancyMDP&lt; oState, oAction &gt;::state_type =  oState</definition>
        <argsstring></argsstring>
        <name>state_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/serialized_occupancy_mdp.hpp" line="39" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/serialized_occupancy_mdp.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsdm_1_1SerializedOccupancyMDP_1ac865aafb7ffd6e1d384516535a38806a" prot="public" static="no">
        <type>oAction</type>
        <definition>using sdm::SerializedOccupancyMDP&lt; oState, oAction &gt;::action_type =  oAction</definition>
        <argsstring></argsstring>
        <name>action_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/serialized_occupancy_mdp.hpp" line="40" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/serialized_occupancy_mdp.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classsdm_1_1SerializedOccupancyMDP_1a233c82f951ff63266704cafc3ce36be0" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classsdm_1_1DiscreteDecPOMDP" kindref="compound">DiscreteDecPOMDP</ref> &gt;</type>
        <definition>std::shared_ptr&lt;DiscreteDecPOMDP&gt; sdm::SerializedOccupancyMDP&lt; oState, oAction &gt;::dpomdp_</definition>
        <argsstring></argsstring>
        <name>dpomdp_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/serialized_occupancy_mdp.hpp" line="34" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/serialized_occupancy_mdp.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsdm_1_1SerializedOccupancyMDP_1a3b8548b85f283d5477dc14bf08ea229d" prot="protected" static="no" mutable="no">
        <type>oState</type>
        <definition>oState sdm::SerializedOccupancyMDP&lt; oState, oAction &gt;::istate_</definition>
        <argsstring></argsstring>
        <name>istate_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/serialized_occupancy_mdp.hpp" line="35" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/serialized_occupancy_mdp.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsdm_1_1SerializedOccupancyMDP_1ababda5a3b17d829806e86ad69c6789cd" prot="protected" static="no" mutable="no">
        <type>oState</type>
        <definition>oState sdm::SerializedOccupancyMDP&lt; oState, oAction &gt;::cstate_</definition>
        <argsstring></argsstring>
        <name>cstate_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/serialized_occupancy_mdp.hpp" line="36" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/serialized_occupancy_mdp.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsdm_1_1SerializedOccupancyMDP_1a5acae209c20c8514508ed0b408b7bd6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sdm::SerializedOccupancyMDP&lt; oState, oAction &gt;::SerializedOccupancyMDP</definition>
        <argsstring>()</argsstring>
        <name>SerializedOccupancyMDP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/serialized_occupancy_mdp.hpp" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1SerializedOccupancyMDP_1a8adadb02d6b90cd8d5efdea994d060f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sdm::SerializedOccupancyMDP&lt; oState, oAction &gt;::SerializedOccupancyMDP</definition>
        <argsstring>(std::shared_ptr&lt; DiscreteDecPOMDP &gt; underlying_dpomdp)</argsstring>
        <name>SerializedOccupancyMDP</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classsdm_1_1DiscreteDecPOMDP" kindref="compound">DiscreteDecPOMDP</ref> &gt;</type>
          <declname>underlying_dpomdp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/serialized_occupancy_mdp.hpp" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1SerializedOccupancyMDP_1ae506bbc99da571ea0acbea05f75bf6f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sdm::SerializedOccupancyMDP&lt; oState, oAction &gt;::SerializedOccupancyMDP</definition>
        <argsstring>(std::shared_ptr&lt; DiscreteDecPOMDP &gt; underlying_dpomdp, number hist_length)</argsstring>
        <name>SerializedOccupancyMDP</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classsdm_1_1DiscreteDecPOMDP" kindref="compound">DiscreteDecPOMDP</ref> &gt;</type>
          <declname>underlying_dpomdp</declname>
        </param>
        <param>
          <type><ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref></type>
          <declname>hist_length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/serialized_occupancy_mdp.hpp" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1SerializedOccupancyMDP_1a31a6a2d903d653cbecd8fdefdc2cfadd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sdm::SerializedOccupancyMDP&lt; oState, oAction &gt;::SerializedOccupancyMDP</definition>
        <argsstring>(std::string underlying_dpomdp)</argsstring>
        <name>SerializedOccupancyMDP</name>
        <param>
          <type>std::string</type>
          <declname>underlying_dpomdp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/serialized_occupancy_mdp.hpp" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1SerializedOccupancyMDP_1a81aedf8b01c37875a7b7d6497b52c329" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sdm::SerializedOccupancyMDP&lt; oState, oAction &gt;::SerializedOccupancyMDP</definition>
        <argsstring>(std::string underlying_dpomdp, number hist_length)</argsstring>
        <name>SerializedOccupancyMDP</name>
        <param>
          <type>std::string</type>
          <declname>underlying_dpomdp</declname>
        </param>
        <param>
          <type><ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref></type>
          <declname>hist_length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/serialized_occupancy_mdp.hpp" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1SerializedOccupancyMDP_1aed9f3bd0c9394d71be954f6d8b7ecf05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>oState &amp;</type>
        <definition>oState&amp; sdm::SerializedOccupancyMDP&lt; oState, oAction &gt;::getState</definition>
        <argsstring>()</argsstring>
        <name>getState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/serialized_occupancy_mdp.hpp" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1SerializedOccupancyMDP_1a5c2306cae35eaefa5b0dcdd49a4c8917" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double sdm::SerializedOccupancyMDP&lt; oState, oAction &gt;::getDiscount</definition>
        <argsstring>(int t) const</argsstring>
        <name>getDiscount</name>
        <param>
          <type>int</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/serialized_occupancy_mdp.hpp" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1SerializedOccupancyMDP_1a6949c2b415d4f05292543749ef9d37d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool sdm::SerializedOccupancyMDP&lt; oState, oAction &gt;::isSerialized</definition>
        <argsstring>() const</argsstring>
        <name>isSerialized</name>
        <reimplements refid="classsdm_1_1SolvableByHSVI_1aa99d7d6e88cbf175137ca5c4412f0d12">isSerialized</reimplements>
        <briefdescription>
<para>Check if the problem is serialized. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the problem is serialized. </para></simplesect>
<simplesect kind="return"><para>false if the problem is not serialized. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/serialized_occupancy_mdp.hpp" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1SerializedOccupancyMDP_1a15e90b4c7f38226856ae8e575feae96d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classsdm_1_1DiscreteDecPOMDP" kindref="compound">DiscreteDecPOMDP</ref> *</type>
        <definition>DiscreteDecPOMDP* sdm::SerializedOccupancyMDP&lt; oState, oAction &gt;::getUnderlyingProblem</definition>
        <argsstring>()</argsstring>
        <name>getUnderlyingProblem</name>
        <reimplements refid="classsdm_1_1SolvableByHSVI_1a55a1920c31c0b74fa1edc954190ab820">getUnderlyingProblem</reimplements>
        <briefdescription>
<para>Get the underlying problem. For instance the underlying DecPOMDP of the <ref refid="classsdm_1_1OccupancyMDP" kindref="compound">OccupancyMDP</ref> or the underlying POMDP of the current <ref refid="classsdm_1_1BeliefMDP" kindref="compound">BeliefMDP</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the underlying problem </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/serialized_occupancy_mdp.hpp" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1SerializedOccupancyMDP_1a68f7a1a8fa7e62ccb22e7f17375815b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>oState</type>
        <definition>oState sdm::SerializedOccupancyMDP&lt; oState, oAction &gt;::getInitialState</definition>
        <argsstring>()</argsstring>
        <name>getInitialState</name>
        <reimplements refid="classsdm_1_1SolvableByHSVI_1ac0a1fff056c61d42da7fe9aad571771d">getInitialState</reimplements>
        <briefdescription>
<para>Get the initial state. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/serialized_occupancy_mdp.hpp" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1SerializedOccupancyMDP_1a244fec22fe085222e64eb6150128530c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>oState</type>
        <definition>oState sdm::SerializedOccupancyMDP&lt; oState, oAction &gt;::nextState</definition>
        <argsstring>(const oState &amp;ostate, const oAction &amp;oaction, int t=0, HSVI&lt; oState, oAction &gt; *hsvi=nullptr) const</argsstring>
        <name>nextState</name>
        <reimplements refid="classsdm_1_1SolvableByHSVI_1a6c4d6cfdb1211ed8a0a8a591f96cb551">nextState</reimplements>
        <param>
          <type>const oState &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const oAction &amp;</type>
          <declname>action</declname>
        </param>
        <param>
          <type>int</type>
          <declname>t</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classsdm_1_1HSVI" kindref="compound">HSVI</ref>&lt; oState, oAction &gt; *</type>
          <declname>hsvi</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Get the next occupancy state. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>the occupancy state </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>action</parametername>
</parameternamelist>
<parameterdescription>
<para>the action state </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>the timestep </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hsvi</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer on the algorithm that makes the call </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the next occupancy state </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/serialized_occupancy_mdp.hpp" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1SerializedOccupancyMDP_1a08830b951da1c61bba6aecf914e1e990" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::shared_ptr&lt; <ref refid="classsdm_1_1DiscreteSpace" kindref="compound">DiscreteSpace</ref>&lt; oAction &gt; &gt;</type>
        <definition>std::shared_ptr&lt;DiscreteSpace&lt;oAction&gt; &gt; sdm::SerializedOccupancyMDP&lt; oState, oAction &gt;::getActionSpaceAt</definition>
        <argsstring>(const oState &amp;)</argsstring>
        <name>getActionSpaceAt</name>
        <reimplements refid="classsdm_1_1SolvableByHSVI_1a0534ed754224f9b7bc87edb08ba62d6a">getActionSpaceAt</reimplements>
        <param>
          <type>const oState &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Get the actions availables at a specific state. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>the state </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the action space </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/serialized_occupancy_mdp.hpp" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1SerializedOccupancyMDP_1ae9f49841d7699538ee922840db5f473d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double sdm::SerializedOccupancyMDP&lt; oState, oAction &gt;::getReward</definition>
        <argsstring>(const oState &amp;ostate, const oAction &amp;oaction) const</argsstring>
        <name>getReward</name>
        <reimplements refid="classsdm_1_1SolvableByHSVI_1a02c997720580a7c9c49784addf3ffee0">getReward</reimplements>
        <param>
          <type>const oState &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const oAction &amp;</type>
          <declname>action</declname>
        </param>
        <briefdescription>
<para>Get the reward at a given occupancy state and occupancy action. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/serialized_occupancy_mdp.hpp" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1SerializedOccupancyMDP_1a40c3234348616ff9058f6960115624f6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double sdm::SerializedOccupancyMDP&lt; oState, oAction &gt;::getExpectedNextValue</definition>
        <argsstring>(ValueFunction&lt; oState, oAction &gt; *value_function, const oState &amp;ostate, const oAction &amp;oaction, int t=0) const</argsstring>
        <name>getExpectedNextValue</name>
        <reimplements refid="classsdm_1_1SolvableByHSVI_1a8ef08843154d1145054256bd981a5b0b">getExpectedNextValue</reimplements>
        <param>
          <type><ref refid="classsdm_1_1ValueFunction" kindref="compound">ValueFunction</ref>&lt; oState, oAction &gt; *</type>
          <declname>value_function</declname>
        </param>
        <param>
          <type>const oState &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const oAction &amp;</type>
          <declname>action</declname>
        </param>
        <param>
          <type>int</type>
          <declname>t</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Get the expected next value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value_function</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer on the value function to use to perform the calculus. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>the state on which to evaluate the next expected value * </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>action</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/serialized_occupancy_mdp.hpp" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1SerializedOccupancyMDP_1ac44fc97db59f3d087c6f4cb14572addd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classsdm_1_1SerializedMDP" kindref="compound">SerializedMDP</ref>&lt;&gt; &gt;</type>
        <definition>std::shared_ptr&lt;SerializedMDP&lt;&gt; &gt; sdm::SerializedOccupancyMDP&lt; oState, oAction &gt;::toMDP</definition>
        <argsstring>()</argsstring>
        <name>toMDP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/serialized_occupancy_mdp.hpp" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1SerializedOccupancyMDP_1a84926ade2d6519837ca45def09c3885e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classsdm_1_1SerializedBeliefMDP" kindref="compound">SerializedBeliefMDP</ref>&lt; <ref refid="classsdm_1_1SerializedBeliefState" kindref="compound">SerializedBeliefState</ref>, <ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref>, <ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref> &gt; &gt;</type>
        <definition>std::shared_ptr&lt;SerializedBeliefMDP&lt;SerializedBeliefState, number, number&gt; &gt; sdm::SerializedOccupancyMDP&lt; oState, oAction &gt;::toBeliefMDP</definition>
        <argsstring>()</argsstring>
        <name>toBeliefMDP</name>
        <briefdescription>
<para>Get the corresponding Belief Markov Decision Process. It corresponds to the reformulation of the original POMP in a MDP where the state space is the space of beliefs. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a belief MDP </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/serialized_occupancy_mdp.hpp" line="70" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An Serialized occupancy MDP is a subclass of continuous state MDP where states are seriliazed occupancy states and the resolution is serialized. In the general case, a Serialized occupancy state refers to the knowledge that a central planner can have access to take decisions at a precise agent. But in this implementation we call serialized occupancy state a distribution over serialized state and joint histories . </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>oState</parametername>
</parameternamelist>
<parameterdescription>
<para>refers to an serialized occupancy state type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oAction</parametername>
</parameternamelist>
<parameterdescription>
<para>refers to a occupancy action type </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="603">
        <label>sdm::SolvableByHSVI&lt; oState, oAction &gt;</label>
        <link refid="classsdm_1_1SolvableByHSVI"/>
      </node>
      <node id="602">
        <label>sdm::SerializedOccupancyMDP&lt; oState, oAction &gt;</label>
        <link refid="classsdm_1_1SerializedOccupancyMDP"/>
        <childnode refid="603" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="605">
        <label>sdm::SolvableByHSVI&lt; oState, oAction &gt;</label>
        <link refid="classsdm_1_1SolvableByHSVI"/>
      </node>
      <node id="604">
        <label>sdm::SerializedOccupancyMDP&lt; oState, oAction &gt;</label>
        <link refid="classsdm_1_1SerializedOccupancyMDP"/>
        <childnode refid="605" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/serialized_occupancy_mdp.hpp" line="32" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/serialized_occupancy_mdp.hpp" bodystart="31" bodyend="71"/>
    <listofallmembers>
      <member refid="classsdm_1_1SerializedOccupancyMDP_1ac865aafb7ffd6e1d384516535a38806a" prot="public" virt="non-virtual"><scope>sdm::SerializedOccupancyMDP</scope><name>action_type</name></member>
      <member refid="classsdm_1_1SerializedOccupancyMDP_1ababda5a3b17d829806e86ad69c6789cd" prot="protected" virt="non-virtual"><scope>sdm::SerializedOccupancyMDP</scope><name>cstate_</name></member>
      <member refid="classsdm_1_1SerializedOccupancyMDP_1a233c82f951ff63266704cafc3ce36be0" prot="protected" virt="non-virtual"><scope>sdm::SerializedOccupancyMDP</scope><name>dpomdp_</name></member>
      <member refid="classsdm_1_1SerializedOccupancyMDP_1a08830b951da1c61bba6aecf914e1e990" prot="public" virt="virtual"><scope>sdm::SerializedOccupancyMDP</scope><name>getActionSpaceAt</name></member>
      <member refid="classsdm_1_1SerializedOccupancyMDP_1a5c2306cae35eaefa5b0dcdd49a4c8917" prot="public" virt="non-virtual"><scope>sdm::SerializedOccupancyMDP</scope><name>getDiscount</name></member>
      <member refid="classsdm_1_1SerializedOccupancyMDP_1a40c3234348616ff9058f6960115624f6" prot="public" virt="virtual"><scope>sdm::SerializedOccupancyMDP</scope><name>getExpectedNextValue</name></member>
      <member refid="classsdm_1_1SerializedOccupancyMDP_1a68f7a1a8fa7e62ccb22e7f17375815b2" prot="public" virt="virtual"><scope>sdm::SerializedOccupancyMDP</scope><name>getInitialState</name></member>
      <member refid="classsdm_1_1SerializedOccupancyMDP_1ae9f49841d7699538ee922840db5f473d" prot="public" virt="virtual"><scope>sdm::SerializedOccupancyMDP</scope><name>getReward</name></member>
      <member refid="classsdm_1_1SerializedOccupancyMDP_1aed9f3bd0c9394d71be954f6d8b7ecf05" prot="public" virt="non-virtual"><scope>sdm::SerializedOccupancyMDP</scope><name>getState</name></member>
      <member refid="classsdm_1_1SerializedOccupancyMDP_1a15e90b4c7f38226856ae8e575feae96d" prot="public" virt="virtual"><scope>sdm::SerializedOccupancyMDP</scope><name>getUnderlyingProblem</name></member>
      <member refid="classsdm_1_1SerializedOccupancyMDP_1a6949c2b415d4f05292543749ef9d37d5" prot="public" virt="virtual"><scope>sdm::SerializedOccupancyMDP</scope><name>isSerialized</name></member>
      <member refid="classsdm_1_1SerializedOccupancyMDP_1a3b8548b85f283d5477dc14bf08ea229d" prot="protected" virt="non-virtual"><scope>sdm::SerializedOccupancyMDP</scope><name>istate_</name></member>
      <member refid="classsdm_1_1SerializedOccupancyMDP_1a244fec22fe085222e64eb6150128530c" prot="public" virt="virtual"><scope>sdm::SerializedOccupancyMDP</scope><name>nextState</name></member>
      <member refid="classsdm_1_1SerializedOccupancyMDP_1a5acae209c20c8514508ed0b408b7bd6c" prot="public" virt="non-virtual"><scope>sdm::SerializedOccupancyMDP</scope><name>SerializedOccupancyMDP</name></member>
      <member refid="classsdm_1_1SerializedOccupancyMDP_1a8adadb02d6b90cd8d5efdea994d060f7" prot="public" virt="non-virtual"><scope>sdm::SerializedOccupancyMDP</scope><name>SerializedOccupancyMDP</name></member>
      <member refid="classsdm_1_1SerializedOccupancyMDP_1ae506bbc99da571ea0acbea05f75bf6f1" prot="public" virt="non-virtual"><scope>sdm::SerializedOccupancyMDP</scope><name>SerializedOccupancyMDP</name></member>
      <member refid="classsdm_1_1SerializedOccupancyMDP_1a31a6a2d903d653cbecd8fdefdc2cfadd" prot="public" virt="non-virtual"><scope>sdm::SerializedOccupancyMDP</scope><name>SerializedOccupancyMDP</name></member>
      <member refid="classsdm_1_1SerializedOccupancyMDP_1a81aedf8b01c37875a7b7d6497b52c329" prot="public" virt="non-virtual"><scope>sdm::SerializedOccupancyMDP</scope><name>SerializedOccupancyMDP</name></member>
      <member refid="classsdm_1_1SerializedOccupancyMDP_1a52279b4c489613f82dc162412d13ee4a" prot="public" virt="non-virtual"><scope>sdm::SerializedOccupancyMDP</scope><name>state_type</name></member>
      <member refid="classsdm_1_1SerializedOccupancyMDP_1a84926ade2d6519837ca45def09c3885e" prot="public" virt="non-virtual"><scope>sdm::SerializedOccupancyMDP</scope><name>toBeliefMDP</name></member>
      <member refid="classsdm_1_1SerializedOccupancyMDP_1ac44fc97db59f3d087c6f4cb14572addd" prot="public" virt="non-virtual"><scope>sdm::SerializedOccupancyMDP</scope><name>toMDP</name></member>
      <member refid="classsdm_1_1SolvableByHSVI_1a83b0c3e1bff936e75cc312575fb6538e" prot="public" virt="virtual"><scope>sdm::SerializedOccupancyMDP</scope><name>~SolvableByHSVI</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
