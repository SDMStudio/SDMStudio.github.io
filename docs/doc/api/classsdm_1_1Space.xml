<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classsdm_1_1Space" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>sdm::Space</compoundname>
    <derivedcompoundref refid="classsdm_1_1DiscreteSpace" prot="public" virt="non-virtual">sdm::DiscreteSpace&lt; input_type &gt;</derivedcompoundref>
    <derivedcompoundref refid="classsdm_1_1DiscreteSpace" prot="public" virt="non-virtual">sdm::DiscreteSpace&lt; Joint&lt; number &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="classsdm_1_1DiscreteSpace" prot="public" virt="non-virtual">sdm::DiscreteSpace&lt; Joint&lt; std::string &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="classsdm_1_1DiscreteSpace" prot="public" virt="non-virtual">sdm::DiscreteSpace&lt; Joint&lt; TItem &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="classsdm_1_1DiscreteSpace" prot="public" virt="non-virtual">sdm::DiscreteSpace&lt; number &gt;</derivedcompoundref>
    <derivedcompoundref refid="classsdm_1_1DiscreteSpace" prot="public" virt="non-virtual">sdm::DiscreteSpace&lt; std::string &gt;</derivedcompoundref>
    <derivedcompoundref refid="classsdm_1_1DiscreteSpace" prot="public" virt="non-virtual">sdm::DiscreteSpace&lt; TFunction &gt;</derivedcompoundref>
    <derivedcompoundref refid="classsdm_1_1MultiSpace" prot="public" virt="non-virtual">sdm::MultiSpace&lt; DiscreteSpace&lt; number &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="classsdm_1_1MultiSpace" prot="public" virt="non-virtual">sdm::MultiSpace&lt; DiscreteSpace&lt; std::string &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="classsdm_1_1MultiSpace" prot="public" virt="non-virtual">sdm::MultiSpace&lt; DiscreteSpace&lt; TItem &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="classsdm_1_1DiscreteSpace" prot="public" virt="non-virtual">sdm::DiscreteSpace&lt; TItem &gt;</derivedcompoundref>
    <derivedcompoundref refid="classsdm_1_1MultiSpace" prot="public" virt="non-virtual">sdm::MultiSpace&lt; TSpace &gt;</derivedcompoundref>
    <includes refid="space_8hpp" local="no">space.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsdm_1_1Space_1af3aefac8b7852522871c8b31382f5a36" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual sdm::Space::~Space</definition>
        <argsstring>()</argsstring>
        <name>~Space</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/space/space.hpp" line="32" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/space/space.hpp" bodystart="32" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1Space_1a3f4a71b99ad6251af943e3b225cb53b4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool sdm::Space::isDiscrete</definition>
        <argsstring>() const =0</argsstring>
        <name>isDiscrete</name>
        <reimplementedby refid="classsdm_1_1MultiSpace_1aa17c7d1bab06fc63aefb4dec982dc134">isDiscrete</reimplementedby>
        <reimplementedby refid="classsdm_1_1MultiSpace_1aa17c7d1bab06fc63aefb4dec982dc134">isDiscrete</reimplementedby>
        <reimplementedby refid="classsdm_1_1MultiSpace_1aa17c7d1bab06fc63aefb4dec982dc134">isDiscrete</reimplementedby>
        <reimplementedby refid="classsdm_1_1MultiSpace_1aa17c7d1bab06fc63aefb4dec982dc134">isDiscrete</reimplementedby>
        <reimplementedby refid="classsdm_1_1DiscreteSpace_1aeaf07d8ba52b51fe8626774085f6aef0">isDiscrete</reimplementedby>
        <reimplementedby refid="classsdm_1_1DiscreteSpace_1aeaf07d8ba52b51fe8626774085f6aef0">isDiscrete</reimplementedby>
        <reimplementedby refid="classsdm_1_1DiscreteSpace_1aeaf07d8ba52b51fe8626774085f6aef0">isDiscrete</reimplementedby>
        <reimplementedby refid="classsdm_1_1DiscreteSpace_1aeaf07d8ba52b51fe8626774085f6aef0">isDiscrete</reimplementedby>
        <reimplementedby refid="classsdm_1_1DiscreteSpace_1aeaf07d8ba52b51fe8626774085f6aef0">isDiscrete</reimplementedby>
        <reimplementedby refid="classsdm_1_1DiscreteSpace_1aeaf07d8ba52b51fe8626774085f6aef0">isDiscrete</reimplementedby>
        <reimplementedby refid="classsdm_1_1DiscreteSpace_1aeaf07d8ba52b51fe8626774085f6aef0">isDiscrete</reimplementedby>
        <reimplementedby refid="classsdm_1_1DiscreteSpace_1aeaf07d8ba52b51fe8626774085f6aef0">isDiscrete</reimplementedby>
        <briefdescription>
<para>Check if the space is discrete. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/space/space.hpp" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1Space_1a5a8df3b762f59cc9cba36ecfece29f8a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool sdm::Space::isContinuous</definition>
        <argsstring>() const</argsstring>
        <name>isContinuous</name>
        <briefdescription>
<para>Check if the space is continous. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/space/space.hpp" line="42" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/space/space.hpp" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1Space_1ad0910707eae32637989524d8e41ecefa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::vector&lt; <ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref> &gt;</type>
        <definition>virtual std::vector&lt;number&gt; sdm::Space::getDim</definition>
        <argsstring>() const =0</argsstring>
        <name>getDim</name>
        <reimplementedby refid="classsdm_1_1MultiSpace_1abb66573b0f6a8a3a612d9cb2673904ed">getDim</reimplementedby>
        <reimplementedby refid="classsdm_1_1MultiSpace_1abb66573b0f6a8a3a612d9cb2673904ed">getDim</reimplementedby>
        <reimplementedby refid="classsdm_1_1MultiSpace_1abb66573b0f6a8a3a612d9cb2673904ed">getDim</reimplementedby>
        <reimplementedby refid="classsdm_1_1MultiSpace_1abb66573b0f6a8a3a612d9cb2673904ed">getDim</reimplementedby>
        <reimplementedby refid="classsdm_1_1DiscreteSpace_1a24ed3cc4c3618e0447863663922a5341">getDim</reimplementedby>
        <reimplementedby refid="classsdm_1_1DiscreteSpace_1a24ed3cc4c3618e0447863663922a5341">getDim</reimplementedby>
        <reimplementedby refid="classsdm_1_1DiscreteSpace_1a24ed3cc4c3618e0447863663922a5341">getDim</reimplementedby>
        <reimplementedby refid="classsdm_1_1DiscreteSpace_1a24ed3cc4c3618e0447863663922a5341">getDim</reimplementedby>
        <reimplementedby refid="classsdm_1_1DiscreteSpace_1a24ed3cc4c3618e0447863663922a5341">getDim</reimplementedby>
        <reimplementedby refid="classsdm_1_1DiscreteSpace_1a24ed3cc4c3618e0447863663922a5341">getDim</reimplementedby>
        <reimplementedby refid="classsdm_1_1DiscreteSpace_1a24ed3cc4c3618e0447863663922a5341">getDim</reimplementedby>
        <reimplementedby refid="classsdm_1_1DiscreteSpace_1a24ed3cc4c3618e0447863663922a5341">getDim</reimplementedby>
        <briefdescription>
<para>Get the dimension of the space. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/space/space.hpp" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1Space_1a971d5e54d6e7d300cafb24997a1b6d99" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string sdm::Space::str</definition>
        <argsstring>() const =0</argsstring>
        <name>str</name>
        <reimplementedby refid="classsdm_1_1MultiSpace_1a64348e275cb5635bb40329a971aed0f1">str</reimplementedby>
        <reimplementedby refid="classsdm_1_1MultiSpace_1a64348e275cb5635bb40329a971aed0f1">str</reimplementedby>
        <reimplementedby refid="classsdm_1_1MultiSpace_1a64348e275cb5635bb40329a971aed0f1">str</reimplementedby>
        <reimplementedby refid="classsdm_1_1MultiSpace_1a64348e275cb5635bb40329a971aed0f1">str</reimplementedby>
        <reimplementedby refid="classsdm_1_1DiscreteSpace_1a84cc73952e28f5f5ad67459f81b263e7">str</reimplementedby>
        <reimplementedby refid="classsdm_1_1DiscreteSpace_1a84cc73952e28f5f5ad67459f81b263e7">str</reimplementedby>
        <reimplementedby refid="classsdm_1_1DiscreteSpace_1a84cc73952e28f5f5ad67459f81b263e7">str</reimplementedby>
        <reimplementedby refid="classsdm_1_1DiscreteSpace_1a84cc73952e28f5f5ad67459f81b263e7">str</reimplementedby>
        <reimplementedby refid="classsdm_1_1DiscreteSpace_1a84cc73952e28f5f5ad67459f81b263e7">str</reimplementedby>
        <reimplementedby refid="classsdm_1_1DiscreteSpace_1a84cc73952e28f5f5ad67459f81b263e7">str</reimplementedby>
        <reimplementedby refid="classsdm_1_1DiscreteSpace_1a84cc73952e28f5f5ad67459f81b263e7">str</reimplementedby>
        <reimplementedby refid="classsdm_1_1DiscreteSpace_1a84cc73952e28f5f5ad67459f81b263e7">str</reimplementedby>
        <reimplementedby refid="classsdm_1_1MultiDiscreteSpace_1aae8fe0b5fa369810a8dd15b6077da4c6">str</reimplementedby>
        <reimplementedby refid="classsdm_1_1MultiDiscreteSpace_1aae8fe0b5fa369810a8dd15b6077da4c6">str</reimplementedby>
        <reimplementedby refid="classsdm_1_1MultiDiscreteSpace_1aae8fe0b5fa369810a8dd15b6077da4c6">str</reimplementedby>
        <briefdescription>
<para><ref refid="classsdm_1_1Space" kindref="compound">Space</ref> as a string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/space/space.hpp" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1Space_1a73acfdcd9dda1d32f3f99fa43a89a30c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool sdm::Space::operator==</definition>
        <argsstring>(const Space &amp;sp) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classsdm_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>sp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/space/space.hpp" line="57" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/space/space.hpp" bodystart="57" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1Space_1a5ae131db5ad1d8645e310be38acd6fc1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool sdm::Space::operator!=</definition>
        <argsstring>(const Space &amp;sp) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classsdm_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>sp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/space/space.hpp" line="68" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/space/space.hpp" bodystart="68" bodyend="71"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class is an abstract interface that all spaces should inherite. It gives some useful general methods to use generic spaces in your algorithms. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="632">
        <label>sdm::DiscreteSpace&lt; TFunction &gt;</label>
        <link refid="classsdm_1_1DiscreteSpace"/>
        <childnode refid="622" relation="public-inheritance">
        </childnode>
      </node>
      <node id="628">
        <label>sdm::DiscreteSpace&lt; Joint&lt; TItem &gt; &gt;</label>
        <link refid="classsdm_1_1DiscreteSpace"/>
        <childnode refid="622" relation="public-inheritance">
        </childnode>
      </node>
      <node id="626">
        <label>sdm::DiscreteSpace&lt; Joint&lt; std::string &gt; &gt;</label>
        <link refid="classsdm_1_1DiscreteSpace"/>
        <childnode refid="622" relation="public-inheritance">
        </childnode>
      </node>
      <node id="624">
        <label>sdm::DiscreteSpace&lt; Joint&lt; number &gt; &gt;</label>
        <link refid="classsdm_1_1DiscreteSpace"/>
        <childnode refid="622" relation="public-inheritance">
        </childnode>
      </node>
      <node id="622">
        <label>sdm::Space</label>
        <link refid="classsdm_1_1Space"/>
      </node>
      <node id="633">
        <label>sdm::FunctionSpace&lt; TFunction &gt;</label>
        <link refid="classsdm_1_1FunctionSpace"/>
        <childnode refid="632" relation="public-inheritance">
        </childnode>
      </node>
      <node id="623">
        <label>sdm::DiscreteSpace&lt; input_type &gt;</label>
        <link refid="classsdm_1_1DiscreteSpace"/>
        <childnode refid="622" relation="public-inheritance">
        </childnode>
      </node>
      <node id="630">
        <label>sdm::DiscreteSpace&lt; number &gt;</label>
        <link refid="classsdm_1_1DiscreteSpace"/>
        <childnode refid="622" relation="public-inheritance">
        </childnode>
      </node>
      <node id="637">
        <label>sdm::DiscreteSpace&lt; TItem &gt;</label>
        <link refid="classsdm_1_1DiscreteSpace"/>
        <childnode refid="622" relation="public-inheritance">
        </childnode>
      </node>
      <node id="634">
        <label>sdm::MultiSpace&lt; DiscreteSpace&lt; number &gt; &gt;</label>
        <link refid="classsdm_1_1MultiSpace"/>
        <childnode refid="622" relation="public-inheritance">
        </childnode>
      </node>
      <node id="638">
        <label>sdm::MultiSpace&lt; TSpace &gt;</label>
        <link refid="classsdm_1_1MultiSpace"/>
        <childnode refid="622" relation="public-inheritance">
        </childnode>
      </node>
      <node id="627">
        <label>sdm::MultiDiscreteSpace&lt; std::string &gt;</label>
        <link refid="classsdm_1_1MultiDiscreteSpace"/>
        <childnode refid="626" relation="public-inheritance">
        </childnode>
        <childnode refid="635" relation="public-inheritance">
        </childnode>
      </node>
      <node id="635">
        <label>sdm::MultiSpace&lt; DiscreteSpace&lt; std::string &gt; &gt;</label>
        <link refid="classsdm_1_1MultiSpace"/>
        <childnode refid="622" relation="public-inheritance">
        </childnode>
      </node>
      <node id="625">
        <label>sdm::MultiDiscreteSpace&lt; number &gt;</label>
        <link refid="classsdm_1_1MultiDiscreteSpace"/>
        <childnode refid="624" relation="public-inheritance">
        </childnode>
        <childnode refid="634" relation="public-inheritance">
        </childnode>
      </node>
      <node id="636">
        <label>sdm::MultiSpace&lt; DiscreteSpace&lt; TItem &gt; &gt;</label>
        <link refid="classsdm_1_1MultiSpace"/>
        <childnode refid="622" relation="public-inheritance">
        </childnode>
      </node>
      <node id="629">
        <label>sdm::MultiDiscreteSpace&lt; TItem &gt;</label>
        <link refid="classsdm_1_1MultiDiscreteSpace"/>
        <childnode refid="628" relation="public-inheritance">
        </childnode>
        <childnode refid="636" relation="public-inheritance">
        </childnode>
      </node>
      <node id="631">
        <label>sdm::DiscreteSpace&lt; std::string &gt;</label>
        <link refid="classsdm_1_1DiscreteSpace"/>
        <childnode refid="622" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/space/space.hpp" line="30" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/space/space.hpp" bodystart="29" bodyend="72"/>
    <listofallmembers>
      <member refid="classsdm_1_1Space_1ad0910707eae32637989524d8e41ecefa" prot="public" virt="pure-virtual"><scope>sdm::Space</scope><name>getDim</name></member>
      <member refid="classsdm_1_1Space_1a5a8df3b762f59cc9cba36ecfece29f8a" prot="public" virt="non-virtual"><scope>sdm::Space</scope><name>isContinuous</name></member>
      <member refid="classsdm_1_1Space_1a3f4a71b99ad6251af943e3b225cb53b4" prot="public" virt="pure-virtual"><scope>sdm::Space</scope><name>isDiscrete</name></member>
      <member refid="classsdm_1_1Space_1a5ae131db5ad1d8645e310be38acd6fc1" prot="public" virt="non-virtual"><scope>sdm::Space</scope><name>operator!=</name></member>
      <member refid="classsdm_1_1Space_1a73acfdcd9dda1d32f3f99fa43a89a30c" prot="public" virt="non-virtual"><scope>sdm::Space</scope><name>operator==</name></member>
      <member refid="classsdm_1_1Space_1a971d5e54d6e7d300cafb24997a1b6d99" prot="public" virt="pure-virtual"><scope>sdm::Space</scope><name>str</name></member>
      <member refid="classsdm_1_1Space_1af3aefac8b7852522871c8b31382f5a36" prot="public" virt="virtual"><scope>sdm::Space</scope><name>~Space</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
