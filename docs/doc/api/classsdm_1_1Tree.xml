<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classsdm_1_1Tree" kind="class" language="C++" prot="public">
    <compoundname>sdm::Tree</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::enable_shared_from_this&lt; Tree&lt; T &gt; &gt;</basecompoundref>
    <derivedcompoundref refid="classsdm_1_1HistoryTree" prot="public" virt="non-virtual">sdm::HistoryTree&lt; T &gt;</derivedcompoundref>
    <includes refid="tree_8hpp" local="no">tree.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classsdm_1_1Tree_1a80e5971274e11ded824ab123c42bb603" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref></type>
        <definition>number sdm::Tree&lt; T &gt;::max_depth_</definition>
        <argsstring></argsstring>
        <name>max_depth_</name>
        <initializer>= std::numeric_limits&lt;<ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref>&gt;::max()</initializer>
        <briefdescription>
<para>maximum length of the tree </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/struct/tree.hpp" line="46" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/struct/tree.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsdm_1_1Tree_1ae049e909459cd5706ee0745861716ec9" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref></type>
        <definition>number sdm::Tree&lt; T &gt;::depth_</definition>
        <argsstring></argsstring>
        <name>depth_</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>depth of the tree </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/struct/tree.hpp" line="49" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/struct/tree.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsdm_1_1Tree_1a98f84e1f0dac36349a5320a24504b1d1" prot="protected" static="no" mutable="no">
        <type>T</type>
        <definition>T sdm::Tree&lt; T &gt;::data_</definition>
        <argsstring></argsstring>
        <name>data_</name>
        <briefdescription>
<para>data of the current node </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/struct/tree.hpp" line="52" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/struct/tree.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsdm_1_1Tree_1a1d02ab2e9bb05f06d65a27f5f32e2c9e" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classsdm_1_1Tree" kindref="compound">Tree</ref>&lt; T &gt; &gt;</type>
        <definition>std::shared_ptr&lt;Tree&lt;T&gt; &gt; sdm::Tree&lt; T &gt;::origin_</definition>
        <argsstring></argsstring>
        <name>origin_</name>
        <briefdescription>
<para>the root of the tree </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/struct/tree.hpp" line="55" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/struct/tree.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsdm_1_1Tree_1aab6ac0b72d8bfdab3e6545eb0e0fe7a2" prot="protected" static="no" mutable="no">
        <type>std::weak_ptr&lt; <ref refid="classsdm_1_1Tree" kindref="compound">Tree</ref>&lt; T &gt; &gt;</type>
        <definition>std::weak_ptr&lt;Tree&lt;T&gt; &gt; sdm::Tree&lt; T &gt;::parent_</definition>
        <argsstring></argsstring>
        <name>parent_</name>
        <briefdescription>
<para>the parent node </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/struct/tree.hpp" line="58" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/struct/tree.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsdm_1_1Tree_1ab6c7ad86957d63fd66af450d254ca807" prot="protected" static="no" mutable="no">
        <type>std::map&lt; T, std::shared_ptr&lt; <ref refid="classsdm_1_1Tree" kindref="compound">Tree</ref>&lt; T &gt; &gt; &gt;</type>
        <definition>std::map&lt;T, std::shared_ptr&lt;Tree&lt;T&gt; &gt; &gt; sdm::Tree&lt; T &gt;::children_</definition>
        <argsstring></argsstring>
        <name>children_</name>
        <briefdescription>
<para>mapping of items to successor trees </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/struct/tree.hpp" line="61" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/struct/tree.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsdm_1_1Tree_1ab49c0f38a81d3be889413c045bebf253" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool sdm::Tree&lt; T &gt;::is_origin</definition>
        <argsstring></argsstring>
        <name>is_origin</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/struct/tree.hpp" line="63" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/struct/tree.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsdm_1_1Tree_1ac782d6594bc0c53fab1a8712466dfbff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sdm::Tree&lt; T &gt;::Tree</definition>
        <argsstring>()</argsstring>
        <name>Tree</name>
        <briefdescription>
<para>Default constructor object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/struct/tree.hpp" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1Tree_1ad4b77cfe40cfcc700f2bafe06a71fb79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sdm::Tree&lt; T &gt;::Tree</definition>
        <argsstring>(number max_depth)</argsstring>
        <name>Tree</name>
        <param>
          <type><ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref></type>
          <declname>max_depth</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classsdm_1_1Tree" kindref="compound">Tree</ref> object (the origin) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the value of the origin </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/struct/tree.hpp" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1Tree_1a5299b17a5f90a93c66a255aed1777cd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sdm::Tree&lt; T &gt;::Tree</definition>
        <argsstring>(std::shared_ptr&lt; Tree&lt; T &gt;&gt; parent, const T &amp;data)</argsstring>
        <name>Tree</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classsdm_1_1Tree" kindref="compound">Tree</ref>&lt; T &gt;&gt;</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classsdm_1_1Tree" kindref="compound">Tree</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>the parent </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the value of the node </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backup</parametername>
</parameternamelist>
<parameterdescription>
<para>if true, save the new tree as a child for its parent </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/struct/tree.hpp" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1Tree_1a2f96c7720c6d6ddafa393b5a82cfd546" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>sdm::Tree&lt; T &gt;::~Tree</definition>
        <argsstring>()</argsstring>
        <name>~Tree</name>
        <briefdescription>
<para>Destructor of <ref refid="classsdm_1_1Tree" kindref="compound">Tree</ref> (that&apos;s bad). </para>        </briefdescription>
        <detaileddescription>
<para>This destructor recursively all, children and the item from the tree, bottom up. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/struct/tree.hpp" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1Tree_1aba37b8b13a10f8b81e9af9cbe29e3b67" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sdm::Tree&lt; T &gt;::isOrigin</definition>
        <argsstring>() const</argsstring>
        <name>isOrigin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/struct/tree.hpp" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1Tree_1a49e9a7dcfeef2ab13ceca2da534eccbe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; sdm::Tree&lt; T &gt;::getData</definition>
        <argsstring>() const</argsstring>
        <name>getData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/struct/tree.hpp" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1Tree_1a2510739ce4e5820097b86f61f6ab6a79" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref></type>
        <definition>number sdm::Tree&lt; T &gt;::getNumChildren</definition>
        <argsstring>() const</argsstring>
        <name>getNumChildren</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/struct/tree.hpp" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1Tree_1a7fb458fe98820ec991adbcb87f48bdb6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classsdm_1_1Tree" kindref="compound">Tree</ref>&lt; T &gt; &gt;</type>
        <definition>std::shared_ptr&lt;Tree&lt;T&gt; &gt; sdm::Tree&lt; T &gt;::getChild</definition>
        <argsstring>(const T &amp;child_item) const</argsstring>
        <name>getChild</name>
        <param>
          <type>const T &amp;</type>
          <declname>child_item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/struct/tree.hpp" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1Tree_1a05a629913387d2f4614288cdce0176c0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="classsdm_1_1Tree" kindref="compound">Tree</ref>&lt; T &gt; &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;Tree&lt;T&gt; &gt; &gt; sdm::Tree&lt; T &gt;::getChildren</definition>
        <argsstring>() const</argsstring>
        <name>getChildren</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/struct/tree.hpp" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1Tree_1a13a64d4c3e61db1322e032e1f38674d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdm::Tree&lt; T &gt;::addChild</definition>
        <argsstring>(const T &amp;child_item)</argsstring>
        <name>addChild</name>
        <param>
          <type>const T &amp;</type>
          <declname>child_item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/struct/tree.hpp" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1Tree_1abb0ecff87f08a928b2542ae3a3e2f722" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdm::Tree&lt; T &gt;::addChildren</definition>
        <argsstring>(const std::vector&lt; T &gt; &amp;child_items)</argsstring>
        <name>addChildren</name>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>child_items</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/struct/tree.hpp" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1Tree_1acf1f811678a20821904a6323da8f64da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classsdm_1_1Tree" kindref="compound">Tree</ref>&lt; T &gt; &gt;</type>
        <definition>std::shared_ptr&lt;Tree&lt;T&gt; &gt; sdm::Tree&lt; T &gt;::getParent</definition>
        <argsstring>() const</argsstring>
        <name>getParent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/struct/tree.hpp" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1Tree_1ad6574da4fe5f40b6541980644c92f739" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classsdm_1_1Tree" kindref="compound">Tree</ref>&lt; T &gt; &gt;</type>
        <definition>std::shared_ptr&lt;Tree&lt;T&gt; &gt; sdm::Tree&lt; T &gt;::getOrigin</definition>
        <argsstring>()</argsstring>
        <name>getOrigin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/struct/tree.hpp" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1Tree_1a6118614f6be8224e3bd7a2fb04fe7ea0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref></type>
        <definition>number sdm::Tree&lt; T &gt;::getDepth</definition>
        <argsstring>() const</argsstring>
        <name>getDepth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/struct/tree.hpp" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1Tree_1a3de22f626e43b61000e4336a0f4c3d49" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref></type>
        <definition>number sdm::Tree&lt; T &gt;::getMaxDepth</definition>
        <argsstring>() const</argsstring>
        <name>getMaxDepth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/struct/tree.hpp" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsdm_1_1Tree_1a07bcea92312c91165fcc2f05176b6816" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdm::Tree&lt; T &gt;::setMaxDepth</definition>
        <argsstring>(number) const</argsstring>
        <name>setMaxDepth</name>
        <param>
          <type><ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/struct/tree.hpp" line="118" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classsdm_1_1Tree_1ad05abc9f5dea77597024846c955da535" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const Tree&lt; T &gt; &amp;tree)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classsdm_1_1Tree" kindref="compound">Tree</ref>&lt; T &gt; &amp;</type>
          <declname>tree</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/struct/tree.hpp" line="120" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/struct/tree.hpp" bodystart="120" bodyend="135"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Generic <ref refid="classsdm_1_1Tree" kindref="compound">Tree</ref> class. </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of the data contains in each node</para></parameterdescription>
</parameteritem>
</parameterlist>
Usage Tree&lt;int&gt; tree(); tree.addChildren({3, 4, 5}); tree.getChild(3).addChildren({9, 8, 7, 6}); tree.getChild(5).addChildren({1, 3}); </para>    </detaileddescription>
    <inheritancegraph>
      <node id="716">
        <label>std::enable_shared_from_this&lt; Tree&lt; T &gt; &gt;</label>
      </node>
      <node id="717">
        <label>sdm::HistoryTree&lt; T &gt;</label>
        <link refid="classsdm_1_1HistoryTree"/>
        <childnode refid="715" relation="public-inheritance">
        </childnode>
      </node>
      <node id="715">
        <label>sdm::Tree&lt; T &gt;</label>
        <link refid="classsdm_1_1Tree"/>
        <childnode refid="716" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="720">
        <label>T</label>
      </node>
      <node id="719">
        <label>std::enable_shared_from_this&lt; Tree&lt; T &gt; &gt;</label>
      </node>
      <node id="718">
        <label>sdm::Tree&lt; T &gt;</label>
        <link refid="classsdm_1_1Tree"/>
        <childnode refid="719" relation="public-inheritance">
        </childnode>
        <childnode refid="720" relation="usage">
          <edgelabel>data_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/struct/tree.hpp" line="43" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/struct/tree.hpp" bodystart="42" bodyend="136"/>
    <listofallmembers>
      <member refid="classsdm_1_1Tree_1a13a64d4c3e61db1322e032e1f38674d2" prot="public" virt="non-virtual"><scope>sdm::Tree</scope><name>addChild</name></member>
      <member refid="classsdm_1_1Tree_1abb0ecff87f08a928b2542ae3a3e2f722" prot="public" virt="non-virtual"><scope>sdm::Tree</scope><name>addChildren</name></member>
      <member refid="classsdm_1_1Tree_1ab6c7ad86957d63fd66af450d254ca807" prot="protected" virt="non-virtual"><scope>sdm::Tree</scope><name>children_</name></member>
      <member refid="classsdm_1_1Tree_1a98f84e1f0dac36349a5320a24504b1d1" prot="protected" virt="non-virtual"><scope>sdm::Tree</scope><name>data_</name></member>
      <member refid="classsdm_1_1Tree_1ae049e909459cd5706ee0745861716ec9" prot="protected" virt="non-virtual"><scope>sdm::Tree</scope><name>depth_</name></member>
      <member refid="classsdm_1_1Tree_1a7fb458fe98820ec991adbcb87f48bdb6" prot="public" virt="non-virtual"><scope>sdm::Tree</scope><name>getChild</name></member>
      <member refid="classsdm_1_1Tree_1a05a629913387d2f4614288cdce0176c0" prot="public" virt="non-virtual"><scope>sdm::Tree</scope><name>getChildren</name></member>
      <member refid="classsdm_1_1Tree_1a49e9a7dcfeef2ab13ceca2da534eccbe" prot="public" virt="non-virtual"><scope>sdm::Tree</scope><name>getData</name></member>
      <member refid="classsdm_1_1Tree_1a6118614f6be8224e3bd7a2fb04fe7ea0" prot="public" virt="non-virtual"><scope>sdm::Tree</scope><name>getDepth</name></member>
      <member refid="classsdm_1_1Tree_1a3de22f626e43b61000e4336a0f4c3d49" prot="public" virt="non-virtual"><scope>sdm::Tree</scope><name>getMaxDepth</name></member>
      <member refid="classsdm_1_1Tree_1a2510739ce4e5820097b86f61f6ab6a79" prot="public" virt="non-virtual"><scope>sdm::Tree</scope><name>getNumChildren</name></member>
      <member refid="classsdm_1_1Tree_1ad6574da4fe5f40b6541980644c92f739" prot="public" virt="non-virtual"><scope>sdm::Tree</scope><name>getOrigin</name></member>
      <member refid="classsdm_1_1Tree_1acf1f811678a20821904a6323da8f64da" prot="public" virt="non-virtual"><scope>sdm::Tree</scope><name>getParent</name></member>
      <member refid="classsdm_1_1Tree_1ab49c0f38a81d3be889413c045bebf253" prot="protected" virt="non-virtual"><scope>sdm::Tree</scope><name>is_origin</name></member>
      <member refid="classsdm_1_1Tree_1aba37b8b13a10f8b81e9af9cbe29e3b67" prot="public" virt="non-virtual"><scope>sdm::Tree</scope><name>isOrigin</name></member>
      <member refid="classsdm_1_1Tree_1a80e5971274e11ded824ab123c42bb603" prot="protected" virt="non-virtual"><scope>sdm::Tree</scope><name>max_depth_</name></member>
      <member refid="classsdm_1_1Tree_1ad05abc9f5dea77597024846c955da535" prot="public" virt="non-virtual"><scope>sdm::Tree</scope><name>operator&lt;&lt;</name></member>
      <member refid="classsdm_1_1Tree_1a1d02ab2e9bb05f06d65a27f5f32e2c9e" prot="protected" virt="non-virtual"><scope>sdm::Tree</scope><name>origin_</name></member>
      <member refid="classsdm_1_1Tree_1aab6ac0b72d8bfdab3e6545eb0e0fe7a2" prot="protected" virt="non-virtual"><scope>sdm::Tree</scope><name>parent_</name></member>
      <member refid="classsdm_1_1Tree_1a07bcea92312c91165fcc2f05176b6816" prot="public" virt="non-virtual"><scope>sdm::Tree</scope><name>setMaxDepth</name></member>
      <member refid="classsdm_1_1Tree_1ac782d6594bc0c53fab1a8712466dfbff" prot="public" virt="non-virtual"><scope>sdm::Tree</scope><name>Tree</name></member>
      <member refid="classsdm_1_1Tree_1ad4b77cfe40cfcc700f2bafe06a71fb79" prot="public" virt="non-virtual"><scope>sdm::Tree</scope><name>Tree</name></member>
      <member refid="classsdm_1_1Tree_1a5299b17a5f90a93c66a255aed1777cd1" prot="public" virt="non-virtual"><scope>sdm::Tree</scope><name>Tree</name></member>
      <member refid="classsdm_1_1Tree_1a2f96c7720c6d6ddafa393b5a82cfd546" prot="public" virt="virtual"><scope>sdm::Tree</scope><name>~Tree</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
