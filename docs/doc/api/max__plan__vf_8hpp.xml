<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="max__plan__vf_8hpp" kind="file" language="C++">
    <compoundname>max_plan_vf.hpp</compoundname>
    <includes local="no">set</includes>
    <includes refid="linear__algebra_2vector_8hpp" local="no">sdm/utils/linear_algebra/vector.hpp</includes>
    <includes refid="solvable__by__hsvi_8hpp" local="no">sdm/world/solvable_by_hsvi.hpp</includes>
    <includes refid="value__function_8hpp" local="no">sdm/utils/value_function/value_function.hpp</includes>
    <includes refid="initializer_8hpp" local="no">sdm/utils/value_function/initializer.hpp</includes>
    <includes local="no">sdm/utils/value_function/max_plan_vf.tpp</includes>
    <incdepgraph>
      <node id="3382">
        <label>locale</label>
      </node>
      <node id="3385">
        <label>sdm/world/world_type.hpp</label>
        <link refid="world__type_8hpp"/>
        <childnode refid="3349" relation="include">
        </childnode>
        <childnode refid="3386" relation="include">
        </childnode>
        <childnode refid="3401" relation="include">
        </childnode>
      </node>
      <node id="3409">
        <label>sdm/utils/value_function/max_plan_vf.tpp</label>
      </node>
      <node id="3383">
        <label>fmt/format.h</label>
      </node>
      <node id="3348">
        <label>assert.h</label>
      </node>
      <node id="3401">
        <label>sdm/utils/decision_rules/det_decision_rule.hpp</label>
        <link refid="det__decision__rule_8hpp"/>
        <childnode refid="3402" relation="include">
        </childnode>
        <childnode refid="3363" relation="include">
        </childnode>
        <childnode refid="3373" relation="include">
        </childnode>
        <childnode refid="3358" relation="include">
        </childnode>
      </node>
      <node id="3386">
        <label>sdm/core/states.hpp</label>
        <link refid="states_8hpp"/>
        <childnode refid="3349" relation="include">
        </childnode>
        <childnode refid="3369" relation="include">
        </childnode>
        <childnode refid="3387" relation="include">
        </childnode>
        <childnode refid="3395" relation="include">
        </childnode>
        <childnode refid="3397" relation="include">
        </childnode>
        <childnode refid="3376" relation="include">
        </childnode>
        <childnode refid="3399" relation="include">
        </childnode>
      </node>
      <node id="3366">
        <label>sdm/core/space/discrete_space.tpp</label>
      </node>
      <node id="3367">
        <label>sdm/algorithms/hsvi.hpp</label>
        <link refid="hsvi_8hpp"/>
        <childnode refid="3359" relation="include">
        </childnode>
        <childnode refid="3349" relation="include">
        </childnode>
        <childnode refid="3368" relation="include">
        </childnode>
        <childnode refid="3369" relation="include">
        </childnode>
        <childnode refid="3378" relation="include">
        </childnode>
        <childnode refid="3381" relation="include">
        </childnode>
        <childnode refid="3384" relation="include">
        </childnode>
      </node>
      <node id="3397">
        <label>sdm/core/state/occupancy_state.hpp</label>
        <link refid="occupancy__state_8hpp"/>
        <childnode refid="3359" relation="include">
        </childnode>
        <childnode refid="3349" relation="include">
        </childnode>
        <childnode refid="3377" relation="include">
        </childnode>
        <childnode refid="3369" relation="include">
        </childnode>
        <childnode refid="3387" relation="include">
        </childnode>
        <childnode refid="3398" relation="include">
        </childnode>
      </node>
      <node id="3395">
        <label>sdm/core/state/belief_state.hpp</label>
        <link refid="belief__state_8hpp"/>
        <childnode refid="3349" relation="include">
        </childnode>
        <childnode refid="3373" relation="include">
        </childnode>
        <childnode refid="3396" relation="include">
        </childnode>
      </node>
      <node id="3353">
        <label>boost/bimap.hpp</label>
      </node>
      <node id="3343">
        <label>sdm/utils/linear_algebra/vector.hpp</label>
        <link refid="linear__algebra_2vector_8hpp"/>
        <childnode refid="3344" relation="include">
        </childnode>
        <childnode refid="3345" relation="include">
        </childnode>
        <childnode refid="3346" relation="include">
        </childnode>
        <childnode refid="3347" relation="include">
        </childnode>
        <childnode refid="3348" relation="include">
        </childnode>
        <childnode refid="3349" relation="include">
        </childnode>
      </node>
      <node id="3368">
        <label>sdm/public/algorithm.hpp</label>
        <link refid="algorithm_8hpp"/>
      </node>
      <node id="3394">
        <label>sdm/core/state/jhistory_tree.tpp</label>
      </node>
      <node id="3374">
        <label>cmath</label>
      </node>
      <node id="3408">
        <label>sdm/utils/value_function/state_2_occupancy_vf.tpp</label>
      </node>
      <node id="3347">
        <label>eigen3/Eigen/Dense</label>
      </node>
      <node id="3359">
        <label>string</label>
      </node>
      <node id="3372">
        <label>sdm/utils/linear_algebra/sdms_vector.tpp</label>
      </node>
      <node id="3380">
        <label>sdm/utils/value_function/value_function.tpp</label>
      </node>
      <node id="3402">
        <label>map</label>
      </node>
      <node id="3403">
        <label>sdm/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="3359" relation="include">
        </childnode>
        <childnode refid="3404" relation="include">
        </childnode>
      </node>
      <node id="3378">
        <label>sdm/utils/value_function/value_function.hpp</label>
        <link refid="value__function_8hpp"/>
        <childnode refid="3379" relation="include">
        </childnode>
        <childnode refid="3363" relation="include">
        </childnode>
        <childnode refid="3371" relation="include">
        </childnode>
        <childnode refid="3380" relation="include">
        </childnode>
      </node>
      <node id="3390">
        <label>unordered_set</label>
      </node>
      <node id="3363">
        <label>sdm/core/function.hpp</label>
        <link refid="function_8hpp"/>
      </node>
      <node id="3392">
        <label>sdm/core/state/history_tree.tpp</label>
      </node>
      <node id="3364">
        <label>sdm/utils/struct/vector.hpp</label>
        <link refid="struct_2vector_8hpp"/>
        <childnode refid="3351" relation="include">
        </childnode>
        <childnode refid="3356" relation="include">
        </childnode>
      </node>
      <node id="3398">
        <label>sdm/core/state/occupancy_state.tpp</label>
      </node>
      <node id="3404">
        <label>exception</label>
      </node>
      <node id="3373">
        <label>sdm/utils/linear_algebra/mapped_vector.hpp</label>
        <link refid="mapped__vector_8hpp"/>
        <childnode refid="3352" relation="include">
        </childnode>
        <childnode refid="3374" relation="include">
        </childnode>
        <childnode refid="3359" relation="include">
        </childnode>
        <childnode refid="3356" relation="include">
        </childnode>
        <childnode refid="3351" relation="include">
        </childnode>
        <childnode refid="3348" relation="include">
        </childnode>
        <childnode refid="3349" relation="include">
        </childnode>
        <childnode refid="3371" relation="include">
        </childnode>
        <childnode refid="3375" relation="include">
        </childnode>
      </node>
      <node id="3361">
        <label>fstream</label>
      </node>
      <node id="3393">
        <label>sdm/core/state/jhistory_tree.hpp</label>
        <link refid="jhistory__tree_8hpp"/>
        <childnode refid="3388" relation="include">
        </childnode>
        <childnode refid="3357" relation="include">
        </childnode>
        <childnode refid="3394" relation="include">
        </childnode>
      </node>
      <node id="3354">
        <label>sdm/world/solvable_by_hsvi.hpp</label>
        <link refid="solvable__by__hsvi_8hpp"/>
        <childnode refid="3349" relation="include">
        </childnode>
        <childnode refid="3355" relation="include">
        </childnode>
        <childnode refid="3367" relation="include">
        </childnode>
        <childnode refid="3385" relation="include">
        </childnode>
        <childnode refid="3378" relation="include">
        </childnode>
        <childnode refid="3403" relation="include">
        </childnode>
      </node>
      <node id="3388">
        <label>sdm/core/state/history_tree.hpp</label>
        <link refid="history__tree_8hpp"/>
        <childnode refid="3389" relation="include">
        </childnode>
        <childnode refid="3392" relation="include">
        </childnode>
      </node>
      <node id="3344">
        <label>boost/numeric/ublas/vector.hpp</label>
      </node>
      <node id="3345">
        <label>boost/numeric/ublas/io.hpp</label>
      </node>
      <node id="3375">
        <label>sdm/utils/linear_algebra/mapped_vector.tpp</label>
      </node>
      <node id="3355">
        <label>sdm/core/space/discrete_space.hpp</label>
        <link refid="discrete__space_8hpp"/>
        <childnode refid="3356" relation="include">
        </childnode>
        <childnode refid="3353" relation="include">
        </childnode>
        <childnode refid="3349" relation="include">
        </childnode>
        <childnode refid="3357" relation="include">
        </childnode>
        <childnode refid="3365" relation="include">
        </childnode>
        <childnode refid="3366" relation="include">
        </childnode>
      </node>
      <node id="3356">
        <label>vector</label>
      </node>
      <node id="3370">
        <label>sdm/utils/linear_algebra/sdms_vector.hpp</label>
        <link refid="sdms__vector_8hpp"/>
        <childnode refid="3344" relation="include">
        </childnode>
        <childnode refid="3345" relation="include">
        </childnode>
        <childnode refid="3348" relation="include">
        </childnode>
        <childnode refid="3371" relation="include">
        </childnode>
        <childnode refid="3372" relation="include">
        </childnode>
      </node>
      <node id="3377">
        <label>sdm/utils/struct/pair.hpp</label>
        <link refid="pair_8hpp"/>
        <childnode refid="3351" relation="include">
        </childnode>
        <childnode refid="3364" relation="include">
        </childnode>
      </node>
      <node id="3369">
        <label>sdm/core/state/state.hpp</label>
        <link refid="state_8hpp"/>
        <childnode refid="3349" relation="include">
        </childnode>
        <childnode refid="3370" relation="include">
        </childnode>
        <childnode refid="3373" relation="include">
        </childnode>
        <childnode refid="3376" relation="include">
        </childnode>
      </node>
      <node id="3365">
        <label>sdm/core/space/space.hpp</label>
        <link refid="space_8hpp"/>
        <childnode refid="3356" relation="include">
        </childnode>
        <childnode refid="3353" relation="include">
        </childnode>
        <childnode refid="3349" relation="include">
        </childnode>
      </node>
      <node id="3362">
        <label>sstream</label>
      </node>
      <node id="3357">
        <label>sdm/core/joint.hpp</label>
        <link refid="joint_8hpp"/>
        <childnode refid="3356" relation="include">
        </childnode>
        <childnode refid="3349" relation="include">
        </childnode>
        <childnode refid="3358" relation="include">
        </childnode>
        <childnode refid="3363" relation="include">
        </childnode>
        <childnode refid="3364" relation="include">
        </childnode>
      </node>
      <node id="3391">
        <label>sdm/utils/struct/tree.tpp</label>
      </node>
      <node id="3400">
        <label>sdm/core/state/serialized_occupancy_state.tpp</label>
      </node>
      <node id="3381">
        <label>sdm/utils/logging/logger.hpp</label>
        <link refid="logger_8hpp"/>
        <childnode refid="3351" relation="include">
        </childnode>
        <childnode refid="3382" relation="include">
        </childnode>
        <childnode refid="3383" relation="include">
        </childnode>
        <childnode refid="3358" relation="include">
        </childnode>
      </node>
      <node id="3384">
        <label>sdm/algorithms/hsvi.tpp</label>
      </node>
      <node id="3406">
        <label>math.h</label>
      </node>
      <node id="3360">
        <label>cstdlib</label>
      </node>
      <node id="3351">
        <label>iostream</label>
      </node>
      <node id="3350">
        <label>cstddef</label>
      </node>
      <node id="3399">
        <label>sdm/core/state/serialized_occupancy_state.hpp</label>
        <link refid="serialized__occupancy__state_8hpp"/>
        <childnode refid="3359" relation="include">
        </childnode>
        <childnode refid="3349" relation="include">
        </childnode>
        <childnode refid="3377" relation="include">
        </childnode>
        <childnode refid="3369" relation="include">
        </childnode>
        <childnode refid="3376" relation="include">
        </childnode>
        <childnode refid="3400" relation="include">
        </childnode>
      </node>
      <node id="3358">
        <label>sdm/tools.hpp</label>
        <link refid="tools_8hpp"/>
        <childnode refid="3359" relation="include">
        </childnode>
        <childnode refid="3360" relation="include">
        </childnode>
        <childnode refid="3361" relation="include">
        </childnode>
        <childnode refid="3362" relation="include">
        </childnode>
        <childnode refid="3351" relation="include">
        </childnode>
      </node>
      <node id="3352">
        <label>unordered_map</label>
      </node>
      <node id="3405">
        <label>sdm/utils/value_function/initializer.hpp</label>
        <link refid="initializer_8hpp"/>
        <childnode refid="3406" relation="include">
        </childnode>
        <childnode refid="3367" relation="include">
        </childnode>
        <childnode refid="3378" relation="include">
        </childnode>
        <childnode refid="3407" relation="include">
        </childnode>
      </node>
      <node id="3371">
        <label>sdm/utils/linear_algebra/vector_impl.hpp</label>
        <link refid="vector__impl_8hpp"/>
        <childnode refid="3360" relation="include">
        </childnode>
        <childnode refid="3362" relation="include">
        </childnode>
      </node>
      <node id="3342">
        <label>set</label>
      </node>
      <node id="3376">
        <label>sdm/core/state/serialized_state.hpp</label>
        <link refid="serialized__state_8hpp"/>
        <childnode refid="3349" relation="include">
        </childnode>
        <childnode refid="3364" relation="include">
        </childnode>
        <childnode refid="3377" relation="include">
        </childnode>
      </node>
      <node id="3387">
        <label>sdm/core/state/history.hpp</label>
        <link refid="history_8hpp"/>
        <childnode refid="3356" relation="include">
        </childnode>
        <childnode refid="3369" relation="include">
        </childnode>
        <childnode refid="3388" relation="include">
        </childnode>
        <childnode refid="3393" relation="include">
        </childnode>
      </node>
      <node id="3396">
        <label>sdm/core/state/belief_state.tpp</label>
      </node>
      <node id="3407">
        <label>sdm/utils/value_function/state_2_occupancy_vf.hpp</label>
        <link refid="state__2__occupancy__vf_8hpp"/>
        <childnode refid="3349" relation="include">
        </childnode>
        <childnode refid="3363" relation="include">
        </childnode>
        <childnode refid="3408" relation="include">
        </childnode>
      </node>
      <node id="3379">
        <label>memory</label>
      </node>
      <node id="3346">
        <label>eigen3/Eigen/Sparse</label>
      </node>
      <node id="3389">
        <label>sdm/utils/struct/tree.hpp</label>
        <link refid="tree_8hpp"/>
        <childnode refid="3390" relation="include">
        </childnode>
        <childnode refid="3352" relation="include">
        </childnode>
        <childnode refid="3379" relation="include">
        </childnode>
        <childnode refid="3351" relation="include">
        </childnode>
        <childnode refid="3349" relation="include">
        </childnode>
        <childnode refid="3358" relation="include">
        </childnode>
        <childnode refid="3391" relation="include">
        </childnode>
      </node>
      <node id="3341">
        <label>/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/value_function/max_plan_vf.hpp</label>
        <link refid="max__plan__vf_8hpp"/>
        <childnode refid="3342" relation="include">
        </childnode>
        <childnode refid="3343" relation="include">
        </childnode>
        <childnode refid="3354" relation="include">
        </childnode>
        <childnode refid="3378" relation="include">
        </childnode>
        <childnode refid="3405" relation="include">
        </childnode>
        <childnode refid="3409" relation="include">
        </childnode>
      </node>
      <node id="3349">
        <label>sdm/types.hpp</label>
        <link refid="types_8hpp"/>
        <childnode refid="3350" relation="include">
        </childnode>
        <childnode refid="3351" relation="include">
        </childnode>
        <childnode refid="3352" relation="include">
        </childnode>
        <childnode refid="3353" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classsdm_1_1MaxPlanValueFunction" prot="public">sdm::MaxPlanValueFunction</innerclass>
    <innernamespace refid="namespacesdm">sdm</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>David Albert (<ulink url="mailto:david.albert@insa-lyon.fr">david.albert@insa-lyon.fr</ulink>) </para></simplesect>
<simplesect kind="version"><para>0.1 </para></simplesect>
<simplesect kind="date"><para>18/12/2020</para></simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2020 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="11"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="linear__algebra_2vector_8hpp" kindref="compound">sdm/utils/linear_algebra/vector.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="solvable__by__hsvi_8hpp" kindref="compound">sdm/world/solvable_by_hsvi.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="value__function_8hpp" kindref="compound">sdm/utils/value_function/value_function.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="initializer_8hpp" kindref="compound">sdm/utils/value_function/initializer.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesdm" kindref="compound">sdm</ref></highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TVector,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TAction,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TValue<sp/>=<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="31" refid="classsdm_1_1MaxPlanValueFunction" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsdm_1_1MaxPlanValueFunction" kindref="compound">MaxPlanValueFunction</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classsdm_1_1ValueFunction" kindref="compound">ValueFunction</ref>&lt;TVector,<sp/>TAction,<sp/>TValue&gt;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="34" refid="classsdm_1_1MaxPlanValueFunction_1ab9645ff2dde55b1849ce83833ee3a660" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classsdm_1_1MaxPlanValueFunction_1ab9645ff2dde55b1849ce83833ee3a660" kindref="member">HyperplanSet</ref><sp/>=<sp/>std::set&lt;TVector&gt;;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classsdm_1_1MaxPlanValueFunction_1abd3a7b82f1cd48b7a5dd46ccaa9bef32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;HyperplanSet&gt;<sp/><ref refid="classsdm_1_1MaxPlanValueFunction_1abd3a7b82f1cd48b7a5dd46ccaa9bef32" kindref="member">representation</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="classsdm_1_1MaxPlanValueFunction_1a731469219f0178d4458bea16814d1362" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Initializer&lt;TVector,<sp/>TAction&gt;&gt;<sp/><ref refid="classsdm_1_1MaxPlanValueFunction_1a731469219f0178d4458bea16814d1362" kindref="member">initializer_</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::vector&lt;TValue&gt;<sp/>default_value_;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsdm_1_1MaxPlanValueFunction_1a083313ca8e96c00cc972ad8e8f453a01" kindref="member">MaxPlanValueFunction</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsdm_1_1MaxPlanValueFunction_1a083313ca8e96c00cc972ad8e8f453a01" kindref="member">MaxPlanValueFunction</ref>(std::shared_ptr&lt;<ref refid="classsdm_1_1SolvableByHSVI" kindref="compound">SolvableByHSVI&lt;TVector, TAction&gt;</ref>&gt;<sp/>problem,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacesdm_1a5ddd53ea7e4cf65a50bc50f21441d9be" kindref="member">horizon</ref>,<sp/>std::shared_ptr&lt;<ref refid="classsdm_1_1Initializer" kindref="compound">Initializer&lt;TVector, TAction&gt;</ref>&gt;<sp/>initializer);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsdm_1_1MaxPlanValueFunction_1a083313ca8e96c00cc972ad8e8f453a01" kindref="member">MaxPlanValueFunction</ref>(std::shared_ptr&lt;<ref refid="classsdm_1_1SolvableByHSVI" kindref="compound">SolvableByHSVI&lt;TVector, TAction&gt;</ref>&gt;<sp/>problem,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacesdm_1a5ddd53ea7e4cf65a50bc50f21441d9be" kindref="member">horizon</ref><sp/>=<sp/>0,<sp/>TValue<sp/>default_value<sp/>=<sp/>0.);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsdm_1_1MaxPlanValueFunction_1ac105041ddd0581c5500f938c0d413022" kindref="member">initialize</ref>();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsdm_1_1MaxPlanValueFunction_1ac105041ddd0581c5500f938c0d413022" kindref="member">initialize</ref>(TValue<sp/>default_value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsdm_1_1MaxPlanValueFunction_1a4152d456cd73be2a056fcc13bf363876" kindref="member">updateValueAt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TVector<sp/>&amp;<ref refid="namespacesdm_1a13e6c065a1b4b44700414568be5b9586" kindref="member">state</ref>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TValue<sp/><ref refid="classsdm_1_1MaxPlanValueFunction_1a91aa5c22ca684caa5d0335a22afa1b3a" kindref="member">getValueAt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TVector<sp/>&amp;<ref refid="namespacesdm_1a13e6c065a1b4b44700414568be5b9586" kindref="member">state</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::pair&lt;TValue,<sp/>TVector&gt;<sp/><ref refid="classsdm_1_1MaxPlanValueFunction_1a0fd3abf6f6abfac4c0554d49ee9a8979" kindref="member">getMaxAt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TVector<sp/>&amp;<ref refid="namespacesdm_1a13e6c065a1b4b44700414568be5b9586" kindref="member">state</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref><sp/><ref refid="classsdm_1_1MaxPlanValueFunction_1a6c1d79f2fdce5afd63724f56cc2849d7" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsdm_1_1MaxPlanValueFunction_1a9b646b9d53bb8cfa257bc99baf09ee68" kindref="member">prune</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsdm_1_1MaxPlanValueFunction_1a2091a2bd9390313b5a15ebb47417d42f" kindref="member">lark_prune</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsdm_1_1MaxPlanValueFunction_1a48b2e14e7a164d29b2e7c7d3dfe1b751" kindref="member">bounded_prune</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TVector<sp/><ref refid="classsdm_1_1MaxPlanValueFunction_1a7f2d5f46e13fd4d426170e5c3e604288" kindref="member">backup_bellman_operator</ref>(std::shared_ptr&lt;POSG&gt;<sp/>world,<sp/>TVector<sp/>belief);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TAction<sp/><ref refid="classsdm_1_1MaxPlanValueFunction_1afb210c406cbe8d2fd28a4d84feb4d952" kindref="member">getBestAction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TVector<sp/>&amp;<ref refid="namespacesdm_1a13e6c065a1b4b44700414568be5b9586" kindref="member">state</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TValue<sp/><ref refid="classsdm_1_1MaxPlanValueFunction_1a17bdc66173be7084358b6a6f26c30f55" kindref="member">getQValueAt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TVector<sp/>&amp;<ref refid="namespacesdm_1a13e6c065a1b4b44700414568be5b9586" kindref="member">state</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TAction<sp/>&amp;<ref refid="namespacesdm_1ae21094a69e920050f2aa1c7b5c0d2677" kindref="member">action</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;VectorImpl&lt;TAction,<sp/>TValue&gt;&gt;<sp/><ref refid="classsdm_1_1MaxPlanValueFunction_1a17bdc66173be7084358b6a6f26c30f55" kindref="member">getQValueAt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TVector<sp/>&amp;<ref refid="namespacesdm_1a13e6c065a1b4b44700414568be5b9586" kindref="member">state</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TValue<sp/><ref refid="classsdm_1_1MaxPlanValueFunction_1a683bdda7fed203ed0c894233c572c4dc" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TVector<sp/>&amp;<ref refid="namespacesdm_1a13e6c065a1b4b44700414568be5b9586" kindref="member">state</ref>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsdm_1_1MaxPlanValueFunction_1a4152d456cd73be2a056fcc13bf363876" kindref="member">updateValueAt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TVector<sp/>&amp;<ref refid="namespacesdm_1a13e6c065a1b4b44700414568be5b9586" kindref="member">state</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="classsdm_1_1MaxPlanValueFunction_1a6dbb70332bb023318e8f6d3c4783e0b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classsdm_1_1MaxPlanValueFunction_1a6dbb70332bb023318e8f6d3c4783e0b3" kindref="member">str</ref>()<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;MaxPlanVF&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>sdm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sdm/utils/value_function/max_plan_vf.tpp&gt;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/value_function/max_plan_vf.hpp"/>
  </compounddef>
</doxygen>
