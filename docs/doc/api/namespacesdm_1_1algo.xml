<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacesdm_1_1algo" kind="namespace" language="C++">
    <compoundname>sdm::algo</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacesdm_1_1algo_1a08d30a02bdb1827d9c92f1e90c61cb4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TState</type>
          </param>
          <param>
            <type>typename TAction</type>
          </param>
        </templateparamlist>
        <type>std::shared_ptr&lt; <ref refid="classsdm_1_1HSVI" kindref="compound">sdm::HSVI</ref>&lt; TState, TAction &gt; &gt;</type>
        <definition>std::shared_ptr&lt;sdm::HSVI&lt;TState, TAction&gt; &gt; sdm::algo::makeMappedHSVI</definition>
        <argsstring>(std::shared_ptr&lt; SolvableByHSVI&lt; TState, TAction &gt;&gt; problem, std::string ub_init_name, std::string lb_init_name, double discount, double error, int horizon, int trials, std::string name)</argsstring>
        <name>makeMappedHSVI</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classsdm_1_1SolvableByHSVI" kindref="compound">SolvableByHSVI</ref>&lt; TState, TAction &gt;&gt;</type>
          <declname>problem</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>ub_init_name</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>lb_init_name</declname>
        </param>
        <param>
          <type>double</type>
          <declname>discount</declname>
        </param>
        <param>
          <type>double</type>
          <declname>error</declname>
        </param>
        <param>
          <type>int</type>
          <declname>horizon</declname>
        </param>
        <param>
          <type>int</type>
          <declname>trials</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Build the <ref refid="classsdm_1_1HSVI" kindref="compound">HSVI</ref> version that use <ref refid="classsdm_1_1TabularValueFunction" kindref="compound">TabularValueFunction</ref> Representation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TState</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the state. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TAction</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the action. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>problem</parametername>
</parameternamelist>
<parameterdescription>
<para>the problem to be solved </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>discount</parametername>
</parameternamelist>
<parameterdescription>
<para>the discount factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>the accuracy </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>horizon</parametername>
</parameternamelist>
<parameterdescription>
<para>the planning horizon </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer on <ref refid="classsdm_1_1HSVI" kindref="compound">HSVI</ref> instance </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/algorithms.hpp" line="32" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/algorithms.hpp" bodystart="32" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="namespacesdm_1_1algo_1a50958ad417cd768ec89a9c0cbe7ff98d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classsdm_1_1Algorithm" kindref="compound">Algorithm</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Algorithm&gt; sdm::algo::make</definition>
        <argsstring>(std::string algo_name, std::string problem_path, std::string formalism, std::string ub_init, std::string lb_init, double discount=0.99, double error=0.001, int horizon=0, int trials=1000, std::string name=&quot;&quot;)</argsstring>
        <name>make</name>
        <param>
          <type>std::string</type>
          <declname>algo_name</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>problem_path</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>formalism</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>ub_init</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>lb_init</declname>
        </param>
        <param>
          <type>double</type>
          <declname>discount</declname>
          <defval>0.99</defval>
        </param>
        <param>
          <type>double</type>
          <declname>error</declname>
          <defval>0.001</defval>
        </param>
        <param>
          <type>int</type>
          <declname>horizon</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>trials</declname>
          <defval>1000</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>name</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Build an algorithm given his name and the configurations required. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TState</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TAction</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>problem</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>discount</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>horizon</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>trials</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::shared_ptr&lt;sdm::HSVI&lt;TState, TAction&gt;&gt; </para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TState</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the state. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TAction</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the action. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>algo_name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the algorithm to be built* </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>problem</parametername>
</parameternamelist>
<parameterdescription>
<para>the problem to be solved </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>discount</parametername>
</parameternamelist>
<parameterdescription>
<para>the discount factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>the accuracy </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>horizon</parametername>
</parameternamelist>
<parameterdescription>
<para>the planning horizon </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>trials</parametername>
</parameternamelist>
<parameterdescription>
<para>the maximum number of trials </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>auto pointer on algorithm instance </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/algorithms.hpp" line="98" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/algorithms.hpp" bodystart="98" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="namespacesdm_1_1algo_1a39dce981d596f5772a2c652e5c563a47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; sdm::algo::available</definition>
        <argsstring>()</argsstring>
        <name>available</name>
        <briefdescription>
<para>Get all available algorithms. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the list of available algorithms. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/algorithms.hpp" line="162" column="1" bodyfile="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/algorithms.hpp" bodystart="162" bodyend="165"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/algorithms.hpp" line="19" column="1"/>
  </compounddef>
</doxygen>
