<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="ndpomdp_8cpp" kind="file" language="C++">
    <compoundname>ndpomdp.cpp</compoundname>
    <includes refid="ndpomdp_8hpp" local="no">sdm/world/ndpomdp.hpp</includes>
    <incdepgraph>
      <node id="4937">
        <label>list</label>
      </node>
      <node id="4979">
        <label>locale</label>
      </node>
      <node id="5006">
        <label>sdm/core/space/multi_space.hpp</label>
        <link refid="multi__space_8hpp"/>
        <childnode refid="4936" relation="include">
        </childnode>
        <childnode refid="4948" relation="include">
        </childnode>
        <childnode refid="4945" relation="include">
        </childnode>
        <childnode refid="4959" relation="include">
        </childnode>
        <childnode refid="5007" relation="include">
        </childnode>
      </node>
      <node id="5025">
        <label>sdm/world/belief_mdp.hpp</label>
        <link refid="belief__mdp_8hpp"/>
        <childnode refid="4945" relation="include">
        </childnode>
        <childnode refid="4963" relation="include">
        </childnode>
        <childnode refid="4952" relation="include">
        </childnode>
        <childnode refid="4951" relation="include">
        </childnode>
        <childnode refid="5026" relation="include">
        </childnode>
        <childnode refid="5027" relation="include">
        </childnode>
      </node>
      <node id="4982">
        <label>sdm/world/world_type.hpp</label>
        <link refid="world__type_8hpp"/>
        <childnode refid="4945" relation="include">
        </childnode>
        <childnode refid="4983" relation="include">
        </childnode>
        <childnode refid="4997" relation="include">
        </childnode>
      </node>
      <node id="4980">
        <label>fmt/format.h</label>
      </node>
      <node id="5008">
        <label>sdm/core/space/multi_discrete_space.tpp</label>
      </node>
      <node id="5026">
        <label>sdm/world/discrete_mmdp.hpp</label>
        <link refid="discrete__mmdp_8hpp"/>
        <childnode refid="4945" relation="include">
        </childnode>
        <childnode refid="5000" relation="include">
        </childnode>
        <childnode refid="5025" relation="include">
        </childnode>
        <childnode refid="4953" relation="include">
        </childnode>
        <childnode refid="5005" relation="include">
        </childnode>
        <childnode refid="5014" relation="include">
        </childnode>
        <childnode refid="5023" relation="include">
        </childnode>
      </node>
      <node id="4967">
        <label>assert.h</label>
      </node>
      <node id="4997">
        <label>sdm/utils/decision_rules/det_decision_rule.hpp</label>
        <link refid="det__decision__rule_8hpp"/>
        <childnode refid="4941" relation="include">
        </childnode>
        <childnode refid="4957" relation="include">
        </childnode>
        <childnode refid="4970" relation="include">
        </childnode>
        <childnode refid="4955" relation="include">
        </childnode>
      </node>
      <node id="4983">
        <label>sdm/core/states.hpp</label>
        <link refid="states_8hpp"/>
        <childnode refid="4945" relation="include">
        </childnode>
        <childnode refid="4963" relation="include">
        </childnode>
        <childnode refid="4984" relation="include">
        </childnode>
        <childnode refid="4991" relation="include">
        </childnode>
        <childnode refid="4993" relation="include">
        </childnode>
        <childnode refid="4973" relation="include">
        </childnode>
        <childnode refid="4995" relation="include">
        </childnode>
      </node>
      <node id="4960">
        <label>sdm/core/space/discrete_space.tpp</label>
      </node>
      <node id="4961">
        <label>sdm/algorithms/hsvi.hpp</label>
        <link refid="hsvi_8hpp"/>
        <childnode refid="4935" relation="include">
        </childnode>
        <childnode refid="4945" relation="include">
        </childnode>
        <childnode refid="4962" relation="include">
        </childnode>
        <childnode refid="4963" relation="include">
        </childnode>
        <childnode refid="4975" relation="include">
        </childnode>
        <childnode refid="4978" relation="include">
        </childnode>
        <childnode refid="4981" relation="include">
        </childnode>
      </node>
      <node id="4933">
        <label>/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/ndpomdp.cpp</label>
        <link refid="ndpomdp_8cpp"/>
        <childnode refid="4934" relation="include">
        </childnode>
      </node>
      <node id="5038">
        <label>sdm/world/serialized_mdp.tpp</label>
      </node>
      <node id="4993">
        <label>sdm/core/state/occupancy_state.hpp</label>
        <link refid="occupancy__state_8hpp"/>
        <childnode refid="4935" relation="include">
        </childnode>
        <childnode refid="4945" relation="include">
        </childnode>
        <childnode refid="4974" relation="include">
        </childnode>
        <childnode refid="4963" relation="include">
        </childnode>
        <childnode refid="4984" relation="include">
        </childnode>
        <childnode refid="4994" relation="include">
        </childnode>
      </node>
      <node id="4991">
        <label>sdm/core/state/belief_state.hpp</label>
        <link refid="belief__state_8hpp"/>
        <childnode refid="4945" relation="include">
        </childnode>
        <childnode refid="4970" relation="include">
        </childnode>
        <childnode refid="4992" relation="include">
        </childnode>
      </node>
      <node id="4948">
        <label>boost/bimap.hpp</label>
      </node>
      <node id="5022">
        <label>sdm/utils/linear_algebra/vector.hpp</label>
        <link refid="linear__algebra_2vector_8hpp"/>
        <childnode refid="4965" relation="include">
        </childnode>
        <childnode refid="4966" relation="include">
        </childnode>
        <childnode refid="5019" relation="include">
        </childnode>
        <childnode refid="5020" relation="include">
        </childnode>
        <childnode refid="4967" relation="include">
        </childnode>
        <childnode refid="4945" relation="include">
        </childnode>
      </node>
      <node id="4962">
        <label>sdm/public/algorithm.hpp</label>
        <link refid="algorithm_8hpp"/>
      </node>
      <node id="5033">
        <label>sdm/world/po_decision_process.tpp</label>
      </node>
      <node id="4990">
        <label>sdm/core/state/jhistory_tree.tpp</label>
      </node>
      <node id="4971">
        <label>cmath</label>
      </node>
      <node id="5039">
        <label>sdm/world/serialized_occupancy_mdp.hpp</label>
        <link refid="serialized__occupancy__mdp_8hpp"/>
        <childnode refid="4945" relation="include">
        </childnode>
        <childnode refid="4952" relation="include">
        </childnode>
        <childnode refid="4951" relation="include">
        </childnode>
        <childnode refid="5028" relation="include">
        </childnode>
        <childnode refid="5025" relation="include">
        </childnode>
        <childnode refid="4953" relation="include">
        </childnode>
        <childnode refid="4995" relation="include">
        </childnode>
        <childnode refid="4973" relation="include">
        </childnode>
        <childnode refid="5022" relation="include">
        </childnode>
        <childnode refid="4997" relation="include">
        </childnode>
        <childnode refid="5040" relation="include">
        </childnode>
      </node>
      <node id="5029">
        <label>sdm/world/po_decision_process.hpp</label>
        <link refid="po__decision__process_8hpp"/>
        <childnode refid="4945" relation="include">
        </childnode>
        <childnode refid="5000" relation="include">
        </childnode>
        <childnode refid="5030" relation="include">
        </childnode>
        <childnode refid="4953" relation="include">
        </childnode>
        <childnode refid="5005" relation="include">
        </childnode>
        <childnode refid="5014" relation="include">
        </childnode>
        <childnode refid="5032" relation="include">
        </childnode>
        <childnode refid="5023" relation="include">
        </childnode>
        <childnode refid="5033" relation="include">
        </childnode>
      </node>
      <node id="5020">
        <label>eigen3/Eigen/Dense</label>
      </node>
      <node id="4935">
        <label>string</label>
      </node>
      <node id="4969">
        <label>sdm/utils/linear_algebra/sdms_vector.tpp</label>
      </node>
      <node id="4977">
        <label>sdm/utils/value_function/value_function.tpp</label>
      </node>
      <node id="4941">
        <label>map</label>
      </node>
      <node id="4998">
        <label>sdm/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="4935" relation="include">
        </childnode>
        <childnode refid="4999" relation="include">
        </childnode>
      </node>
      <node id="4975">
        <label>sdm/utils/value_function/value_function.hpp</label>
        <link refid="value__function_8hpp"/>
        <childnode refid="4976" relation="include">
        </childnode>
        <childnode refid="4957" relation="include">
        </childnode>
        <childnode refid="4968" relation="include">
        </childnode>
        <childnode refid="4977" relation="include">
        </childnode>
      </node>
      <node id="4942">
        <label>unordered_set</label>
      </node>
      <node id="4957">
        <label>sdm/core/function.hpp</label>
        <link refid="function_8hpp"/>
      </node>
      <node id="4988">
        <label>sdm/core/state/history_tree.tpp</label>
      </node>
      <node id="5032">
        <label>sdm/core/observation_dynamics.hpp</label>
        <link refid="observation__dynamics_8hpp"/>
        <childnode refid="4942" relation="include">
        </childnode>
        <childnode refid="4945" relation="include">
        </childnode>
        <childnode refid="5015" relation="include">
        </childnode>
      </node>
      <node id="4958">
        <label>sdm/utils/struct/vector.hpp</label>
        <link refid="struct_2vector_8hpp"/>
        <childnode refid="4939" relation="include">
        </childnode>
        <childnode refid="4936" relation="include">
        </childnode>
      </node>
      <node id="4994">
        <label>sdm/core/state/occupancy_state.tpp</label>
      </node>
      <node id="5036">
        <label>sdm/world/occupancy_mdp.tpp</label>
      </node>
      <node id="4999">
        <label>exception</label>
      </node>
      <node id="4970">
        <label>sdm/utils/linear_algebra/mapped_vector.hpp</label>
        <link refid="mapped__vector_8hpp"/>
        <childnode refid="4947" relation="include">
        </childnode>
        <childnode refid="4971" relation="include">
        </childnode>
        <childnode refid="4935" relation="include">
        </childnode>
        <childnode refid="4936" relation="include">
        </childnode>
        <childnode refid="4939" relation="include">
        </childnode>
        <childnode refid="4967" relation="include">
        </childnode>
        <childnode refid="4945" relation="include">
        </childnode>
        <childnode refid="4968" relation="include">
        </childnode>
        <childnode refid="4972" relation="include">
        </childnode>
      </node>
      <node id="4938">
        <label>fstream</label>
      </node>
      <node id="5005">
        <label>sdm/core/space/multi_discrete_space.hpp</label>
        <link refid="multi__discrete__space_8hpp"/>
        <childnode refid="4936" relation="include">
        </childnode>
        <childnode refid="4967" relation="include">
        </childnode>
        <childnode refid="4948" relation="include">
        </childnode>
        <childnode refid="4945" relation="include">
        </childnode>
        <childnode refid="5006" relation="include">
        </childnode>
        <childnode refid="4953" relation="include">
        </childnode>
        <childnode refid="4954" relation="include">
        </childnode>
        <childnode refid="5008" relation="include">
        </childnode>
      </node>
      <node id="4934">
        <label>sdm/world/ndpomdp.hpp</label>
        <link refid="ndpomdp_8hpp"/>
        <childnode refid="4935" relation="include">
        </childnode>
        <childnode refid="4936" relation="include">
        </childnode>
        <childnode refid="4937" relation="include">
        </childnode>
        <childnode refid="4938" relation="include">
        </childnode>
        <childnode refid="4939" relation="include">
        </childnode>
        <childnode refid="4940" relation="include">
        </childnode>
        <childnode refid="4941" relation="include">
        </childnode>
        <childnode refid="4942" relation="include">
        </childnode>
        <childnode refid="4943" relation="include">
        </childnode>
        <childnode refid="4944" relation="include">
        </childnode>
        <childnode refid="4945" relation="include">
        </childnode>
        <childnode refid="4949" relation="include">
        </childnode>
        <childnode refid="4950" relation="include">
        </childnode>
        <childnode refid="5022" relation="include">
        </childnode>
      </node>
      <node id="4989">
        <label>sdm/core/state/jhistory_tree.hpp</label>
        <link refid="jhistory__tree_8hpp"/>
        <childnode refid="4985" relation="include">
        </childnode>
        <childnode refid="4954" relation="include">
        </childnode>
        <childnode refid="4990" relation="include">
        </childnode>
      </node>
      <node id="5035">
        <label>sdm/world/occupancy_mdp.hpp</label>
        <link refid="occupancy__mdp_8hpp"/>
        <childnode refid="4945" relation="include">
        </childnode>
        <childnode refid="4954" relation="include">
        </childnode>
        <childnode refid="4953" relation="include">
        </childnode>
        <childnode refid="4963" relation="include">
        </childnode>
        <childnode refid="4993" relation="include">
        </childnode>
        <childnode refid="4952" relation="include">
        </childnode>
        <childnode refid="4951" relation="include">
        </childnode>
        <childnode refid="5028" relation="include">
        </childnode>
        <childnode refid="5025" relation="include">
        </childnode>
        <childnode refid="5022" relation="include">
        </childnode>
        <childnode refid="4997" relation="include">
        </childnode>
        <childnode refid="5036" relation="include">
        </childnode>
      </node>
      <node id="4952">
        <label>sdm/world/solvable_by_hsvi.hpp</label>
        <link refid="solvable__by__hsvi_8hpp"/>
        <childnode refid="4945" relation="include">
        </childnode>
        <childnode refid="4953" relation="include">
        </childnode>
        <childnode refid="4961" relation="include">
        </childnode>
        <childnode refid="4982" relation="include">
        </childnode>
        <childnode refid="4975" relation="include">
        </childnode>
        <childnode refid="4998" relation="include">
        </childnode>
      </node>
      <node id="4985">
        <label>sdm/core/state/history_tree.hpp</label>
        <link refid="history__tree_8hpp"/>
        <childnode refid="4986" relation="include">
        </childnode>
        <childnode refid="4988" relation="include">
        </childnode>
      </node>
      <node id="4965">
        <label>boost/numeric/ublas/vector.hpp</label>
      </node>
      <node id="4944">
        <label>random</label>
      </node>
      <node id="5010">
        <label>sdm/world/base/decision_process_base.hpp</label>
        <link refid="decision__process__base_8hpp"/>
        <childnode refid="4945" relation="include">
        </childnode>
        <childnode refid="5011" relation="include">
        </childnode>
        <childnode refid="5013" relation="include">
        </childnode>
      </node>
      <node id="5028">
        <label>sdm/world/discrete_pomdp.hpp</label>
        <link refid="discrete__pomdp_8hpp"/>
        <childnode refid="4945" relation="include">
        </childnode>
        <childnode refid="5029" relation="include">
        </childnode>
        <childnode refid="5025" relation="include">
        </childnode>
        <childnode refid="4953" relation="include">
        </childnode>
        <childnode refid="5014" relation="include">
        </childnode>
        <childnode refid="5023" relation="include">
        </childnode>
        <childnode refid="4963" relation="include">
        </childnode>
      </node>
      <node id="5037">
        <label>sdm/world/serialized_mdp.hpp</label>
        <link refid="serialized__mdp_8hpp"/>
        <childnode refid="4945" relation="include">
        </childnode>
        <childnode refid="4952" relation="include">
        </childnode>
        <childnode refid="4974" relation="include">
        </childnode>
        <childnode refid="5025" relation="include">
        </childnode>
        <childnode refid="4953" relation="include">
        </childnode>
        <childnode refid="4973" relation="include">
        </childnode>
        <childnode refid="5022" relation="include">
        </childnode>
        <childnode refid="4997" relation="include">
        </childnode>
        <childnode refid="5038" relation="include">
        </childnode>
      </node>
      <node id="4966">
        <label>boost/numeric/ublas/io.hpp</label>
      </node>
      <node id="5001">
        <label>tuple</label>
      </node>
      <node id="4972">
        <label>sdm/utils/linear_algebra/mapped_vector.tpp</label>
      </node>
      <node id="5012">
        <label>sdm/world/base/stochastic_process_base.tpp</label>
      </node>
      <node id="4953">
        <label>sdm/core/space/discrete_space.hpp</label>
        <link refid="discrete__space_8hpp"/>
        <childnode refid="4936" relation="include">
        </childnode>
        <childnode refid="4948" relation="include">
        </childnode>
        <childnode refid="4945" relation="include">
        </childnode>
        <childnode refid="4954" relation="include">
        </childnode>
        <childnode refid="4959" relation="include">
        </childnode>
        <childnode refid="4960" relation="include">
        </childnode>
      </node>
      <node id="5007">
        <label>sdm/core/space/multi_space.tpp</label>
      </node>
      <node id="5009">
        <label>sdm/world/gym_interface.tpp</label>
      </node>
      <node id="4936">
        <label>vector</label>
      </node>
      <node id="5000">
        <label>sdm/world/decision_process.hpp</label>
        <link refid="decision__process_8hpp"/>
        <childnode refid="4936" relation="include">
        </childnode>
        <childnode refid="5001" relation="include">
        </childnode>
        <childnode refid="4945" relation="include">
        </childnode>
        <childnode refid="4998" relation="include">
        </childnode>
        <childnode refid="5002" relation="include">
        </childnode>
        <childnode refid="5010" relation="include">
        </childnode>
        <childnode refid="4953" relation="include">
        </childnode>
        <childnode refid="5006" relation="include">
        </childnode>
        <childnode refid="5005" relation="include">
        </childnode>
        <childnode refid="5014" relation="include">
        </childnode>
        <childnode refid="5023" relation="include">
        </childnode>
        <childnode refid="5024" relation="include">
        </childnode>
      </node>
      <node id="5015">
        <label>sdm/utils/linear_algebra/matrix.hpp</label>
        <link refid="matrix_8hpp"/>
        <childnode refid="5016" relation="include">
        </childnode>
        <childnode refid="5017" relation="include">
        </childnode>
        <childnode refid="5018" relation="include">
        </childnode>
        <childnode refid="4965" relation="include">
        </childnode>
        <childnode refid="4966" relation="include">
        </childnode>
        <childnode refid="5019" relation="include">
        </childnode>
        <childnode refid="5020" relation="include">
        </childnode>
        <childnode refid="5021" relation="include">
        </childnode>
        <childnode refid="4971" relation="include">
        </childnode>
        <childnode refid="5022" relation="include">
        </childnode>
      </node>
      <node id="4964">
        <label>sdm/utils/linear_algebra/sdms_vector.hpp</label>
        <link refid="sdms__vector_8hpp"/>
        <childnode refid="4965" relation="include">
        </childnode>
        <childnode refid="4966" relation="include">
        </childnode>
        <childnode refid="4967" relation="include">
        </childnode>
        <childnode refid="4968" relation="include">
        </childnode>
        <childnode refid="4969" relation="include">
        </childnode>
      </node>
      <node id="4974">
        <label>sdm/utils/struct/pair.hpp</label>
        <link refid="pair_8hpp"/>
        <childnode refid="4939" relation="include">
        </childnode>
        <childnode refid="4958" relation="include">
        </childnode>
      </node>
      <node id="5017">
        <label>boost/numeric/ublas/matrix_proxy.hpp</label>
      </node>
      <node id="4963">
        <label>sdm/core/state/state.hpp</label>
        <link refid="state_8hpp"/>
        <childnode refid="4945" relation="include">
        </childnode>
        <childnode refid="4964" relation="include">
        </childnode>
        <childnode refid="4970" relation="include">
        </childnode>
        <childnode refid="4973" relation="include">
        </childnode>
      </node>
      <node id="4959">
        <label>sdm/core/space/space.hpp</label>
        <link refid="space_8hpp"/>
        <childnode refid="4936" relation="include">
        </childnode>
        <childnode refid="4948" relation="include">
        </childnode>
        <childnode refid="4945" relation="include">
        </childnode>
      </node>
      <node id="4940">
        <label>sstream</label>
      </node>
      <node id="5014">
        <label>sdm/core/state_dynamics.hpp</label>
        <link refid="state__dynamics_8hpp"/>
        <childnode refid="4942" relation="include">
        </childnode>
        <childnode refid="4945" relation="include">
        </childnode>
        <childnode refid="5015" relation="include">
        </childnode>
      </node>
      <node id="4954">
        <label>sdm/core/joint.hpp</label>
        <link refid="joint_8hpp"/>
        <childnode refid="4936" relation="include">
        </childnode>
        <childnode refid="4945" relation="include">
        </childnode>
        <childnode refid="4955" relation="include">
        </childnode>
        <childnode refid="4957" relation="include">
        </childnode>
        <childnode refid="4958" relation="include">
        </childnode>
      </node>
      <node id="4987">
        <label>sdm/utils/struct/tree.tpp</label>
      </node>
      <node id="5034">
        <label>sdm/world/discrete_decpomdp.hpp</label>
        <link refid="discrete__decpomdp_8hpp"/>
        <childnode refid="4945" relation="include">
        </childnode>
        <childnode refid="5029" relation="include">
        </childnode>
        <childnode refid="5035" relation="include">
        </childnode>
        <childnode refid="5025" relation="include">
        </childnode>
        <childnode refid="4993" relation="include">
        </childnode>
        <childnode refid="4984" relation="include">
        </childnode>
        <childnode refid="4953" relation="include">
        </childnode>
        <childnode refid="5014" relation="include">
        </childnode>
        <childnode refid="5023" relation="include">
        </childnode>
        <childnode refid="4997" relation="include">
        </childnode>
      </node>
      <node id="4996">
        <label>sdm/core/state/serialized_occupancy_state.tpp</label>
      </node>
      <node id="4978">
        <label>sdm/utils/logging/logger.hpp</label>
        <link refid="logger_8hpp"/>
        <childnode refid="4939" relation="include">
        </childnode>
        <childnode refid="4979" relation="include">
        </childnode>
        <childnode refid="4980" relation="include">
        </childnode>
        <childnode refid="4955" relation="include">
        </childnode>
      </node>
      <node id="5023">
        <label>sdm/core/reward.hpp</label>
        <link refid="reward_8hpp"/>
        <childnode refid="4936" relation="include">
        </childnode>
        <childnode refid="4945" relation="include">
        </childnode>
        <childnode refid="5022" relation="include">
        </childnode>
      </node>
      <node id="4981">
        <label>sdm/algorithms/hsvi.tpp</label>
      </node>
      <node id="4943">
        <label>math.h</label>
      </node>
      <node id="5018">
        <label>boost/numeric/ublas/matrix.hpp</label>
      </node>
      <node id="4949">
        <label>sdm/common.hpp</label>
        <link refid="common_8hpp"/>
        <childnode refid="4944" relation="include">
        </childnode>
        <childnode refid="4945" relation="include">
        </childnode>
      </node>
      <node id="4956">
        <label>cstdlib</label>
      </node>
      <node id="4939">
        <label>iostream</label>
      </node>
      <node id="5016">
        <label>boost/numeric/ublas/matrix_sparse.hpp</label>
      </node>
      <node id="5011">
        <label>sdm/world/base/stochastic_process_base.hpp</label>
        <link refid="stochastic__process__base_8hpp"/>
        <childnode refid="4945" relation="include">
        </childnode>
        <childnode refid="4953" relation="include">
        </childnode>
        <childnode refid="5012" relation="include">
        </childnode>
      </node>
      <node id="4946">
        <label>cstddef</label>
      </node>
      <node id="4995">
        <label>sdm/core/state/serialized_occupancy_state.hpp</label>
        <link refid="serialized__occupancy__state_8hpp"/>
        <childnode refid="4935" relation="include">
        </childnode>
        <childnode refid="4945" relation="include">
        </childnode>
        <childnode refid="4974" relation="include">
        </childnode>
        <childnode refid="4963" relation="include">
        </childnode>
        <childnode refid="4973" relation="include">
        </childnode>
        <childnode refid="4996" relation="include">
        </childnode>
      </node>
      <node id="4955">
        <label>sdm/tools.hpp</label>
        <link refid="tools_8hpp"/>
        <childnode refid="4935" relation="include">
        </childnode>
        <childnode refid="4956" relation="include">
        </childnode>
        <childnode refid="4938" relation="include">
        </childnode>
        <childnode refid="4940" relation="include">
        </childnode>
        <childnode refid="4939" relation="include">
        </childnode>
      </node>
      <node id="4947">
        <label>unordered_map</label>
      </node>
      <node id="5030">
        <label>sdm/world/base/po_process_base.hpp</label>
        <link refid="po__process__base_8hpp"/>
        <childnode refid="5011" relation="include">
        </childnode>
        <childnode refid="5031" relation="include">
        </childnode>
      </node>
      <node id="5002">
        <label>sdm/world/gym_interface.hpp</label>
        <link refid="gym__interface_8hpp"/>
        <childnode refid="4936" relation="include">
        </childnode>
        <childnode refid="5001" relation="include">
        </childnode>
        <childnode refid="4945" relation="include">
        </childnode>
        <childnode refid="5003" relation="include">
        </childnode>
        <childnode refid="4959" relation="include">
        </childnode>
        <childnode refid="5005" relation="include">
        </childnode>
        <childnode refid="5009" relation="include">
        </childnode>
      </node>
      <node id="5021">
        <label>eigen3/Eigen/Core</label>
      </node>
      <node id="5013">
        <label>sdm/world/base/decision_process_base.tpp</label>
      </node>
      <node id="4968">
        <label>sdm/utils/linear_algebra/vector_impl.hpp</label>
        <link refid="vector__impl_8hpp"/>
        <childnode refid="4956" relation="include">
        </childnode>
        <childnode refid="4940" relation="include">
        </childnode>
      </node>
      <node id="5040">
        <label>sdm/world/serialized_occupancy_mdp.tpp</label>
      </node>
      <node id="5027">
        <label>sdm/world/belief_mdp.tpp</label>
      </node>
      <node id="5031">
        <label>sdm/world/base/po_process_base.tpp</label>
      </node>
      <node id="5003">
        <label>sdm/public/world.hpp</label>
        <link refid="world_8hpp"/>
        <childnode refid="4945" relation="include">
        </childnode>
        <childnode refid="5004" relation="include">
        </childnode>
      </node>
      <node id="5024">
        <label>sdm/world/decision_process.tpp</label>
      </node>
      <node id="4951">
        <label>sdm/world/discrete_mdp.hpp</label>
        <link refid="discrete__mdp_8hpp"/>
        <childnode refid="4945" relation="include">
        </childnode>
        <childnode refid="4952" relation="include">
        </childnode>
        <childnode refid="5000" relation="include">
        </childnode>
        <childnode refid="5025" relation="include">
        </childnode>
        <childnode refid="4953" relation="include">
        </childnode>
        <childnode refid="5014" relation="include">
        </childnode>
        <childnode refid="5023" relation="include">
        </childnode>
      </node>
      <node id="4973">
        <label>sdm/core/state/serialized_state.hpp</label>
        <link refid="serialized__state_8hpp"/>
        <childnode refid="4945" relation="include">
        </childnode>
        <childnode refid="4958" relation="include">
        </childnode>
        <childnode refid="4974" relation="include">
        </childnode>
      </node>
      <node id="4984">
        <label>sdm/core/state/history.hpp</label>
        <link refid="history_8hpp"/>
        <childnode refid="4936" relation="include">
        </childnode>
        <childnode refid="4963" relation="include">
        </childnode>
        <childnode refid="4985" relation="include">
        </childnode>
        <childnode refid="4989" relation="include">
        </childnode>
      </node>
      <node id="4992">
        <label>sdm/core/state/belief_state.tpp</label>
      </node>
      <node id="5004">
        <label>sdm/public/feedback.hpp</label>
        <link refid="feedback_8hpp"/>
        <childnode refid="4945" relation="include">
        </childnode>
        <childnode refid="5001" relation="include">
        </childnode>
      </node>
      <node id="4976">
        <label>memory</label>
      </node>
      <node id="5019">
        <label>eigen3/Eigen/Sparse</label>
      </node>
      <node id="4986">
        <label>sdm/utils/struct/tree.hpp</label>
        <link refid="tree_8hpp"/>
        <childnode refid="4942" relation="include">
        </childnode>
        <childnode refid="4947" relation="include">
        </childnode>
        <childnode refid="4976" relation="include">
        </childnode>
        <childnode refid="4939" relation="include">
        </childnode>
        <childnode refid="4945" relation="include">
        </childnode>
        <childnode refid="4955" relation="include">
        </childnode>
        <childnode refid="4987" relation="include">
        </childnode>
      </node>
      <node id="4950">
        <label>sdm/worlds.hpp</label>
        <link refid="worlds_8hpp"/>
        <childnode refid="4951" relation="include">
        </childnode>
        <childnode refid="5026" relation="include">
        </childnode>
        <childnode refid="5028" relation="include">
        </childnode>
        <childnode refid="5034" relation="include">
        </childnode>
        <childnode refid="4934" relation="include">
        </childnode>
        <childnode refid="4952" relation="include">
        </childnode>
        <childnode refid="5025" relation="include">
        </childnode>
        <childnode refid="5035" relation="include">
        </childnode>
        <childnode refid="5037" relation="include">
        </childnode>
        <childnode refid="5039" relation="include">
        </childnode>
      </node>
      <node id="4945">
        <label>sdm/types.hpp</label>
        <link refid="types_8hpp"/>
        <childnode refid="4946" relation="include">
        </childnode>
        <childnode refid="4939" relation="include">
        </childnode>
        <childnode refid="4947" relation="include">
        </childnode>
        <childnode refid="4948" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacesdm">sdm</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ndpomdp_8hpp" kindref="compound">sdm/world/ndpomdp.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesdm" kindref="compound">sdm</ref></highlight></codeline>
<codeline lineno="4"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsdm_1_1NDPOMDP_1aae7d6c11c12d1bc41ff28829b968125f" kindref="member">NDPOMDP::NDPOMDP</ref>(std::string<sp/>filename)</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsdm_1_1NDPOMDP_1a2e593767967afa896204ce499ac4b02a" kindref="member">input_file</ref>.open(filename.c_str());</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsdm_1_1NDPOMDP_1a2e593767967afa896204ce499ac4b02a" kindref="member">input_file</ref>.is_open())</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a0fe146521b5a7a0de2d829d8d2f235c4" kindref="member">getData</ref>(filename);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a1b4d2d6a013ac099ad01850fbb671821" kindref="member">setupDynamicsGenerator</ref>();</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">&quot;<sp/>Impossible<sp/>to<sp/>find<sp/>instance<sp/>file<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsdm_1_1NDPOMDP_1a1b4d2d6a013ac099ad01850fbb671821" kindref="member">NDPOMDP::setupDynamicsGenerator</ref>()</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesdm_1ac1827d766698d83a834ceff9761118d3" kindref="member">agent</ref><sp/>i;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesdm_1ae21094a69e920050f2aa1c7b5c0d2677" kindref="member">action</ref><sp/>a;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesdm_1a13e6c065a1b4b44700414568be5b9586" kindref="member">state</ref><sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesdm_1af59f791f3163aa7cf0dee3a7f7c408a4" kindref="member">observation</ref><sp/>zi;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1afbc366261926432eb50d49a5a338ba39" kindref="member">getNumStates</ref>();<sp/>++x)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>v;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1afbc366261926432eb50d49a5a338ba39" kindref="member">getNumStates</ref>();<sp/>++y)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.push_back(this-&gt;getP(x,<sp/>0,<sp/>y));</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a0420e534bcc055a23c0c7bbae303a0e2" kindref="member">dynamics_generator</ref>.emplace(<ref refid="namespacesdm_1_1common_1ae2ac064711db207de72c40f271859613" kindref="member">common::getState</ref>(x),<sp/>std::discrete_distribution&lt;number&gt;(v.begin(),<sp/>v.end()));</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ab7e1c1679b260a1e1198092fa5806cf0" kindref="member">getNumAgents</ref>();<sp/>++i)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(a<sp/>=<sp/>0;<sp/>a<sp/>&lt;<sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a42572b7a91388626777ef89636fd1653" kindref="member">getNumActions</ref>(i);<sp/>++a)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>w;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(zi<sp/>=<sp/>0;<sp/>zi<sp/>&lt;<sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1abbeef57c63f1c743685bd2d77c4afdd5" kindref="member">getNumObservations</ref>(i);<sp/>++zi)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w.push_back(this-&gt;getObservation(i,<sp/>a,<sp/>x,<sp/>zi));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a0420e534bcc055a23c0c7bbae303a0e2" kindref="member">dynamics_generator</ref>.emplace(<ref refid="namespacesdm_1_1common_1a8010cbfc9404db8ff13da5d3e5c9eace" kindref="member">common::getAgentActionState</ref>(i,<sp/>a,<sp/>x),<sp/>std::discrete_distribution&lt;number&gt;(w.begin(),<sp/>w.end()));</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>v;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1afbc366261926432eb50d49a5a338ba39" kindref="member">getNumStates</ref>();<sp/>++x)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.push_back(this-&gt;getInitialBelief(x));</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ab4a598b2e1253b93fc581a6b51f16593" kindref="member">start_generator</ref><sp/>=<sp/>std::discrete_distribution&lt;number&gt;(v.begin(),<sp/>v.end());</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>std::tuple&lt;std::vector&lt;double&gt;,<sp/><ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref>,<sp/>number&gt;<sp/><ref refid="classsdm_1_1NDPOMDP_1a3a7761ab81688074245bc59309ab8a4d" kindref="member">NDPOMDP::getDynamicsGenerator</ref>(number<sp/><ref refid="namespacesdm_1a13e6c065a1b4b44700414568be5b9586" kindref="member">state</ref>,<sp/>number<sp/>jaction)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number<sp/>y<sp/>=<sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a0420e534bcc055a23c0c7bbae303a0e2" kindref="member">dynamics_generator</ref>[<ref refid="namespacesdm_1_1common_1ae2ac064711db207de72c40f271859613" kindref="member">common::getState</ref>(state)](<ref refid="namespacesdm_1_1common_1a56defebfdc5f79465ec3192031691665" kindref="member">common::global_urng</ref>());</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;observation&gt;<sp/>jobservation;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;number&gt;<sp/>vect_jaction<sp/>=<sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a69f2182f1154e5955b7f17cac6c6c6ce" kindref="member">getActionSpace</ref>().<ref refid="classsdm_1_1MultiDiscreteSpace_1a2c207880a613066a07c9101b797e79e6" kindref="member">single2joint</ref>(jaction);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ag<sp/>=<sp/>0;<sp/>ag<sp/>&lt;<sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ab7e1c1679b260a1e1198092fa5806cf0" kindref="member">getNumAgents</ref>();<sp/>ag++)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number<sp/>iaction<sp/>=<sp/>vect_jaction[ag];</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jobservation.push_back(this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a0420e534bcc055a23c0c7bbae303a0e2" kindref="member">dynamics_generator</ref>[<ref refid="namespacesdm_1_1common_1a8010cbfc9404db8ff13da5d3e5c9eace" kindref="member">common::getAgentActionState</ref>(ag,<sp/>iaction,<sp/>y)](<ref refid="namespacesdm_1_1common_1a56defebfdc5f79465ec3192031691665" kindref="member">common::global_urng</ref>()));</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tot_rew<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nodes_pair<sp/>:<sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a5f789e2e605b92cdf570cd5cb48d529c" kindref="member">getUniqueValidNeighbors</ref>())</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number<sp/>first_ag<sp/>=<sp/>nodes_pair.first;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number<sp/>second_ag<sp/>=<sp/>nodes_pair.second;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tot_rew<sp/>+=<sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a61b0273ee5d8273ccd85d41c88d168a4" kindref="member">getReward</ref>(state,<sp/>first_ag,<sp/>second_ag,<sp/>vect_jaction[first_ag],<sp/>vect_jaction[second_ag]);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>v_rew(this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ab7e1c1679b260a1e1198092fa5806cf0" kindref="member">getNumAgents</ref>(),<sp/>tot_rew);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_tuple(v_rew,<sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a3c04673f224f4b2ca7ff9cf3c600e44f" kindref="member">obs_space_</ref>.<ref refid="classsdm_1_1MultiDiscreteSpace_1a57809d15777a142984b0e8c5bc9e6d87" kindref="member">joint2single</ref>(jobservation),<sp/>y);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>std::tuple&lt;state,<sp/>observation,<sp/>observation&gt;<sp/><ref refid="classsdm_1_1NDPOMDP_1a3a7761ab81688074245bc59309ab8a4d" kindref="member">NDPOMDP::getDynamicsGenerator</ref>(state<sp/>x,<sp/><ref refid="namespacesdm_1ac1827d766698d83a834ceff9761118d3" kindref="member">agent</ref><sp/>i,<sp/><ref refid="namespacesdm_1ae21094a69e920050f2aa1c7b5c0d2677" kindref="member">action</ref><sp/>ui,<sp/><ref refid="namespacesdm_1ac1827d766698d83a834ceff9761118d3" kindref="member">agent</ref><sp/>j,<sp/><ref refid="namespacesdm_1ae21094a69e920050f2aa1c7b5c0d2677" kindref="member">action</ref><sp/>uj)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>y<sp/>=<sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a0420e534bcc055a23c0c7bbae303a0e2" kindref="member">dynamics_generator</ref>[<ref refid="namespacesdm_1_1common_1ae2ac064711db207de72c40f271859613" kindref="member">common::getState</ref>(x)](<ref refid="namespacesdm_1_1common_1a56defebfdc5f79465ec3192031691665" kindref="member">common::global_urng</ref>());</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesdm_1af59f791f3163aa7cf0dee3a7f7c408a4" kindref="member">observation</ref><sp/>zi<sp/>=<sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a0420e534bcc055a23c0c7bbae303a0e2" kindref="member">dynamics_generator</ref>[<ref refid="namespacesdm_1_1common_1a8010cbfc9404db8ff13da5d3e5c9eace" kindref="member">common::getAgentActionState</ref>(i,<sp/>ui,<sp/>y)](<ref refid="namespacesdm_1_1common_1a56defebfdc5f79465ec3192031691665" kindref="member">common::global_urng</ref>());</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesdm_1af59f791f3163aa7cf0dee3a7f7c408a4" kindref="member">observation</ref><sp/>zj<sp/>=<sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a0420e534bcc055a23c0c7bbae303a0e2" kindref="member">dynamics_generator</ref>[<ref refid="namespacesdm_1_1common_1a8010cbfc9404db8ff13da5d3e5c9eace" kindref="member">common::getAgentActionState</ref>(j,<sp/>uj,<sp/>y)](<ref refid="namespacesdm_1_1common_1a56defebfdc5f79465ec3192031691665" kindref="member">common::global_urng</ref>());</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_tuple(y,<sp/>zi,<sp/>zj);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>state<sp/><ref refid="classsdm_1_1NDPOMDP_1a2d704e49a2cf0210b364d8be7c62edce" kindref="member">NDPOMDP::getPGenerator</ref>(state<sp/>x)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a0420e534bcc055a23c0c7bbae303a0e2" kindref="member">dynamics_generator</ref>[<ref refid="namespacesdm_1_1common_1ae2ac064711db207de72c40f271859613" kindref="member">common::getState</ref>(x)](<ref refid="namespacesdm_1_1common_1a56defebfdc5f79465ec3192031691665" kindref="member">common::global_urng</ref>());</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacesdm_1af59f791f3163aa7cf0dee3a7f7c408a4" kindref="member">observation</ref><sp/><ref refid="classsdm_1_1NDPOMDP_1ab3e46a48cf4a31d6ec3ea0df776044c0" kindref="member">NDPOMDP::getQGenerator</ref>(<ref refid="namespacesdm_1ac1827d766698d83a834ceff9761118d3" kindref="member">agent</ref><sp/>i,<sp/><ref refid="namespacesdm_1ae21094a69e920050f2aa1c7b5c0d2677" kindref="member">action</ref><sp/>u,<sp/>state<sp/>y)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a0420e534bcc055a23c0c7bbae303a0e2" kindref="member">dynamics_generator</ref>[<ref refid="namespacesdm_1_1common_1a8010cbfc9404db8ff13da5d3e5c9eace" kindref="member">common::getAgentActionState</ref>(i,<sp/>u,<sp/>y)](<ref refid="namespacesdm_1_1common_1a56defebfdc5f79465ec3192031691665" kindref="member">common::global_urng</ref>());</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>state<sp/><ref refid="classsdm_1_1NDPOMDP_1ade5c240015eb62238ca6a32ecfc93e60" kindref="member">NDPOMDP::init</ref>()</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a3f37425b8f3c52141a4a3491f382a0b3" kindref="member">internal_state_</ref><sp/>=<sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ab4a598b2e1253b93fc581a6b51f16593" kindref="member">start_generator</ref>(<ref refid="namespacesdm_1_1common_1a56defebfdc5f79465ec3192031691665" kindref="member">sdm::common::global_urng</ref>());</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a3f37425b8f3c52141a4a3491f382a0b3" kindref="member">internal_state_</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsdm_1_1NDPOMDP_1a4cf32892141705002d7f0bc96bb6adda" kindref="member">NDPOMDP::setDiscount</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classsdm_1_1NDPOMDP_1ad83013d4c22a569f2ec9c646e9602921" kindref="member">discount</ref>)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;discount<sp/>=<sp/><ref refid="classsdm_1_1NDPOMDP_1ad83013d4c22a569f2ec9c646e9602921" kindref="member">discount</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classsdm_1_1NDPOMDP_1a72a7759b3504ae694baf889edfcf1997" kindref="member">NDPOMDP::getDiscount</ref>()</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ad83013d4c22a569f2ec9c646e9602921" kindref="member">discount</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DiscreteSpace&lt;number&gt;<sp/>&amp;<ref refid="classsdm_1_1NDPOMDP_1a7362de8260d61bac343aa005cf752589" kindref="member">NDPOMDP::getStateSpace</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="109"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a0a518d72a634e77a6415eb6ffb012a5f" kindref="member">state_space_</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>number<sp/><ref refid="classsdm_1_1NDPOMDP_1afbc366261926432eb50d49a5a338ba39" kindref="member">NDPOMDP::getNumStates</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="114"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a0a518d72a634e77a6415eb6ffb012a5f" kindref="member">state_space_</ref>.<ref refid="classsdm_1_1DiscreteSpace_1a60ff53febcd4e6d610df44c2ac0aac48" kindref="member">getNumItems</ref>();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiDiscreteSpace&lt;number&gt;<sp/>&amp;<ref refid="classsdm_1_1NDPOMDP_1a89099c20cdfa521caf93138faf98a315" kindref="member">NDPOMDP::getObsSpace</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="119"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a3c04673f224f4b2ca7ff9cf3c600e44f" kindref="member">obs_space_</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>number<sp/><ref refid="classsdm_1_1NDPOMDP_1abbeef57c63f1c743685bd2d77c4afdd5" kindref="member">NDPOMDP::getNumObservations</ref>(number<sp/><ref refid="namespacesdm_1ac1827d766698d83a834ceff9761118d3" kindref="member">agent</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="124"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a89099c20cdfa521caf93138faf98a315" kindref="member">getObsSpace</ref>().<ref refid="classsdm_1_1MultiSpace_1a2e1629e83c7fe9cd636038032b83869e" kindref="member">getSpace</ref>(agent)-&gt;getNumItems();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>number<sp/><ref refid="classsdm_1_1NDPOMDP_1a50ea7f7d9e3a1c6a35d319d10a1ab9a7" kindref="member">NDPOMDP::getNumJObservations</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="129"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a89099c20cdfa521caf93138faf98a315" kindref="member">getObsSpace</ref>().<ref refid="classsdm_1_1MultiDiscreteSpace_1a185460a36a5cc657b7114b4a893c64f2" kindref="member">getNumJointItems</ref>();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>number<sp/><ref refid="classsdm_1_1NDPOMDP_1ab7e1c1679b260a1e1198092fa5806cf0" kindref="member">NDPOMDP::getNumAgents</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="134"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1aacb28d099336ef917286642bbb7c4ced" kindref="member">agent_space_</ref>.<ref refid="classsdm_1_1DiscreteSpace_1a60ff53febcd4e6d610df44c2ac0aac48" kindref="member">getNumItems</ref>();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiDiscreteSpace&lt;number&gt;<sp/>&amp;<ref refid="classsdm_1_1NDPOMDP_1a69f2182f1154e5955b7f17cac6c6c6ce" kindref="member">NDPOMDP::getActionSpace</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="139"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a6afeb4f261084478737ddf2fc989cb38" kindref="member">act_space_</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>number<sp/><ref refid="classsdm_1_1NDPOMDP_1a662145d0de58e190916e4ad473631aa8" kindref="member">NDPOMDP::getNumJActions</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="144"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a6afeb4f261084478737ddf2fc989cb38" kindref="member">act_space_</ref>.<ref refid="classsdm_1_1MultiDiscreteSpace_1a185460a36a5cc657b7114b4a893c64f2" kindref="member">getNumJointItems</ref>();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>number<sp/><ref refid="classsdm_1_1NDPOMDP_1a42572b7a91388626777ef89636fd1653" kindref="member">NDPOMDP::getNumActions</ref>(number<sp/>agent)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="149"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a69f2182f1154e5955b7f17cac6c6c6ce" kindref="member">getActionSpace</ref>().<ref refid="classsdm_1_1MultiSpace_1a2e1629e83c7fe9cd636038032b83869e" kindref="member">getSpace</ref>(agent)-&gt;getNumItems();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;number&gt;<sp/><ref refid="classsdm_1_1NDPOMDP_1a42572b7a91388626777ef89636fd1653" kindref="member">NDPOMDP::getNumActions</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="154"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;number&gt;<sp/>v;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(number<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a69f2182f1154e5955b7f17cac6c6c6ce" kindref="member">getActionSpace</ref>().<ref refid="classsdm_1_1MultiSpace_1a844451403e6a4ad8231b2d0366ffc02f" kindref="member">getNumSpaces</ref>();<sp/>i++)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.push_back(this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a42572b7a91388626777ef89636fd1653" kindref="member">getNumActions</ref>(i));</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsdm_1_1NDPOMDP_1ae72c42096d1a1d8008e91758c84c5b20" kindref="member">NDPOMDP::execute</ref>(<ref refid="namespacesdm_1ae21094a69e920050f2aa1c7b5c0d2677" kindref="member">action</ref>,<sp/>feedback<sp/>*)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsdm_1_1NDPOMDP_1a0fe146521b5a7a0de2d829d8d2f235c4" kindref="member">NDPOMDP::getData</ref>(std::string)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>lineStream;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>line,<sp/>contenu,<sp/>useless,<sp/>useless2;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>intermediate,<sp/>intermediate2;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>found;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(std::getline(<ref refid="classsdm_1_1NDPOMDP_1a2e593767967afa896204ce499ac4b02a" kindref="member">input_file</ref>,<sp/>line))</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line.find(</highlight><highlight class="stringliteral">&quot;TimeHorizon&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>line.find(</highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a8332a187f1cbcd8a95c4519d964a5526" kindref="member">timeHorizon</ref><sp/>=<sp/>std::stoi(line.substr(index<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line.find(</highlight><highlight class="stringliteral">&quot;NumOfAgents&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>line.find(</highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;number&gt;<sp/>vv_tmp(std::stoi(line.substr(index<sp/>+<sp/>1)));</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::iota(vv_tmp.begin(),<sp/>vv_tmp.end(),<sp/>0);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1aacb28d099336ef917286642bbb7c4ced" kindref="member">agent_space_</ref><sp/>=<sp/>DiscreteSpace&lt;number&gt;(vv_tmp);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Agent<sp/>Space<sp/>parsed<sp/>:<sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>this-&gt;agent_space_<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line.find(</highlight><highlight class="stringliteral">&quot;NumOfActions&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intermediate.clear();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;DiscreteSpace&lt;number&gt;&gt;<sp/>v_act_space;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>line.find(</highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contenu<sp/>=<sp/>line.substr(index<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>check(contenu);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(std::getline(check,<sp/>useless,<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intermediate.push_back(useless);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesdm_1ae21094a69e920050f2aa1c7b5c0d2677" kindref="member">action</ref><sp/>max<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(agent<sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ab7e1c1679b260a1e1198092fa5806cf0" kindref="member">getNumAgents</ref>();<sp/>k++)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number<sp/>n_a<sp/>=<sp/>std::stoi(intermediate[k]);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;number&gt;<sp/>vv_tmp(n_a);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::iota(vv_tmp.begin(),<sp/>vv_tmp.end(),<sp/>0);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_act_space.push_back(DiscreteSpace&lt;number&gt;(vv_tmp));</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_a<sp/>&gt;<sp/>max)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>n_a;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a1d433edb54c486de2dda9566fcf01e24" kindref="member">maxActions</ref><sp/>=<sp/>max;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a6afeb4f261084478737ddf2fc989cb38" kindref="member">act_space_</ref><sp/>=<sp/>MultiDiscreteSpace&lt;number&gt;(v_act_space);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Action<sp/>Space<sp/>parsed<sp/>:<sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a6afeb4f261084478737ddf2fc989cb38" kindref="member">act_space_</ref><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line.find(</highlight><highlight class="stringliteral">&quot;NumOfNodes&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intermediate.clear();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ad5fbc9a7bc9e2463ab76d6b29466424c" kindref="member">nodes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>agent[this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ab7e1c1679b260a1e1198092fa5806cf0" kindref="member">getNumAgents</ref>()];</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>line.find(</highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contenu<sp/>=<sp/>line.substr(index<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>check(contenu);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(std::getline(check,<sp/>useless,<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intermediate.push_back(useless);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(agent<sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ab7e1c1679b260a1e1198092fa5806cf0" kindref="member">getNumAgents</ref>();<sp/>k++)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ad5fbc9a7bc9e2463ab76d6b29466424c" kindref="member">nodes</ref>[k]<sp/>=<sp/>std::stoi(intermediate[k]);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line.find(</highlight><highlight class="stringliteral">&quot;NumOfStates&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>line.find(</highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;number&gt;<sp/>vv_tmp(std::stoi(line.substr(index<sp/>+<sp/>1)));</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::iota(vv_tmp.begin(),<sp/>vv_tmp.end(),<sp/>0);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a0a518d72a634e77a6415eb6ffb012a5f" kindref="member">state_space_</ref><sp/>=<sp/>DiscreteSpace&lt;number&gt;(vv_tmp);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;State<sp/>Space<sp/>parsed<sp/>:<sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>this-&gt;state_space_<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line.find(</highlight><highlight class="stringliteral">&quot;NumOfObservations&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>line.find(</highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number<sp/>observations<sp/>=<sp/>std::stoi(line.substr(index<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;number&gt;<sp/>vv_tmp(observations);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::iota(vv_tmp.begin(),<sp/>vv_tmp.end(),<sp/>0);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;number&gt;&gt;<sp/>obs_v(this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ab7e1c1679b260a1e1198092fa5806cf0" kindref="member">getNumAgents</ref>(),<sp/>vv_tmp);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a3c04673f224f4b2ca7ff9cf3c600e44f" kindref="member">obs_space_</ref><sp/>=<sp/>MultiDiscreteSpace&lt;number&gt;(obs_v);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Observation<sp/>Space<sp/>parsed<sp/>:<sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a3c04673f224f4b2ca7ff9cf3c600e44f" kindref="member">obs_space_</ref><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line.find(</highlight><highlight class="stringliteral">&quot;Network&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intermediate.clear();</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent<sp/>counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ab4580facff3d0c84ca534bd1c9637d52" kindref="member">n</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Node[this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ab7e1c1679b260a1e1198092fa5806cf0" kindref="member">getNumAgents</ref>()];</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unordered_set&lt;agent&gt;<sp/>neighbors;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(counter<sp/>&lt;<sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ab7e1c1679b260a1e1198092fa5806cf0" kindref="member">getNumAgents</ref>())</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intermediate.clear();</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::getline(<ref refid="classsdm_1_1NDPOMDP_1a2e593767967afa896204ce499ac4b02a" kindref="member">input_file</ref>,<sp/>line);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>check(line);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(std::getline(check,<sp/>useless,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intermediate.push_back(useless);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent<sp/>col<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbors.clear();</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(col<sp/>&lt;<sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ab7e1c1679b260a1e1198092fa5806cf0" kindref="member">getNumAgents</ref>())</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isConnected<sp/>=<sp/>std::stoi(intermediate[col]);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isConnected<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbors.insert(col);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col++;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ab4580facff3d0c84ca534bd1c9637d52" kindref="member">n</ref>[counter]<sp/>=<sp/>Node(counter,<sp/>neighbors);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counter++;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line.find(</highlight><highlight class="stringliteral">&quot;StartingBelief&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intermediate.clear();</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ac4e4a83a61adbb6001a2e222cc1cb906" kindref="member">startingBelief</ref><sp/>=<sp/>Vector(this-&gt;<ref refid="classsdm_1_1NDPOMDP_1afbc366261926432eb50d49a5a338ba39" kindref="member">getNumStates</ref>());</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1afbc366261926432eb50d49a5a338ba39" kindref="member">getNumStates</ref>())</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::getline(<ref refid="classsdm_1_1NDPOMDP_1a2e593767967afa896204ce499ac4b02a" kindref="member">input_file</ref>,<sp/>line);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ac4e4a83a61adbb6001a2e222cc1cb906" kindref="member">startingBelief</ref>[x]<sp/>=<sp/>std::stod(line);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x++;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line.find(</highlight><highlight class="stringliteral">&quot;Reward&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>les<sp/>actions<sp/>s&apos;ecrivent<sp/>sour<sp/>la<sp/>forme<sp/>a_0<sp/>a_1<sp/>a_2<sp/>a_3<sp/>a_4,<sp/>ou<sp/>a_i<sp/>est<sp/>remplac�<sp/>par<sp/>x<sp/>lorsque<sp/>l&apos;agent<sp/>i<sp/>n&apos;est<sp/>pas<sp/>actif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sinon<sp/>a_i<sp/>appartient<sp/>�<sp/>une<sp/>valeur<sp/>comprise<sp/>entre<sp/>0<sp/>et<sp/>le<sp/>nombre<sp/>d&apos;action<sp/>de<sp/>l&apos;agent<sp/>i<sp/>---<sp/><sp/>moins<sp/>1<sp/>(non?).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::getline(<ref refid="classsdm_1_1NDPOMDP_1a2e593767967afa896204ce499ac4b02a" kindref="member">input_file</ref>,<sp/>line);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(line.find(</highlight><highlight class="stringliteral">&quot;/*&quot;</highlight><highlight class="normal">)<sp/>==<sp/>std::string::npos)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intermediate.clear();</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intermediate2.clear();</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>check(line);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(std::getline(check,<sp/>useless,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intermediate.push_back(useless);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>key<sp/>=<sp/>intermediate[0];</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>check1(key);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(std::getline(check1,<sp/>useless2,<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intermediate2.push_back(useless2);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>x<sp/>=<sp/>intermediate2[1];</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>u<sp/>=<sp/>intermediate2[2];</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>std::stoi(intermediate2[0]);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>std::stod(intermediate[1]);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ab4580facff3d0c84ca534bd1c9637d52" kindref="member">n</ref>[id].<ref refid="classsdm_1_1NDPOMDP_1_1Node_1a4d77c293080c2138a8f3ac8ccefae030" kindref="member">rewardFunction</ref>[x<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>+<sp/>u]<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::getline(<ref refid="classsdm_1_1NDPOMDP_1a2e593767967afa896204ce499ac4b02a" kindref="member">input_file</ref>,<sp/>line);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line.find(</highlight><highlight class="stringliteral">&quot;Transitions&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>double&gt;<sp/>transitionFunction;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a735a2840e5672506430add6ec7ecbf13" kindref="member">stateSuccessor</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::unordered_set&lt;state&gt;[this-&gt;<ref refid="classsdm_1_1NDPOMDP_1afbc366261926432eb50d49a5a338ba39" kindref="member">getNumStates</ref>()];</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::getline(<ref refid="classsdm_1_1NDPOMDP_1a2e593767967afa896204ce499ac4b02a" kindref="member">input_file</ref>,<sp/>line);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(line.find(</highlight><highlight class="stringliteral">&quot;/*&quot;</highlight><highlight class="normal">)<sp/>==<sp/>std::string::npos)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intermediate.clear();</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intermediate2.clear();</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>check(line);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(std::getline(check,<sp/>useless,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intermediate.push_back(useless);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>key1<sp/>=<sp/>intermediate[0];</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>key2<sp/>=<sp/>intermediate[1];</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prob<sp/>=<sp/>std::stod(intermediate[2]);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitionFunction[key1<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>+<sp/>key2]<sp/>=<sp/>prob;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prob<sp/>&gt;<sp/>0.0000001)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a735a2840e5672506430add6ec7ecbf13" kindref="member">stateSuccessor</ref>[std::stoi(key1)].insert(std::stoi(key2));</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::getline(<ref refid="classsdm_1_1NDPOMDP_1a2e593767967afa896204ce499ac4b02a" kindref="member">input_file</ref>,<sp/>line);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(agent<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>0;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;<sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ab7e1c1679b260a1e1198092fa5806cf0" kindref="member">getNumAgents</ref>();<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">++)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ab4580facff3d0c84ca534bd1c9637d52" kindref="member">n</ref>[id].<ref refid="classsdm_1_1NDPOMDP_1_1Node_1a9882eb9582ee929794e55a8233f5fd71" kindref="member">transitionFunction</ref><sp/>=<sp/>transitionFunction;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line.find(</highlight><highlight class="stringliteral">&quot;Observations&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::getline(<ref refid="classsdm_1_1NDPOMDP_1a2e593767967afa896204ce499ac4b02a" kindref="member">input_file</ref>,<sp/>line);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(line.find(</highlight><highlight class="stringliteral">&quot;/*&quot;</highlight><highlight class="normal">)<sp/>==<sp/>std::string::npos)</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intermediate.clear();</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intermediate2.clear();</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>check(line);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(std::getline(check,<sp/>useless,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intermediate.push_back(useless);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>x<sp/>=<sp/>intermediate[1];</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>u<sp/>=<sp/>intermediate[2];</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>z<sp/>=<sp/>intermediate[3];</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>std::stoi(intermediate[0]);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prob<sp/>=<sp/>std::stod(intermediate[4]);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prob<sp/>&gt;<sp/>0.00001)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a58e31b9e7a2b2be5f35e077a586f9ffb" kindref="member">observationSuccessor</ref>[std::to_string(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>+<sp/>u<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>+<sp/>x].insert(std::stoi(z));</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a6d6f71b2627615ee59f489c220c20d46" kindref="member">observationsmatrix</ref>[x<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>+<sp/>u<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>+<sp/>z]<sp/>=<sp/>prob;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ab4580facff3d0c84ca534bd1c9637d52" kindref="member">n</ref>[id].<ref refid="classsdm_1_1NDPOMDP_1_1Node_1a8cf7b1f0048733f3c5a94df97a099eb5" kindref="member">observationFunction</ref>[x<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>+<sp/>u<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>+<sp/>z]<sp/>=<sp/>prob;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::getline(<ref refid="classsdm_1_1NDPOMDP_1a2e593767967afa896204ce499ac4b02a" kindref="member">input_file</ref>,<sp/>line);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsdm_1_1NDPOMDP_1_1Node_1ad4bbf2ca16ae76fdc7969ef2831fdc1f" kindref="member">NDPOMDP::Node::Node</ref>(agent<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>std::unordered_set&lt;agent&gt;<sp/>neighbors)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>id;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;neighbors<sp/>=<sp/>neighbors;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsdm_1_1NDPOMDP_1_1Node_1ad4bbf2ca16ae76fdc7969ef2831fdc1f" kindref="member">NDPOMDP::Node::Node</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::pair&lt;number,<sp/>number&gt;&gt;<sp/><ref refid="classsdm_1_1NDPOMDP_1a5f789e2e605b92cdf570cd5cb48d529c" kindref="member">NDPOMDP::getUniqueValidNeighbors</ref>()</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::pair&lt;number,<sp/>number&gt;&gt;<sp/>valid_neighbors;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(number<sp/>ag<sp/>=<sp/>0;<sp/>ag<sp/>&lt;<sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ab7e1c1679b260a1e1198092fa5806cf0" kindref="member">getNumAgents</ref>();<sp/>ag++)</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(number<sp/>ag2<sp/>=<sp/>0;<sp/>ag2<sp/>&lt;<sp/>ag;<sp/>ag2++)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ab4580facff3d0c84ca534bd1c9637d52" kindref="member">n</ref>[ag].neighbors.count(ag2)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid_neighbors.push_back({ag,<sp/>ag2});</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>valid_neighbors;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsdm_1_1NDPOMDP_1aff346984fef931a71e8a686814647205" kindref="member">NDPOMDP::createDAG</ref>()</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a2db02afde5593c6d18ae2a360ff7d543" kindref="member">root</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ab4580facff3d0c84ca534bd1c9637d52" kindref="member">n</ref>[<ref refid="classsdm_1_1NDPOMDP_1a2db02afde5593c6d18ae2a360ff7d543" kindref="member">root</ref>].<ref refid="classsdm_1_1NDPOMDP_1_1Node_1a6b798033bb5f1e0c9a78ea61a3464b04" kindref="member">parent</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ab4580facff3d0c84ca534bd1c9637d52" kindref="member">n</ref>[1].<ref refid="classsdm_1_1NDPOMDP_1_1Node_1ae1e5e8b486cd10e875102608d951a636" kindref="member">children</ref>.push_back(0);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ab4580facff3d0c84ca534bd1c9637d52" kindref="member">n</ref>[0].<ref refid="classsdm_1_1NDPOMDP_1_1Node_1a6b798033bb5f1e0c9a78ea61a3464b04" kindref="member">parent</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ab4580facff3d0c84ca534bd1c9637d52" kindref="member">n</ref>[2].<ref refid="classsdm_1_1NDPOMDP_1_1Node_1a6b798033bb5f1e0c9a78ea61a3464b04" kindref="member">parent</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ab4580facff3d0c84ca534bd1c9637d52" kindref="member">n</ref>[1].<ref refid="classsdm_1_1NDPOMDP_1_1Node_1ae1e5e8b486cd10e875102608d951a636" kindref="member">children</ref>.push_back(2);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ab4580facff3d0c84ca534bd1c9637d52" kindref="member">n</ref>[2].<ref refid="classsdm_1_1NDPOMDP_1_1Node_1ae1e5e8b486cd10e875102608d951a636" kindref="member">children</ref>.push_back(3);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ab4580facff3d0c84ca534bd1c9637d52" kindref="member">n</ref>[3].<ref refid="classsdm_1_1NDPOMDP_1_1Node_1a6b798033bb5f1e0c9a78ea61a3464b04" kindref="member">parent</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ab4580facff3d0c84ca534bd1c9637d52" kindref="member">n</ref>[3].<ref refid="classsdm_1_1NDPOMDP_1_1Node_1ae1e5e8b486cd10e875102608d951a636" kindref="member">children</ref>.push_back(4);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ab4580facff3d0c84ca534bd1c9637d52" kindref="member">n</ref>[4].<ref refid="classsdm_1_1NDPOMDP_1_1Node_1a6b798033bb5f1e0c9a78ea61a3464b04" kindref="member">parent</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsdm_1_1NDPOMDP_1a7d367a645f19a8a0bf32a3481c5f11ab" kindref="member">NDPOMDP::printDAG</ref>(agent<sp/><ref refid="classsdm_1_1NDPOMDP_1a2db02afde5593c6d18ae2a360ff7d543" kindref="member">root</ref>)</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>root<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(agent<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ab4580facff3d0c84ca534bd1c9637d52" kindref="member">n</ref>[<ref refid="classsdm_1_1NDPOMDP_1a2db02afde5593c6d18ae2a360ff7d543" kindref="member">root</ref>].<ref refid="classsdm_1_1NDPOMDP_1_1Node_1ae1e5e8b486cd10e875102608d951a636" kindref="member">children</ref>.size();<sp/>i++)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent<sp/>childi<sp/>=<sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ab4580facff3d0c84ca534bd1c9637d52" kindref="member">n</ref>[<ref refid="classsdm_1_1NDPOMDP_1a2db02afde5593c6d18ae2a360ff7d543" kindref="member">root</ref>].<ref refid="classsdm_1_1NDPOMDP_1_1Node_1ae1e5e8b486cd10e875102608d951a636" kindref="member">children</ref>[i];</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/><ref refid="classsdm_1_1NDPOMDP_1ab4580facff3d0c84ca534bd1c9637d52" kindref="member">n</ref>[root].children.size()<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>childi;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>childi<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classsdm_1_1NDPOMDP_1a61b0273ee5d8273ccd85d41c88d168a4" kindref="member">NDPOMDP::getReward</ref>(state<sp/>x,<sp/>agent<sp/>id1,<sp/>agent<sp/>id2,<sp/><ref refid="namespacesdm_1ae21094a69e920050f2aa1c7b5c0d2677" kindref="member">action</ref><sp/>u1,<sp/><ref refid="namespacesdm_1ae21094a69e920050f2aa1c7b5c0d2677" kindref="member">action</ref><sp/>u2)</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>s1<sp/>=<sp/>std::to_string(x)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>s2<sp/>=<sp/>std::to_string(x)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>s3<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;x:&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(agent<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ab7e1c1679b260a1e1198092fa5806cf0" kindref="member">getNumAgents</ref>();<sp/>i++)</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>id1)</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>=<sp/>s1<sp/>+<sp/>std::to_string(u1);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>s2<sp/>+<sp/>std::to_string(u1);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>s3<sp/>+<sp/>std::to_string(u1);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>id2)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>=<sp/>s1<sp/>+<sp/>std::to_string(u2);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>s2<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>s3<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>=<sp/>s1<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>s2<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>s3<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ab4580facff3d0c84ca534bd1c9637d52" kindref="member">n</ref>[id1].rewardFunction.count(s3)<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ab4580facff3d0c84ca534bd1c9637d52" kindref="member">n</ref>[id1].rewardFunction[s3];</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ab4580facff3d0c84ca534bd1c9637d52" kindref="member">n</ref>[id1].rewardFunction.count(s2)<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ab4580facff3d0c84ca534bd1c9637d52" kindref="member">n</ref>[id1].rewardFunction[s2];</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ab4580facff3d0c84ca534bd1c9637d52" kindref="member">n</ref>[id1].rewardFunction.count(s1)<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ab4580facff3d0c84ca534bd1c9637d52" kindref="member">n</ref>[id1].rewardFunction[s1];</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-5;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classsdm_1_1NDPOMDP_1a7d3b4545e602f3afc8259b6d0d9c087f" kindref="member">NDPOMDP::getInitialBelief</ref>(state<sp/>x)</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ac4e4a83a61adbb6001a2e222cc1cb906" kindref="member">startingBelief</ref>[x];</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classsdm_1_1NDPOMDP_1a19328860532255aecd1ce2695d8063e5" kindref="member">NDPOMDP::getP</ref>(state<sp/>x,<sp/><ref refid="namespacesdm_1ae21094a69e920050f2aa1c7b5c0d2677" kindref="member">action</ref>,<sp/>state<sp/>y)</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>sx<sp/>=<sp/>std::to_string(x);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>sy<sp/>=<sp/>std::to_string(y);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>key<sp/>=<sp/>sx<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>+<sp/>sy;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ab4580facff3d0c84ca534bd1c9637d52" kindref="member">n</ref>[0].<ref refid="classsdm_1_1NDPOMDP_1_1Node_1a9882eb9582ee929794e55a8233f5fd71" kindref="member">transitionFunction</ref>[key];</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classsdm_1_1NDPOMDP_1aa63916de92d04751bc7489904ab12100" kindref="member">NDPOMDP::getObservation</ref>(agent<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/><ref refid="namespacesdm_1ae21094a69e920050f2aa1c7b5c0d2677" kindref="member">action</ref><sp/>u,<sp/>state<sp/>y,<sp/><ref refid="namespacesdm_1af59f791f3163aa7cf0dee3a7f7c408a4" kindref="member">observation</ref><sp/>z)</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1ab4580facff3d0c84ca534bd1c9637d52" kindref="member">n</ref>[id].<ref refid="classsdm_1_1NDPOMDP_1_1Node_1a8cf7b1f0048733f3c5a94df97a099eb5" kindref="member">observationFunction</ref>[std::to_string(y)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(u)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(z)];</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classsdm_1_1NDPOMDP_1a7620ba8f400b7b265c300ddede3227ac" kindref="member">NDPOMDP::getQ</ref>(state<sp/>x,<sp/>agent<sp/>id1,<sp/><ref refid="namespacesdm_1ae21094a69e920050f2aa1c7b5c0d2677" kindref="member">action</ref><sp/>u1,<sp/><ref refid="namespacesdm_1af59f791f3163aa7cf0dee3a7f7c408a4" kindref="member">observation</ref><sp/>z1,<sp/>agent<sp/>id2,<sp/><ref refid="namespacesdm_1ae21094a69e920050f2aa1c7b5c0d2677" kindref="member">action</ref><sp/>u2,<sp/><ref refid="namespacesdm_1af59f791f3163aa7cf0dee3a7f7c408a4" kindref="member">observation</ref><sp/>z2)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::string<sp/>first<sp/>=<sp/>std::to_string(x)<sp/>+<sp/>&quot;:&quot;<sp/>+<sp/>std::to_string(u1)<sp/>+<sp/>&quot;:&quot;<sp/>+<sp/>std::to_string(z1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::string<sp/>second<sp/>=<sp/>std::to_string(x)<sp/>+<sp/>&quot;:&quot;<sp/>+<sp/>std::to_string(u2)<sp/>+<sp/>&quot;:&quot;<sp/>+<sp/>std::to_string(z2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val1<sp/>=<sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1aa63916de92d04751bc7489904ab12100" kindref="member">getObservation</ref>(id1,<sp/>u1,<sp/>x,<sp/>z1);<sp/></highlight><highlight class="comment">//this-&gt;n[id1].observationFunction[first];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val2<sp/>=<sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1aa63916de92d04751bc7489904ab12100" kindref="member">getObservation</ref>(id2,<sp/>u2,<sp/>x,<sp/>z2);<sp/></highlight><highlight class="comment">//this-&gt;n[id2].observationFunction[second];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val1<sp/>*<sp/>val2;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_set&lt;state&gt;<sp/><ref refid="classsdm_1_1NDPOMDP_1abf31af5ea8d9ee5a5c5bc8e1972ab31e" kindref="member">NDPOMDP::getStateSuccessor</ref>(state<sp/>x)</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a735a2840e5672506430add6ec7ecbf13" kindref="member">stateSuccessor</ref>[x];</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_set&lt;observation&gt;<sp/><ref refid="classsdm_1_1NDPOMDP_1a5bc61f5d55dfc9e6ee8a695aa09e4a22" kindref="member">NDPOMDP::getObservationSuccessor</ref>(agent<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/><ref refid="namespacesdm_1ae21094a69e920050f2aa1c7b5c0d2677" kindref="member">action</ref><sp/>u,<sp/>state<sp/>x)</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classsdm_1_1NDPOMDP_1a58e31b9e7a2b2be5f35e077a586f9ffb" kindref="member">observationSuccessor</ref>[std::to_string(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(u)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(x)];</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>sdm</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/ndpomdp.cpp"/>
  </compounddef>
</doxygen>
