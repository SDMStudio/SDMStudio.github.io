<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="reward_8cpp" kind="file" language="C++">
    <compoundname>reward.cpp</compoundname>
    <includes refid="reward_8hpp" local="no">sdm/core/reward.hpp</includes>
    <includes refid="linear__algebra_2vector_8hpp" local="no">sdm/utils/linear_algebra/vector.hpp</includes>
    <incdepgraph>
      <node id="481">
        <label>assert.h</label>
      </node>
      <node id="475">
        <label>boost/bimap.hpp</label>
      </node>
      <node id="476">
        <label>sdm/utils/linear_algebra/vector.hpp</label>
        <link refid="linear__algebra_2vector_8hpp"/>
        <childnode refid="477" relation="include">
        </childnode>
        <childnode refid="478" relation="include">
        </childnode>
        <childnode refid="479" relation="include">
        </childnode>
        <childnode refid="480" relation="include">
        </childnode>
        <childnode refid="481" relation="include">
        </childnode>
        <childnode refid="471" relation="include">
        </childnode>
      </node>
      <node id="480">
        <label>eigen3/Eigen/Dense</label>
      </node>
      <node id="477">
        <label>boost/numeric/ublas/vector.hpp</label>
      </node>
      <node id="478">
        <label>boost/numeric/ublas/io.hpp</label>
      </node>
      <node id="470">
        <label>vector</label>
      </node>
      <node id="469">
        <label>sdm/core/reward.hpp</label>
        <link refid="reward_8hpp"/>
        <childnode refid="470" relation="include">
        </childnode>
        <childnode refid="471" relation="include">
        </childnode>
        <childnode refid="476" relation="include">
        </childnode>
      </node>
      <node id="473">
        <label>iostream</label>
      </node>
      <node id="472">
        <label>cstddef</label>
      </node>
      <node id="474">
        <label>unordered_map</label>
      </node>
      <node id="468">
        <label>/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/reward.cpp</label>
        <link refid="reward_8cpp"/>
        <childnode refid="469" relation="include">
        </childnode>
        <childnode refid="476" relation="include">
        </childnode>
      </node>
      <node id="479">
        <label>eigen3/Eigen/Sparse</label>
      </node>
      <node id="471">
        <label>sdm/types.hpp</label>
        <link refid="types_8hpp"/>
        <childnode refid="472" relation="include">
        </childnode>
        <childnode refid="473" relation="include">
        </childnode>
        <childnode refid="474" relation="include">
        </childnode>
        <childnode refid="475" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacesdm">sdm</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*=============================================================================</highlight></codeline>
<codeline lineno="2"><highlight class="comment">Copyright<sp/>(C)<sp/>2016<sp/>Jilles<sp/>Steeve<sp/>Dibangoye</highlight></codeline>
<codeline lineno="3"><highlight class="comment">==============================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="reward_8hpp" kindref="compound">sdm/core/reward.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="linear__algebra_2vector_8hpp" kindref="compound">sdm/utils/linear_algebra/vector.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesdm" kindref="compound">sdm</ref></highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><ref refid="classsdm_1_1Reward_1a71c7c6dbb0d39f8ccaf707278ebb4d1a" kindref="member">Reward::Reward</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><ref refid="classsdm_1_1Reward_1a71c7c6dbb0d39f8ccaf707278ebb4d1a" kindref="member">Reward::Reward</ref>(<ref refid="classsdm_1_1Reward_1a71c7c6dbb0d39f8ccaf707278ebb4d1a" kindref="member">Reward</ref><sp/>&amp;copy)<sp/>:<sp/><ref refid="classsdm_1_1Reward_1ae8509e624b55ee6e15d8814f8f6cdee1" kindref="member">rewards</ref>(copy.<ref refid="classsdm_1_1Reward_1a768851a46f3b72385e8f313ef55ab350" kindref="member">getReward</ref>()),<sp/><ref refid="classsdm_1_1Reward_1aa2110954bef5f4f020a52f50fa0ba450" kindref="member">max</ref>(copy.<ref refid="classsdm_1_1Reward_1a809f460ec82bce2a57470ca0bf51086d" kindref="member">getMaxReward</ref>()),<sp/><ref refid="classsdm_1_1Reward_1abf48ec2fcde5e778fe6a63df78bd75e7" kindref="member">min</ref>(copy.<ref refid="classsdm_1_1Reward_1a723f6a8dda8d4d1d571aa9e2d3f8901b" kindref="member">getMinReward</ref>())</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><ref refid="classsdm_1_1Reward_1a71c7c6dbb0d39f8ccaf707278ebb4d1a" kindref="member">Reward::Reward</ref>(<ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref><sp/>num_jactions,<sp/><ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref><sp/>num_states)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;initReward(num_jactions,<sp/>num_states);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsdm_1_1Reward_1ab0afb1e0dcd38fa94f1719b2d2e2ee28" kindref="member">Reward::initReward</ref>(<ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref><sp/>num_jactions,<sp/><ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref><sp/>num_states)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref><sp/>a;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(a<sp/>=<sp/>0;<sp/>a<sp/>&lt;<sp/>num_jactions;<sp/>++a)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>Vector(num_states);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v.init(0.0);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;rewards.push_back(v);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classsdm_1_1Reward_1a768851a46f3b72385e8f313ef55ab350" kindref="member">Reward::getReward</ref>(<ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref><sp/>s,<sp/><ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref><sp/>a)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="33"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;rewards[a][s];</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector<sp/>&amp;<ref refid="classsdm_1_1Reward_1a768851a46f3b72385e8f313ef55ab350" kindref="member">Reward::getReward</ref>(<ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref><sp/>a)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="38"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;rewards[a];</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Vector&gt;<sp/>&amp;<ref refid="classsdm_1_1Reward_1a768851a46f3b72385e8f313ef55ab350" kindref="member">Reward::getReward</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="43"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;rewards;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsdm_1_1Reward_1ab5318a52c4a2efaa61523c2ddaf42377" kindref="member">Reward::setReward</ref>(<ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref><sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector<sp/>&amp;v)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>v.min();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;min<sp/>=<sp/>std::min(r,<sp/>this-&gt;min);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>v.max();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;max<sp/>=<sp/>std::max(r,<sp/>this-&gt;max);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rewards[a]<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsdm_1_1Reward_1ab5318a52c4a2efaa61523c2ddaf42377" kindref="member">Reward::setReward</ref>(<ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref><sp/>s,<sp/><ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref><sp/>a,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;min<sp/>=<sp/>std::min(r,<sp/>this-&gt;min);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;max<sp/>=<sp/>std::max(r,<sp/>this-&gt;max);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rewards[a][s]<sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classsdm_1_1Reward_1a809f460ec82bce2a57470ca0bf51086d" kindref="member">Reward::getMaxReward</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="66"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;max;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classsdm_1_1Reward_1a723f6a8dda8d4d1d571aa9e2d3f8901b" kindref="member">Reward::getMinReward</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="71"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;min;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>sdm</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/reward.cpp"/>
  </compounddef>
</doxygen>
