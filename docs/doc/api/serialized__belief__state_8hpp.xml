<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="serialized__belief__state_8hpp" kind="file" language="C++">
    <compoundname>serialized_belief_state.hpp</compoundname>
    <includes refid="types_8hpp" local="no">sdm/types.hpp</includes>
    <includes refid="belief__state_8hpp" local="no">sdm/core/state/belief_state.hpp</includes>
    <includes refid="serialized__state_8hpp" local="no">sdm/core/state/serialized_state.hpp</includes>
    <includedby refid="serialized__belief__state_8cpp" local="no">/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/state/serialized_belief_state.cpp</includedby>
    <includedby refid="serialized__belief__mdp_8hpp" local="no">/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/serialized_belief_mdp.hpp</includedby>
    <incdepgraph>
      <node id="1080">
        <label>assert.h</label>
      </node>
      <node id="1075">
        <label>sdm/core/state/belief_state.hpp</label>
        <link refid="belief__state_8hpp"/>
        <childnode refid="1070" relation="include">
        </childnode>
        <childnode refid="1076" relation="include">
        </childnode>
        <childnode refid="1085" relation="include">
        </childnode>
      </node>
      <node id="1074">
        <label>boost/bimap.hpp</label>
      </node>
      <node id="1069">
        <label>/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/state/serialized_belief_state.hpp</label>
        <link refid="serialized__belief__state_8hpp"/>
        <childnode refid="1070" relation="include">
        </childnode>
        <childnode refid="1075" relation="include">
        </childnode>
        <childnode refid="1086" relation="include">
        </childnode>
      </node>
      <node id="1077">
        <label>cmath</label>
      </node>
      <node id="1078">
        <label>string</label>
      </node>
      <node id="1087">
        <label>sdm/utils/struct/vector.hpp</label>
        <link refid="struct_2vector_8hpp"/>
        <childnode refid="1072" relation="include">
        </childnode>
        <childnode refid="1079" relation="include">
        </childnode>
      </node>
      <node id="1076">
        <label>sdm/utils/linear_algebra/mapped_vector.hpp</label>
        <link refid="mapped__vector_8hpp"/>
        <childnode refid="1073" relation="include">
        </childnode>
        <childnode refid="1077" relation="include">
        </childnode>
        <childnode refid="1078" relation="include">
        </childnode>
        <childnode refid="1079" relation="include">
        </childnode>
        <childnode refid="1072" relation="include">
        </childnode>
        <childnode refid="1080" relation="include">
        </childnode>
        <childnode refid="1070" relation="include">
        </childnode>
        <childnode refid="1081" relation="include">
        </childnode>
        <childnode refid="1084" relation="include">
        </childnode>
      </node>
      <node id="1084">
        <label>sdm/utils/linear_algebra/mapped_vector.tpp</label>
      </node>
      <node id="1079">
        <label>vector</label>
      </node>
      <node id="1088">
        <label>sdm/utils/struct/pair.hpp</label>
        <link refid="pair_8hpp"/>
        <childnode refid="1072" relation="include">
        </childnode>
        <childnode refid="1087" relation="include">
        </childnode>
      </node>
      <node id="1083">
        <label>sstream</label>
      </node>
      <node id="1082">
        <label>cstdlib</label>
      </node>
      <node id="1072">
        <label>iostream</label>
      </node>
      <node id="1071">
        <label>cstddef</label>
      </node>
      <node id="1073">
        <label>unordered_map</label>
      </node>
      <node id="1081">
        <label>sdm/utils/linear_algebra/vector_impl.hpp</label>
        <link refid="vector__impl_8hpp"/>
        <childnode refid="1082" relation="include">
        </childnode>
        <childnode refid="1083" relation="include">
        </childnode>
      </node>
      <node id="1086">
        <label>sdm/core/state/serialized_state.hpp</label>
        <link refid="serialized__state_8hpp"/>
        <childnode refid="1070" relation="include">
        </childnode>
        <childnode refid="1087" relation="include">
        </childnode>
        <childnode refid="1088" relation="include">
        </childnode>
      </node>
      <node id="1085">
        <label>sdm/core/state/belief_state.tpp</label>
      </node>
      <node id="1070">
        <label>sdm/types.hpp</label>
        <link refid="types_8hpp"/>
        <childnode refid="1071" relation="include">
        </childnode>
        <childnode refid="1072" relation="include">
        </childnode>
        <childnode refid="1073" relation="include">
        </childnode>
        <childnode refid="1074" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1089">
        <label>/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/state/serialized_belief_state.hpp</label>
        <link refid="serialized__belief__state_8hpp"/>
        <childnode refid="1090" relation="include">
        </childnode>
        <childnode refid="1091" relation="include">
        </childnode>
      </node>
      <node id="1090">
        <label>/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/state/serialized_belief_state.cpp</label>
        <link refid="serialized__belief__state_8cpp"/>
      </node>
      <node id="1091">
        <label>/home/dalbert/Documents/SDMStudio/sdms/src/sdm/world/serialized_belief_mdp.hpp</label>
        <link refid="serialized__belief__mdp_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classsdm_1_1SerializedBeliefState" prot="public">sdm::SerializedBeliefState</innerclass>
    <innernamespace refid="namespacesdm">sdm</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="types_8hpp" kindref="compound">sdm/types.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="belief__state_8hpp" kindref="compound">sdm/core/state/belief_state.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="serialized__state_8hpp" kindref="compound">sdm/core/state/serialized_state.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesdm" kindref="compound">sdm</ref></highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9" refid="classsdm_1_1SerializedBeliefState" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsdm_1_1SerializedBeliefState" kindref="compound">SerializedBeliefState</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classsdm_1_1BaseBeliefState" kindref="compound">BaseBeliefState</ref>&lt;SerializedState&gt;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="12" refid="classsdm_1_1SerializedBeliefState_1afb9fd0ab41005c570c8758ed9c43fc31" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classsdm_1_1SerializedState" kindref="compound">state_type</ref><sp/>=<sp/><ref refid="classsdm_1_1SerializedState" kindref="compound">SerializedState</ref>;</highlight></codeline>
<codeline lineno="13" refid="classsdm_1_1SerializedBeliefState_1a3454fc16e1b30ad2157bec97bffd9dbc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classsdm_1_1SerializedBeliefState_1a3454fc16e1b30ad2157bec97bffd9dbc" kindref="member">action_type</ref><sp/>=<sp/><ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsdm_1_1SerializedBeliefState_1a6ad4b225e26fc7e7179a00c1c3f358f0" kindref="member">SerializedBeliefState</ref>();</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsdm_1_1SerializedBeliefState_1a6ad4b225e26fc7e7179a00c1c3f358f0" kindref="member">SerializedBeliefState</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>default_value);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsdm_1_1SerializedBeliefState_1a6ad4b225e26fc7e7179a00c1c3f358f0" kindref="member">SerializedBeliefState</ref>(<ref refid="namespacesdm_1afd54d1d7100c999633af5e7bda412b78" kindref="member">std::size_t</ref><sp/><ref refid="classsdm_1_1MappedVector_1aa21da534045aee8330037819acc0f81b" kindref="member">size</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>default_value);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsdm_1_1SerializedBeliefState_1a6ad4b225e26fc7e7179a00c1c3f358f0" kindref="member">SerializedBeliefState</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsdm_1_1SerializedBeliefState" kindref="compound">SerializedBeliefState</ref><sp/>&amp;v);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>sdm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>namespace<sp/>std</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>struct<sp/>hash&lt;sdm::BeliefState&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>sdm::BeliefState<sp/>argument_type;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>std::size_t<sp/>result_type;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inline<sp/>result_type<sp/>operator()(const<sp/>argument_type<sp/>&amp;in)<sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_t<sp/>seed<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(auto<sp/>&amp;v<sp/>:<sp/>in)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//Combine<sp/>the<sp/>hash<sp/>of<sp/>the<sp/>current<sp/>vector<sp/>with<sp/>the<sp/>hashes<sp/>of<sp/>the<sp/>previous<sp/>ones</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdm::hash_combine(seed,<sp/>v);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>seed;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight></codeline>
    </programlisting>
    <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/core/state/serialized_belief_state.hpp"/>
  </compounddef>
</doxygen>
