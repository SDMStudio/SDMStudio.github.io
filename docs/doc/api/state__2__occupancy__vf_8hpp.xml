<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="state__2__occupancy__vf_8hpp" kind="file" language="C++">
    <compoundname>state_2_occupancy_vf.hpp</compoundname>
    <includes refid="types_8hpp" local="no">sdm/types.hpp</includes>
    <includes refid="function_8hpp" local="no">sdm/core/function.hpp</includes>
    <includes local="no">sdm/utils/value_function/state_2_occupancy_vf.tpp</includes>
    <includedby refid="initializer_8hpp" local="no">/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/value_function/initializer.hpp</includedby>
    <incdepgraph>
      <node id="3416">
        <label>boost/bimap.hpp</label>
      </node>
      <node id="3418">
        <label>sdm/utils/value_function/state_2_occupancy_vf.tpp</label>
      </node>
      <node id="3417">
        <label>sdm/core/function.hpp</label>
        <link refid="function_8hpp"/>
      </node>
      <node id="3414">
        <label>iostream</label>
      </node>
      <node id="3413">
        <label>cstddef</label>
      </node>
      <node id="3415">
        <label>unordered_map</label>
      </node>
      <node id="3411">
        <label>/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/value_function/state_2_occupancy_vf.hpp</label>
        <link refid="state__2__occupancy__vf_8hpp"/>
        <childnode refid="3412" relation="include">
        </childnode>
        <childnode refid="3417" relation="include">
        </childnode>
        <childnode refid="3418" relation="include">
        </childnode>
      </node>
      <node id="3412">
        <label>sdm/types.hpp</label>
        <link refid="types_8hpp"/>
        <childnode refid="3413" relation="include">
        </childnode>
        <childnode refid="3414" relation="include">
        </childnode>
        <childnode refid="3415" relation="include">
        </childnode>
        <childnode refid="3416" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3427">
        <label>/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/value_function/value_functions.hpp</label>
        <link refid="value__functions_8hpp"/>
      </node>
      <node id="3421">
        <label>/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/value_function/initializer/mdp_initializer.hpp</label>
        <link refid="mdp__initializer_8hpp"/>
        <childnode refid="3422" relation="include">
        </childnode>
        <childnode refid="3423" relation="include">
        </childnode>
      </node>
      <node id="3426">
        <label>/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/value_function/tabular_value_function.hpp</label>
        <link refid="tabular__value__function_8hpp"/>
        <childnode refid="3422" relation="include">
        </childnode>
        <childnode refid="3427" relation="include">
        </childnode>
      </node>
      <node id="3424">
        <label>/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/value_function/initializer/pomdp_initializer.hpp</label>
        <link refid="pomdp__initializer_8hpp"/>
        <childnode refid="3423" relation="include">
        </childnode>
      </node>
      <node id="3422">
        <label>/home/dalbert/Documents/SDMStudio/sdms/src/sdm/algorithms.hpp</label>
        <link refid="algorithms_8hpp"/>
      </node>
      <node id="3420">
        <label>/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/value_function/initializer.hpp</label>
        <link refid="initializer_8hpp"/>
        <childnode refid="3421" relation="include">
        </childnode>
        <childnode refid="3424" relation="include">
        </childnode>
        <childnode refid="3423" relation="include">
        </childnode>
        <childnode refid="3425" relation="include">
        </childnode>
        <childnode refid="3426" relation="include">
        </childnode>
      </node>
      <node id="3423">
        <label>/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/value_function/initializers.hpp</label>
        <link refid="initializers_8hpp"/>
        <childnode refid="3422" relation="include">
        </childnode>
      </node>
      <node id="3419">
        <label>/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/value_function/state_2_occupancy_vf.hpp</label>
        <link refid="state__2__occupancy__vf_8hpp"/>
        <childnode refid="3420" relation="include">
        </childnode>
      </node>
      <node id="3425">
        <label>/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/value_function/max_plan_vf.hpp</label>
        <link refid="max__plan__vf_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classsdm_1_1State2OccupancyValueFunction" prot="public">sdm::State2OccupancyValueFunction</innerclass>
    <innernamespace refid="namespacesdm">sdm</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="types_8hpp" kindref="compound">sdm/types.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="function_8hpp" kindref="compound">sdm/core/function.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesdm" kindref="compound">sdm</ref></highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TState,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOccupancyState&gt;</highlight></codeline>
<codeline lineno="9" refid="classsdm_1_1State2OccupancyValueFunction" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsdm_1_1State2OccupancyValueFunction" kindref="compound">State2OccupancyValueFunction</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classsdm_1_1BinaryFunction" kindref="compound">BinaryFunction</ref>&lt;TOccupancyState,<sp/>number,<sp/>double&gt;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="12" refid="classsdm_1_1State2OccupancyValueFunction_1a80380c98613d4b75b5059e88d9a414c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;BinaryFunction&lt;TState,<sp/>number,<sp/>double&gt;&gt;<sp/><ref refid="classsdm_1_1State2OccupancyValueFunction_1a80380c98613d4b75b5059e88d9a414c1" kindref="member">mdp_vf_</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsdm_1_1State2OccupancyValueFunction_1a08d36e960cb09e4def0e8b498de66207" kindref="member">State2OccupancyValueFunction</ref>(std::shared_ptr&lt;<ref refid="classsdm_1_1BinaryFunction" kindref="compound">BinaryFunction&lt;TState, number, double&gt;</ref>&gt;<sp/>vf);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;bool<sp/>is_mdp<sp/>=<sp/>std::is_same&lt;TState,<sp/>TOccupancyState&gt;::value&gt;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::enable_if_t&lt;is_mdp,<sp/>double&gt;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsdm_1_1State2OccupancyValueFunction_1a6daf5dacb1986e09136727e6156f44bc" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TOccupancyState<sp/>&amp;ostate,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref><sp/>&amp;tau);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;bool<sp/>is_mdp<sp/>=<sp/>std::is_same&lt;TState,<sp/>TOccupancyState&gt;::value&gt;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::enable_if_t&lt;!is_mdp,<sp/>double&gt;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsdm_1_1State2OccupancyValueFunction_1a6daf5dacb1986e09136727e6156f44bc" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TOccupancyState<sp/>&amp;ostate,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref><sp/>&amp;tau);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classsdm_1_1State2OccupancyValueFunction_1a6daf5dacb1986e09136727e6156f44bc" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TOccupancyState<sp/>&amp;ostate,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacesdm_1a8a7c60fa767668fa52b349d259104595" kindref="member">number</ref><sp/>&amp;tau);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>sdm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sdm/utils/value_function/state_2_occupancy_vf.tpp&gt;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/value_function/state_2_occupancy_vf.hpp"/>
  </compounddef>
</doxygen>
