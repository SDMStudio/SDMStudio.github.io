<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="value__functions_8hpp" kind="file" language="C++">
    <compoundname>value_functions.hpp</compoundname>
    <includes local="no">map</includes>
    <includes refid="value__function_8hpp" local="no">sdm/utils/value_function/value_function.hpp</includes>
    <includes refid="tabular__value__function_8hpp" local="no">sdm/utils/value_function/tabular_value_function.hpp</includes>
    <incdepgraph>
      <node id="3577">
        <label>locale</label>
      </node>
      <node id="3590">
        <label>sdm/world/world_type.hpp</label>
        <link refid="world__type_8hpp"/>
        <childnode refid="3558" relation="include">
        </childnode>
        <childnode refid="3591" relation="include">
        </childnode>
        <childnode refid="3606" relation="include">
        </childnode>
      </node>
      <node id="3578">
        <label>fmt/format.h</label>
      </node>
      <node id="3567">
        <label>assert.h</label>
      </node>
      <node id="3606">
        <label>sdm/utils/decision_rules/det_decision_rule.hpp</label>
        <link refid="det__decision__rule_8hpp"/>
        <childnode refid="3543" relation="include">
        </childnode>
        <childnode refid="3546" relation="include">
        </childnode>
        <childnode refid="3569" relation="include">
        </childnode>
        <childnode refid="3579" relation="include">
        </childnode>
      </node>
      <node id="3591">
        <label>sdm/core/states.hpp</label>
        <link refid="states_8hpp"/>
        <childnode refid="3558" relation="include">
        </childnode>
        <childnode refid="3563" relation="include">
        </childnode>
        <childnode refid="3592" relation="include">
        </childnode>
        <childnode refid="3600" relation="include">
        </childnode>
        <childnode refid="3602" relation="include">
        </childnode>
        <childnode refid="3573" relation="include">
        </childnode>
        <childnode refid="3604" relation="include">
        </childnode>
      </node>
      <node id="3589">
        <label>sdm/core/space/discrete_space.tpp</label>
      </node>
      <node id="3556">
        <label>sdm/algorithms/hsvi.hpp</label>
        <link refid="hsvi_8hpp"/>
        <childnode refid="3557" relation="include">
        </childnode>
        <childnode refid="3558" relation="include">
        </childnode>
        <childnode refid="3562" relation="include">
        </childnode>
        <childnode refid="3563" relation="include">
        </childnode>
        <childnode refid="3544" relation="include">
        </childnode>
        <childnode refid="3576" relation="include">
        </childnode>
        <childnode refid="3581" relation="include">
        </childnode>
      </node>
      <node id="3602">
        <label>sdm/core/state/occupancy_state.hpp</label>
        <link refid="occupancy__state_8hpp"/>
        <childnode refid="3557" relation="include">
        </childnode>
        <childnode refid="3558" relation="include">
        </childnode>
        <childnode refid="3575" relation="include">
        </childnode>
        <childnode refid="3563" relation="include">
        </childnode>
        <childnode refid="3592" relation="include">
        </childnode>
        <childnode refid="3603" relation="include">
        </childnode>
      </node>
      <node id="3600">
        <label>sdm/core/state/belief_state.hpp</label>
        <link refid="belief__state_8hpp"/>
        <childnode refid="3558" relation="include">
        </childnode>
        <childnode refid="3569" relation="include">
        </childnode>
        <childnode refid="3601" relation="include">
        </childnode>
      </node>
      <node id="3561">
        <label>boost/bimap.hpp</label>
      </node>
      <node id="3562">
        <label>sdm/public/algorithm.hpp</label>
        <link refid="algorithm_8hpp"/>
      </node>
      <node id="3599">
        <label>sdm/core/state/jhistory_tree.tpp</label>
      </node>
      <node id="3570">
        <label>cmath</label>
      </node>
      <node id="3583">
        <label>sdm/utils/value_function/state_2_occupancy_vf.tpp</label>
      </node>
      <node id="3609">
        <label>sdm/utils/value_function/tabular_value_function.tpp</label>
      </node>
      <node id="3557">
        <label>string</label>
      </node>
      <node id="3568">
        <label>sdm/utils/linear_algebra/sdms_vector.tpp</label>
      </node>
      <node id="3550">
        <label>sdm/utils/value_function/value_function.tpp</label>
      </node>
      <node id="3543">
        <label>map</label>
      </node>
      <node id="3542">
        <label>/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/value_function/value_functions.hpp</label>
        <link refid="value__functions_8hpp"/>
        <childnode refid="3543" relation="include">
        </childnode>
        <childnode refid="3544" relation="include">
        </childnode>
        <childnode refid="3551" relation="include">
        </childnode>
      </node>
      <node id="3607">
        <label>sdm/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="3557" relation="include">
        </childnode>
        <childnode refid="3608" relation="include">
        </childnode>
      </node>
      <node id="3544">
        <label>sdm/utils/value_function/value_function.hpp</label>
        <link refid="value__function_8hpp"/>
        <childnode refid="3545" relation="include">
        </childnode>
        <childnode refid="3546" relation="include">
        </childnode>
        <childnode refid="3547" relation="include">
        </childnode>
        <childnode refid="3550" relation="include">
        </childnode>
      </node>
      <node id="3595">
        <label>unordered_set</label>
      </node>
      <node id="3546">
        <label>sdm/core/function.hpp</label>
        <link refid="function_8hpp"/>
      </node>
      <node id="3597">
        <label>sdm/core/state/history_tree.tpp</label>
      </node>
      <node id="3574">
        <label>sdm/utils/struct/vector.hpp</label>
        <link refid="struct_2vector_8hpp"/>
        <childnode refid="3552" relation="include">
        </childnode>
        <childnode refid="3571" relation="include">
        </childnode>
      </node>
      <node id="3603">
        <label>sdm/core/state/occupancy_state.tpp</label>
      </node>
      <node id="3608">
        <label>exception</label>
      </node>
      <node id="3569">
        <label>sdm/utils/linear_algebra/mapped_vector.hpp</label>
        <link refid="mapped__vector_8hpp"/>
        <childnode refid="3560" relation="include">
        </childnode>
        <childnode refid="3570" relation="include">
        </childnode>
        <childnode refid="3557" relation="include">
        </childnode>
        <childnode refid="3571" relation="include">
        </childnode>
        <childnode refid="3552" relation="include">
        </childnode>
        <childnode refid="3567" relation="include">
        </childnode>
        <childnode refid="3558" relation="include">
        </childnode>
        <childnode refid="3547" relation="include">
        </childnode>
        <childnode refid="3572" relation="include">
        </childnode>
      </node>
      <node id="3580">
        <label>fstream</label>
      </node>
      <node id="3598">
        <label>sdm/core/state/jhistory_tree.hpp</label>
        <link refid="jhistory__tree_8hpp"/>
        <childnode refid="3593" relation="include">
        </childnode>
        <childnode refid="3587" relation="include">
        </childnode>
        <childnode refid="3599" relation="include">
        </childnode>
      </node>
      <node id="3585">
        <label>sdm/world/solvable_by_hsvi.hpp</label>
        <link refid="solvable__by__hsvi_8hpp"/>
        <childnode refid="3558" relation="include">
        </childnode>
        <childnode refid="3586" relation="include">
        </childnode>
        <childnode refid="3556" relation="include">
        </childnode>
        <childnode refid="3590" relation="include">
        </childnode>
        <childnode refid="3544" relation="include">
        </childnode>
        <childnode refid="3607" relation="include">
        </childnode>
      </node>
      <node id="3593">
        <label>sdm/core/state/history_tree.hpp</label>
        <link refid="history__tree_8hpp"/>
        <childnode refid="3594" relation="include">
        </childnode>
        <childnode refid="3597" relation="include">
        </childnode>
      </node>
      <node id="3565">
        <label>boost/numeric/ublas/vector.hpp</label>
      </node>
      <node id="3566">
        <label>boost/numeric/ublas/io.hpp</label>
      </node>
      <node id="3572">
        <label>sdm/utils/linear_algebra/mapped_vector.tpp</label>
      </node>
      <node id="3551">
        <label>sdm/utils/value_function/tabular_value_function.hpp</label>
        <link refid="tabular__value__function_8hpp"/>
        <childnode refid="3543" relation="include">
        </childnode>
        <childnode refid="3552" relation="include">
        </childnode>
        <childnode refid="3553" relation="include">
        </childnode>
        <childnode refid="3554" relation="include">
        </childnode>
        <childnode refid="3569" relation="include">
        </childnode>
        <childnode refid="3564" relation="include">
        </childnode>
        <childnode refid="3584" relation="include">
        </childnode>
        <childnode refid="3563" relation="include">
        </childnode>
        <childnode refid="3546" relation="include">
        </childnode>
        <childnode refid="3585" relation="include">
        </childnode>
        <childnode refid="3609" relation="include">
        </childnode>
      </node>
      <node id="3586">
        <label>sdm/core/space/discrete_space.hpp</label>
        <link refid="discrete__space_8hpp"/>
        <childnode refid="3571" relation="include">
        </childnode>
        <childnode refid="3561" relation="include">
        </childnode>
        <childnode refid="3558" relation="include">
        </childnode>
        <childnode refid="3587" relation="include">
        </childnode>
        <childnode refid="3588" relation="include">
        </childnode>
        <childnode refid="3589" relation="include">
        </childnode>
      </node>
      <node id="3571">
        <label>vector</label>
      </node>
      <node id="3564">
        <label>sdm/utils/linear_algebra/sdms_vector.hpp</label>
        <link refid="sdms__vector_8hpp"/>
        <childnode refid="3565" relation="include">
        </childnode>
        <childnode refid="3566" relation="include">
        </childnode>
        <childnode refid="3567" relation="include">
        </childnode>
        <childnode refid="3547" relation="include">
        </childnode>
        <childnode refid="3568" relation="include">
        </childnode>
      </node>
      <node id="3575">
        <label>sdm/utils/struct/pair.hpp</label>
        <link refid="pair_8hpp"/>
        <childnode refid="3552" relation="include">
        </childnode>
        <childnode refid="3574" relation="include">
        </childnode>
      </node>
      <node id="3588">
        <label>sdm/core/space/space.hpp</label>
        <link refid="space_8hpp"/>
        <childnode refid="3571" relation="include">
        </childnode>
        <childnode refid="3561" relation="include">
        </childnode>
        <childnode refid="3558" relation="include">
        </childnode>
      </node>
      <node id="3563">
        <label>sdm/core/state/state.hpp</label>
        <link refid="state_8hpp"/>
        <childnode refid="3558" relation="include">
        </childnode>
        <childnode refid="3564" relation="include">
        </childnode>
        <childnode refid="3569" relation="include">
        </childnode>
        <childnode refid="3573" relation="include">
        </childnode>
      </node>
      <node id="3549">
        <label>sstream</label>
      </node>
      <node id="3587">
        <label>sdm/core/joint.hpp</label>
        <link refid="joint_8hpp"/>
        <childnode refid="3571" relation="include">
        </childnode>
        <childnode refid="3558" relation="include">
        </childnode>
        <childnode refid="3579" relation="include">
        </childnode>
        <childnode refid="3546" relation="include">
        </childnode>
        <childnode refid="3574" relation="include">
        </childnode>
      </node>
      <node id="3596">
        <label>sdm/utils/struct/tree.tpp</label>
      </node>
      <node id="3605">
        <label>sdm/core/state/serialized_occupancy_state.tpp</label>
      </node>
      <node id="3576">
        <label>sdm/utils/logging/logger.hpp</label>
        <link refid="logger_8hpp"/>
        <childnode refid="3552" relation="include">
        </childnode>
        <childnode refid="3577" relation="include">
        </childnode>
        <childnode refid="3578" relation="include">
        </childnode>
        <childnode refid="3579" relation="include">
        </childnode>
      </node>
      <node id="3581">
        <label>sdm/algorithms/hsvi.tpp</label>
      </node>
      <node id="3555">
        <label>math.h</label>
      </node>
      <node id="3548">
        <label>cstdlib</label>
      </node>
      <node id="3552">
        <label>iostream</label>
      </node>
      <node id="3559">
        <label>cstddef</label>
      </node>
      <node id="3604">
        <label>sdm/core/state/serialized_occupancy_state.hpp</label>
        <link refid="serialized__occupancy__state_8hpp"/>
        <childnode refid="3557" relation="include">
        </childnode>
        <childnode refid="3558" relation="include">
        </childnode>
        <childnode refid="3575" relation="include">
        </childnode>
        <childnode refid="3563" relation="include">
        </childnode>
        <childnode refid="3573" relation="include">
        </childnode>
        <childnode refid="3605" relation="include">
        </childnode>
      </node>
      <node id="3579">
        <label>sdm/tools.hpp</label>
        <link refid="tools_8hpp"/>
        <childnode refid="3557" relation="include">
        </childnode>
        <childnode refid="3548" relation="include">
        </childnode>
        <childnode refid="3580" relation="include">
        </childnode>
        <childnode refid="3549" relation="include">
        </childnode>
        <childnode refid="3552" relation="include">
        </childnode>
      </node>
      <node id="3560">
        <label>unordered_map</label>
      </node>
      <node id="3554">
        <label>sdm/utils/value_function/initializer.hpp</label>
        <link refid="initializer_8hpp"/>
        <childnode refid="3555" relation="include">
        </childnode>
        <childnode refid="3556" relation="include">
        </childnode>
        <childnode refid="3544" relation="include">
        </childnode>
        <childnode refid="3582" relation="include">
        </childnode>
      </node>
      <node id="3547">
        <label>sdm/utils/linear_algebra/vector_impl.hpp</label>
        <link refid="vector__impl_8hpp"/>
        <childnode refid="3548" relation="include">
        </childnode>
        <childnode refid="3549" relation="include">
        </childnode>
      </node>
      <node id="3553">
        <label>type_traits</label>
      </node>
      <node id="3573">
        <label>sdm/core/state/serialized_state.hpp</label>
        <link refid="serialized__state_8hpp"/>
        <childnode refid="3558" relation="include">
        </childnode>
        <childnode refid="3574" relation="include">
        </childnode>
        <childnode refid="3575" relation="include">
        </childnode>
      </node>
      <node id="3584">
        <label>sdm/utils/backup_operator/backup_operator.hpp</label>
        <link refid="backup__operator_8hpp"/>
        <childnode refid="3555" relation="include">
        </childnode>
        <childnode refid="3544" relation="include">
        </childnode>
      </node>
      <node id="3592">
        <label>sdm/core/state/history.hpp</label>
        <link refid="history_8hpp"/>
        <childnode refid="3571" relation="include">
        </childnode>
        <childnode refid="3563" relation="include">
        </childnode>
        <childnode refid="3593" relation="include">
        </childnode>
        <childnode refid="3598" relation="include">
        </childnode>
      </node>
      <node id="3601">
        <label>sdm/core/state/belief_state.tpp</label>
      </node>
      <node id="3582">
        <label>sdm/utils/value_function/state_2_occupancy_vf.hpp</label>
        <link refid="state__2__occupancy__vf_8hpp"/>
        <childnode refid="3558" relation="include">
        </childnode>
        <childnode refid="3546" relation="include">
        </childnode>
        <childnode refid="3583" relation="include">
        </childnode>
      </node>
      <node id="3545">
        <label>memory</label>
      </node>
      <node id="3594">
        <label>sdm/utils/struct/tree.hpp</label>
        <link refid="tree_8hpp"/>
        <childnode refid="3595" relation="include">
        </childnode>
        <childnode refid="3560" relation="include">
        </childnode>
        <childnode refid="3545" relation="include">
        </childnode>
        <childnode refid="3552" relation="include">
        </childnode>
        <childnode refid="3558" relation="include">
        </childnode>
        <childnode refid="3579" relation="include">
        </childnode>
        <childnode refid="3596" relation="include">
        </childnode>
      </node>
      <node id="3558">
        <label>sdm/types.hpp</label>
        <link refid="types_8hpp"/>
        <childnode refid="3559" relation="include">
        </childnode>
        <childnode refid="3552" relation="include">
        </childnode>
        <childnode refid="3560" relation="include">
        </childnode>
        <childnode refid="3561" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classsdm_1_1ValueFunctionFactory" prot="public">sdm::ValueFunctionFactory</innerclass>
    <innernamespace refid="namespacesdm">sdm</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="11"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="value__function_8hpp" kindref="compound">sdm/utils/value_function/value_function.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="tabular__value__function_8hpp" kindref="compound">sdm/utils/value_function/tabular_value_function.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesdm" kindref="compound">sdm</ref></highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TState,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TAction,<sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TA&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TValueFunction&gt;</highlight></codeline>
<codeline lineno="20" refid="namespacesdm_1aa3e64de31fc0960d8c1ec896ffb55b62" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ValueFunction&lt;TState,<sp/>TAction&gt;&gt;<sp/><ref refid="namespacesdm_1a021677cb937a0e95e24b116408751608" kindref="member">createInstance</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;TValueFunction&lt;TState,<sp/>TAction&gt;&gt;(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TValueFunction&lt;TState,<sp/>TAction&gt;);<sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TState,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TAction&gt;</highlight></codeline>
<codeline lineno="29" refid="classsdm_1_1ValueFunctionFactory" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsdm_1_1ValueFunctionFactory" kindref="compound">ValueFunctionFactory</ref></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>std::shared_ptr&lt;Initializer&lt;TState,<sp/>TAction&gt;&gt;<sp/>(*)()&gt;<sp/><ref refid="classsdm_1_1ValueFunctionFactory_1a21cd7ea06b2044d28d89d75c2e9d9fd9" kindref="member">map_type</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classsdm_1_1ValueFunctionFactory_1a21cd7ea06b2044d28d89d75c2e9d9fd9" kindref="member">map_type</ref><sp/>registry_<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;TabularValueFunction&quot;</highlight><highlight class="normal">,<sp/>&amp;createInstance&lt;TState,<sp/>TAction,<sp/>TabularValueFunction&gt;},</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;MappedValueFunction&quot;</highlight><highlight class="normal">,<sp/>&amp;createInstance&lt;TState,<sp/>TAction,<sp/>MappedValueFunction&gt;},</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39" refid="classsdm_1_1ValueFunctionFactory_1a21cd7ea06b2044d28d89d75c2e9d9fd9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classsdm_1_1ValueFunctionFactory_1a21cd7ea06b2044d28d89d75c2e9d9fd9" kindref="member">map_type</ref><sp/>&amp;getRegistry()</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>registry_;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="namespacesdm_1_1algo_1a39dce981d596f5772a2c652e5c563a47" kindref="member">available</ref>()</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="namespacesdm_1_1algo_1a39dce981d596f5772a2c652e5c563a47" kindref="member">available</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;values<sp/>:<sp/>registry_)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>available.push_back(values.first);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacesdm_1_1algo_1a39dce981d596f5772a2c652e5c563a47" kindref="member">available</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="classsdm_1_1ValueFunctionFactory_1a3302c1e2262296c93c1390d3c0bc96df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Initializer&lt;TState,<sp/>TAction&gt;&gt;<sp/><ref refid="classsdm_1_1ValueFunctionFactory_1a3302c1e2262296c93c1390d3c0bc96df" kindref="member">make</ref>(std::string<sp/>name)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>map_type::iterator<sp/>it<sp/>=<sp/>getRegistry().find(name);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>getRegistry().end())</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it-&gt;second();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TA&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TValueFunction&gt;</highlight></codeline>
<codeline lineno="61" refid="classsdm_1_1ValueFunctionFactory_1ab1f82330d7714fa417822482376bf239" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsdm_1_1ValueFunctionFactory_1ab1f82330d7714fa417822482376bf239" kindref="member">addToRegistry</ref>(std::string<sp/>name)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getRegistry().find(name)<sp/>==<sp/>getRegistry().end())</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getRegistry().insert(std::make_pair(name,<sp/>&amp;createInstance&lt;TState,<sp/>TAction,<sp/>TValueFunction&gt;));</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsdm_1_1exception_1_1Exception" kindref="compound">sdm::exception::Exception</ref>(</highlight><highlight class="stringliteral">&quot;Key<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>already<sp/>used<sp/>in<sp/>ValueFunction<sp/>Registry.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TState,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TAction&gt;</highlight></codeline>
<codeline lineno="75" refid="namespacesdm_1a3aeb92dbbb36a0e9c82bbf488388bb70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Initializer&lt;TState,<sp/>TAction&gt;&gt;<sp/><ref refid="namespacesdm_1a3aeb92dbbb36a0e9c82bbf488388bb70" kindref="member">makeValueFunction</ref>(std::string<sp/>init_name)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsdm_1_1ValueFunctionFactory_1a3302c1e2262296c93c1390d3c0bc96df" kindref="member">ValueFunctionFactory&lt;TState, TAction&gt;::make</ref>(init_name);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>sdm</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/dalbert/Documents/SDMStudio/sdms/src/sdm/utils/value_function/value_functions.hpp"/>
  </compounddef>
</doxygen>
